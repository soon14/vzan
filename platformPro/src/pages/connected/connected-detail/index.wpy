<style lang="less">
.my-card {
  /*头部卡片*/
  .header {
    background: #3fd983 no-repeat;
    height: 200rpx;
    position: relative;
    .card {
      padding: 30rpx;
      width: 690rpx;
      min-height: 380rpx;
      background: rgba(255, 255, 255, 1);
      border-radius: 12rpx;
      box-shadow: 1rpx 9rpx 35rpx rgba(58, 58, 58, 0.16);
      position: absolute;
      top: 0rpx;
      left: 50%;
      margin-left: -345rpx;
      .top {
        border-bottom: 1px solid #eee;
        padding-bottom: 30rpx;
      }
      .bottom {
        margin-top: 30rpx;
        .btn-goShop {
          width: 180rpx;
          height: 90rpx;
          background: rgba(63, 217, 131, 1);
          border-radius: 45rpx;
          text-align: center;
          line-height: 90rpx;
          .text {
            margin-right: 17rpx;
          }
          .icon {
            width: 32rpx;
            height: 32rpx;
            background-color: #fff;
            border-radius: 50%;
            color: #3fd983;
            display: inline-block;
            line-height: 32rpx;
            font-size: 32rpx;
          }
        }
      }
      .avator {
        width: 169rpx;
        height: 169rpx;
        background: rgba(217, 216, 217, 1);
        border-radius: 50%;
      }
    }
  }

  /*有关社交*/
  .social {
    background-color: #f6f6f6;
    padding-top: 179rpx;
    .popularity {
      margin: 65rpx 0;
    }
    .btn-list {
      margin-bottom: 70rpx;
      .btn {
        width: 180rpx;
        height: 90rpx;
        border-radius: 45rpx;
        line-height: 85rpx;
        text-align: center;
      }
      .gb {
        border: 1px solid #d9d8d9;
      }
      .ob {
        border: 1px solid #ff6f30;
      }
    }
  }
  .cD9D8D9 {
    color: #d9d8d9;
  }
  .cFF6F30 {
    color: #ff6f30;
  }
  .activity {
    width: 100%;
    .tab {
      height: 100rpx;
      flex-wrap: nowrap;
      .tab-item {
        height: 100rpx;
        line-height: 100rpx;
        text-align: center;
        width: 50%;
      }
      .tab-active-color {
        color: #000;
      }
    }
    .list {
      min-height: 500rpx;
      padding-bottom: 100rpx;
      .null_ {
        margin-top: 167rpx;
      }
      .item {
        width: 100%;
        margin-bottom: 30rpx;
        padding-right: 30rpx;
        border-bottom: 1px solid #eee;
        .ptos {
          .pto {
            width: 224rpx;
            height: 232rpx;
            background: rgba(217, 216, 217, 1);
            margin-right: 9rpx;
            margin-bottom: 9rpx;
            &:nth-child(3n) {
              margin-right: 0rpx;
            }
          }
        }
      }
    }
  }

  .btn-bottom {
    border-top: 1px solid #eee;
    height: 100rpx;
    position: fixed;
    width: 100%;
    bottom: 0;
    .btn-base {
      width: 224rpx;
      height: 78rpx;
      border-radius: 39rpx;
      line-height: 78rpx;
      text-align: center;
      font-size: 30rpx;
    }
    .btn-base-big {
      width: 457rpx;
      height: 78rpx;
      background: #fff;
      border-radius: 39rpx;
      line-height: 78rpx;
      text-align: center;
      font-size: 30rpx;
      color: #3fd983;
      border: 1px solid #3fd983;
    }
    .btn-send {
      background-color: #3fd983;
      color: #fff;
      &:after {
        border: none;
      }
    }
    .btn-sync {
      border: 1px solid #d9d8d9;
      color: #666;
      margin-right: 22rpx;
    }
  }
  .mt18 {
    margin-top: 0rpx;
  }
  .height129 {
    height: 129rpx;
  }
  .mb0imp {
    margin-bottom: 0 !important;
  }
  .comment {
    line-height: 1.2;
    margin: 5rpx 0;
  }
  .lh12 {
    line-height: 1.4;
  }
   .mt100 {
    margin-top: 100rpx;
  }
  .canvas-hidden {
    position: absolute;
    top: -9999px;
    z-index: 9999;
  }
  
}
</style>
<template>
  <view class="my-card">
    <view class="header">
      <view class="card">
        <view class="wrap">
          <!-- 上部分 -->
          <view class="top f fj">
            <view class="left f fv fj wp65">
              <view class="f fv">
                <text class="f40 c000 t-b ib ellipsis">{{cardInfo.Name}}</text>
                <text class="f26 c666 mt10 ib ellipsis">
                  <text class="mr10">{{cardInfo.Department}}</text>
                  <text>{{cardInfo.Job}}</text>
                </text>
              </view>
              <view class="f30 c333 ellipsis">{{showPhone}}</view>
            </view>
            <view class="right">
              <image class="avator" mode="aspectFill" src="{{cardInfo.ImgUrl}}"></image>
            </view>
          </view>
          <!-- 下部分 -->
          <view class="bottom f fc fj">
            <view class="f fv f26 wp65">
              <text class="c333 ib ellipsis">{{cardInfo.CompanyName}}</text>
              <text class="c666 mt8 ib">{{cardInfo.Address}}</text>
            </view>
            <view class="btn-goShop f26" wx:if="{{isShopExist}}" @tap="goShop">
              <text class="cfff text">进店</text>
              <text class="icon dzicon icon-zhuanyebaniconkuozhan_Distribu2"></text>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="social">
      <view class="tc pw30 lh12 mt100" wx:if="{{cardInfo.Desc}}">“{{cardInfo.Desc}}”</view>
      <view class="popularity lh18 tc f26 c666">
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.ViewCount}}</text>
          <text>人气</text>
        </text>
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.DzCount}}</text>
          <text>点赞</text>
        </text>
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.FollowCount}}</text>
          <text>关注</text>
        </text>
      </view>
      <view class="btn-list lh18 tc">
        <button wx:if="{{!isLike}}" class="btn gb ib mw25 c666 f30" @tap="switchLike">
          <text class="dzicon f36 mr25 cD9D8D9  icon-zhuanyebaniconkuozhan_Recommen"></text>
          <text class="ib">点赞</text>
        </button>
        <button wx:if="{{isLike}}" class="btn ib ob mw25 cFF6F30 f30" @tap="switchLike">
          <text class="dzicon f36 mr25 cFF6F30  icon-zhuanyebaniconkuozhan_Recommen1"></text>
          <text class="ib">已赞</text>
        </button>
        <button wx:if="{{!isAttention}}" class="btn ib mw25 gb c666 f30" @tap="switchAttention">
          <text class="dzicon f40 mr20 cD9D8D9  icon-icon-test"></text>
          <text class="ib">关注</text>
        </button>
        <button wx:if="{{isAttention}}" class="btn ib mw25 ob cFF6F30 f30" @tap="switchAttention">
          <text class="dzicon  f40 mr10 cFF6F30  icon-five-star"></text>
          <text class="ib">已关注</text>
        </button>
        <button class="btn ib mw25 gb c666 f30" open-type="share">
          <text class="dzicon f32 mr25 cD9D8D9  icon-zhuanyebaniconkuozhan_share"></text>
          <text class="ib">分享</text>
        </button>
      </view>
      <view class="bg-w activity">
        <view class="f30 c666 tab f j">
          <view class="tab-item t-b {{activeTabIndex == 0 ? 'tab-active-color' : ''}}" @tap="switchTab(0)">TA的动态</view>
          <view class="tab-item t-b {{activeTabIndex == 1 ? 'tab-active-color' : ''}}" @tap="switchTab(1)">TA的活动轨迹</view>
        </view>
        <view wx:if="{{activeTabIndex == 0}}" class="list pl30 bg-w">
          <view class="item" wx:for="{{hisActivity.list}}" wx:key="{{index}}" @tap="goMsgDetail({{item.Id}}, {{item.MyCardId}})">
            <view class="lh13 c000 mb15 wb line line4">
              <text class="c666 mr10">##{{item.MsgTypeName}}##</text>
              <text>{{item.MsgDetail}}</text>
            </view>
            <view class="ptos cl">
              <image class="pto fl" src="{{this}}" wx:for-item="this" wx:for-index="key" data-index="{{index}}" data-src="{{this}}" wx:for="{{item.ImgList}}"
                wx:key="{{key}}"></image>
            </view>
            <view class="location lh18 f20 c666 ellipsis mb10">
              <text class="dzicon icon-dingwei mr10"></text>{{item.Location}}
            </view>
            <view class="f fj f26 c666">
              <view class="heg80 fg1 tc f fc jc" @tap="goMegDetail">
                <text class="dzicon f30 mr20 icon-liulanliang cD9D8D9"></text>
                <text>{{item.ViewCount}}</text>
              </view>
              <view class="heg80 fg1 tc f fc jc" @tap="goMegDetail">
                <text class="dzicon f30 mr20  cD9D8D9 icon-zhuanyebaniconkuozhan_Consulta1"></text>
                <text>{{item.CommentCount}}</text>
              </view>
              <view class="heg80 fg1 tc f fc jc" @tap.stop="addLike({{item.Id}}, {{index}})">
                <text class="dzicon f30 mr20 icon-aixin {{item.IsDzed ? 'cFF6F30' : 'cD9D8D9'}}"></text>
                <text>{{item.DzCount == 0 ? '赞' : item.DzCount}}</text>
              </view>
            </view>
          </view>
          <view wx:if="{{hisActivity.totalCount == 0}}" class="tc lh15 c333 f30 null_ pr30">暂无数据</view>
        </view>
        <view wx:if="{{activeTabIndex == 1}}" class="list pl30 bg-w">
          <!-- 活动轨迹 -->
          <view class="item mb0imp" wx:for="{{hisActivityLog.list}}" wx:key="{{index}}" @tap="goLogDetail({{item.Datatype}}, {{item.OtherUserId}}, {{item.OtherCardId}}, {{item.MsgId}})">
            <view class="f fj fc height129">
              <view class="my-track fc wp70 f">
                <image class="wh100r mr15 fs" mode="aspectFill" src="{{item.MyImgUrl}}"></image>
                <view class="f fv jc c666 wp85">
                  <text class="f26 ib ellipsis">
                    <text class="mr10">{{item.MyName}}</text>
                    <text class="mr10">{{item.ActionTypeStr}}</text>
                    <text class="c333">{{item.OtherName}}</text>
                  </text>
                  <!-- data type 3: 名片  0: 帖子 -->
                  <text wx:if="{{item.Datatype == 3 || item.Datatype == 0 && item.DataComment == ''}}" class="f20 mt10">{{item.AddTimeStr}}</text>
                  <!-- 评论才有 -->
                  <block wx:if="{{item.Datatype == 0 && item.DataComment != ''}}">
                    <view class="f20 ellipsisLine2 comment c333">{{item.DataComment}}</view>
                    <text class="f20">{{item.AddTimeStr}}</text>
                  </block>
                </view>
              </view>
              <image wx:if="{{item.Datatype == 3}}" mode="aspectFill" class="wh100r" src="{{item.OtherImgUrl}}"></image>
              <block wx:if="{{item.Datatype == 0}}">
                <!-- 假如有图片的话 --> 
                <image wx:if="{{item.DataImgUrl}}" src="{{item.DataImgUrl}}" class="wh100g"></image>
                <view wx:else class="wh100 c333 f20 p10 ellipsisLine3 lh15">{{item.DataContent}}</view>
              </block>
            </view> 
          </view>
          <view wx:if="{{hisActivityLog.count == 0}}" class="tc lh15 c333 f30 null_ pr30">暂无数据</view>
          <comLoading  bgColor="#fff" :showLoading.sync="logLoadMore" :showBottom.sync="logLoadAll" />
        </view>  
      </view>
    </view>
    <comWait :isShow.sync="isWait" />
    <view class="btn-bottom bg-w f fc pl30" wx:if="{{!isMe}}">
      <button class="btn-send btn-base mr10" @tap="sendMsg">
        发私信
      </button>  
      <button class="btn-sync btn-base" @tap="addPhoneContact">
        添加到通信录 
      </button>
      <view class="f fv jc fc f26 mr40 c666" @tap="showCardCode"> 
        <text class="dzicon icon-mingpian lh088 f57 mt6"></text>
        <text class="mt18">名片码</text>    
      </view> 
      <view class="f fv jc fc f26 c666" @tap="goConnect">
        <text class="dzicon icon-fenxiaozhongxin f47"></text>
        <text class="mt18">人脉圈</text> 
      </view>   
    </view> 
    <view class="btn-bottom bg-w f fc pl30" wx:if="{{isMe}}">
      <button class="btn-base-big mr20" @tap="updateCard">
        编辑名片
      </button>
      <view class="f fv jc fc f26 mr40 c666"  @tap="showCardCode">
        <text class="dzicon icon-mingpian lh088 f57 mt6"></text>
        <text class="mt18">名片码</text>
      </view>
      <view class="f fv jc fc f26 c666" @tap="goConnect">
        <text class="dzicon icon-fenxiaozhongxin f47"></text>
        <text class="mt18">人脉圈</text>
      </view>
    </view>
    <comBackHome wx:if="{{enterFromShare}}" />
   <comCanvasMask wx:if="{{renderCard}}" canvasId="canvas-card2" :isShow.sync="renderCard">
      <canvas slot="canvas666" id="canvasCard" canvas-id="canvas-card" style="width:{{canvasWidth}}px; height:{{canvasHeight}}px; margin: 60rpx 50rpx;"></canvas>
    </comCanvasMask> 
    <canvas id="canvasCard2" class="canvas-hidden" canvas-id="canvas-card2" style="width:{{canvasWidth * 3}}px; height:{{canvasHeight * 3}}px;"></canvas>
    <comLogin :openLogin.sync="openLogin"/>
    <comIllegal :isShowIllegal.sync="isShowIllegal"/>
  </view>
</template>
<script>
import wepy from "wepy";
import com_loading from "@/components/com_loading";
import com_wait from "@/components/com_wait";
import { tools, http, core } from "@/lib/core";
import com_backHome from '@/components/com_backHome';
import com_canvasMask from '@/components/com_canvasMask';
import com_login from "@/components/com_login";
import com_illegal from "@/components/com_illegal";
import addr from "@/lib/addr";
const app = wepy.$instance;

export default class index extends wepy.page {
  config = {
    navigationBarBackgroundColor: "#3FD983",
    navigationBarTitleText: "名片",
    enablePullDownRefresh: false,
    navigationBarTextStyle: "#fff",
    enablePullDownRefresh: true
  };
  components = {
    comWait: com_wait,
    comLoading: com_loading,
    comBackHome: com_backHome,
    comCanvasMask: com_canvasMask,
    comLogin: com_login,
    comIllegal: com_illegal
  };
  data = {
    isWait: false,
    isLike: false,
    isAttention: false,
    activeTabIndex: 0,
    //接口怼过来的
    cardInfo: {
      Name: "",
      Job: "",
      ImgUrl: "",
      Address: "",
      Department: "",
      Phone: "",
      CompanyName: "",
      DzCount: 0, //点赞
      ViewCount: 0, //看过
      FavoriteCount: 0, //收藏
      FollowCount: 0, //关注
      Id: 0, //名片ID
      HiddenPhone: -1,
      Desc: '',
      State: 0
    },
    //Ta的活动
    hisActivity: {
      totalCount: 0,
      list: []
    },
    hisActivityLog: {
      count: 0,
      list: []
    },
    otherId: 0,
    isMe: false,
    logIndex: 1,
    logLoadMore: false,
    logLoadAll: false,
    isShopExist: false,
    enterFromShare: '',
    renderCard: false,
    storeId: 0, //店铺Id
    shopName: 0, //店铺名
    canvasHeight: 0,
    canvasWidth: 0,
    pixelRatio: 0,
    openLogin: false,
    isRegister: false,
    isShowIllegal: false
  };

  methods = {
    async showCardCode() {
      var url = "pages/connected/connected-detail/index";
      var qrCodeUrl = ''
      this.isWait = true
      this.renderCard = true;
      var result = await core.getMyCardCodeUrl(url, this.otherId)
      tools.handleResult(result, (res) => {
        qrCodeUrl = res
      }, (err) => {
        tools.freeToast(err.Msg, 'none')
      })
      if (qrCodeUrl) {
        await core.drawCanvasCard(this.cardInfo, this.showPhone, qrCodeUrl, this.canvasWidth, this.canvasHeight)
        await core.drawCanvasCard(this.cardInfo, this.showPhone, qrCodeUrl, this.canvasWidth * 3, this.canvasHeight * 3, 'canvas-card2', 3)
      }
      this.isWait = false
      this.$apply()
    },
    goLogDetail(type, userId, cardId, msgId) {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      var url = "";
      if (type == 3) {
        url = "./index?someoneId=" + userId;
      }
      if (type == 0) {
        url =
          "../../classify/classify-details/index" +
          "?msgid=" +
          msgId +
          "&cardid=" +
          cardId;
      }
      console.log(url);
      tools.goNewPage(url);
    },
    updateCard() {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      tools.goNewPage("../../join/my/updateCard");
    },
    switchAttention() {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      var vm = this;
      vm.isWait = true;
      core.addDynamic(
        2,
        vm.cardInfo.Id,
        function() {
          vm.isAttention = !vm.isAttention;
          vm.isAttention
            ? vm.cardInfo.FollowCount++
            : vm.cardInfo.FollowCount--;
          vm.isWait = false;
        },
        vm
      );
    },
    switchLike() {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      var vm = this;
      vm.isWait = true;
      core.addDynamic(
        1,
        vm.cardInfo.Id,
        function() {
          vm.isLike = !vm.isLike;
          vm.isLike ? vm.cardInfo.DzCount++ : vm.cardInfo.DzCount--;
          vm.isWait = false;
        },
        vm
      );
    },
    goMsgDetail(msgId, cardId) {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      tools.goNewPage(
        "../../classify/classify-details/index?msgid=" +
          msgId +
          "&cardid=" +
          cardId
      );
    },
    addLike(Id, index) {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      var item = this.hisActivity.list[index];
      this.isWait = true;
      console.log(Id);
      core.addDynamic(
        1,
        Id,
        function(res) {
          var state = res.dataObj.curState;
          if (state == -1) {
            item.IsDzed = false;
            item.DzCount--;
          } else {
            item.IsDzed = true;
            item.DzCount++;
          }
          this.isWait = false;
        },
        this,
        0
      );
    },
    switchTab(index) {
      this.activeTabIndex = index;
    },
    sendMsg() {
      if (!this.isRunCodeByRegister()) {
        return;
      }
      tools.goNewPage(
        "../private-letter/index?userid=" +
          this.otherId +
          "&name=" +
          this.cardInfo.Name +
          "&avator=" +
          this.cardInfo.ImgUrl
      );
    },
    addPhoneContact() {
      if (this.cardInfo.HiddenPhone == -1) {
        wx.showToast({
          icon: "none",
          title: "该用户没公布手机号"
        });
        return;
      }
      wx.addPhoneContact({
        firstName: this.cardInfo.Name || '未知姓名',
        mobilePhoneNumber: this.cardInfo.Phone,
        organization: this.cardInfo.CompanyName,
        title: this.cardInfo.Job,
        success: () => {
          wx.showToast({
            icon: "success",
            title: "添加成功"
          });
        }
      });
    },
    goConnect() {
      wx.reLaunch({
        url: "../../connected/connected-index/index"
      });
    },
    goShop() {
      tools.goNewPage(
        "../../home/shop-detail/index?storeId=" +
          this.storeId +
          "&title=" +
          this.shopName
      );
    }
  };

  //需要改动
  onShareAppMessage(options) {
    var exactCompanyName = this.cardInfo.CompanyName ? this.cardInfo.CompanyName + '的' : ''
    return {
      title: '你好，我是' + exactCompanyName + this.cardInfo.Name,
      path: "pages/connected/connected-detail/index?someoneId=" + this.otherId + '&enterFromShare=开启',
      success: () => {
        core.addDynamic(6, this.cardInfo.Id,() => {
            console.log("转发成功");
         }, this)
      }
    };
  }

  async onLoad(query) {
    tools.checkVaildCard(this)
    this.isWait = true;
    this.openLogin = false
    var someoneId = query.someoneId || decodeURIComponent(query.scene)
    console.log(someoneId,'草拟吗呢')
    await this.checkLogin()
    if (this.enterFromShare = query.enterFromShare) {
       console.log('注意！分享进入')
       await this.getMyCard2Check()
    }
    this.otherId = someoneId;
    this.getCard(someoneId);
    this.initCanvasHW()
  }

  async checkLogin() {
    var data = await tools.checkRegister();
    this.isRegister = data.isRegister
    this.$apply()
  }


  isRunCodeByRegister() {
    if (!this.isRegister) {
      this.openLogin = true
      return false
    } 
    return true
  }

  async initCanvasHW() {
      var systemInfo = await tools.getSystemInfo()
      var screenWidth = systemInfo.screenWidth * systemInfo.pixelRatio
      var screenHeight = systemInfo.screenHeight * systemInfo.pixelRatio
      this.pixelRatio = systemInfo.pixelRatio
      this.canvasWidth = Math.floor(tools.getRelativeValue(750, 500, screenWidth) / this.pixelRatio)
      this.canvasHeight = Math.floor(tools.getRelativeValue(1334, 607, screenHeight) / this.pixelRatio)
      this.$apply()
  }

  async getCard(someoneId) {
    var vm = this;
    var globalData = app.globalData;

    var userInfo = await core.getUserInfo();
    var aid = await core.getAid();
    var myUserId = userInfo.Id;
  

    http
      .post(addr.GetMyCard, {
        appid: globalData.appid,
        myuserid: userInfo.Id, //我的userid
        userid: someoneId, //名片的userid
        aid: aid,
        sessionKey: userInfo.loginSessionKey
      })
      .then(async res => {
        if (!res.isok && res.Msg != '失败') {
          tools.showModalCancle(res.Msg);
          vm.isWait = false;
          return;
        }

        var json = res.dataObj;

        if (json.State == -1) {
          await tools.showModalCancle('该名片已被屏蔽')
          tools.goLaunch('/pages/home/home-index/index')
        }

        if (myUserId == json.UserId) {
          vm.isMe = true;
        }

        for (var key in vm.cardInfo) {
          vm.cardInfo[key] = json[key];
        }

        

        await this.checkStoreExist()

        vm.isLike = json.IsDz;
        vm.isAttention = json.IsFollow;

        //添加看过量
        core.addDynamic(
          3,
          vm.cardInfo.Id,
          function(res) {
            if (res.dataObj) {
              vm.cardInfo["ViewCount"]++;
            }
            vm.isWait = false;
          },
          vm
        );

        //获取TA的动态
        vm.getMyAct(vm.cardInfo.Id, globalData.appid);
        vm.getActivityLogC(json.UserId);
      });
  }

  //店铺是否存在
   async checkStoreExist() {
    var vm = this
    var result = await core.getStoreDetail({
      myCardId: this.cardInfo.Id,
      type: 1
    })
    if (result.isok && result.dataObj) {
      vm.shopName = result.dataObj.platStore.Name;
      vm.storeId = result.dataObj.platStore.Id
      vm.isShopExist = true
    }
    vm.isWait = false
    vm.$apply();
  }

  //当是从分享进入的时候，要验证游客身份
  async getMyCard2Check() {
    var result = await core.getMyCard()
    tools.handleResult(result, (res) => {
      console.log(res, '验证游客身份')
      this.forbidVisitorIntoPage(res.Phone, res.Address, res.ImgUrl)
    },(err)=>{
      tools.showModalCancle(err.Msg);
    })
  }

  //防止游客进入
  forbidVisitorIntoPage(isRegister, isPerfect, imgUrl) {
    var url = isRegister
      ? isPerfect ? "" : "../../join/my/updateCard?imgUrl=" + imgUrl
      : "../../join/bindPhone/register";
    url && tools.goNewPage(url)
  }

  getMyAct(cardId, appId) {
    var vm = this;
    http
      .get(addr.GetMsgByUserId, {
        appid: appId,
        mycardId: cardId
      })
      .then(res => {
        if (res.isok) {
          vm.hisActivity = res.dataObj;
          vm.addCommentCount(vm.hisActivity.list);
        } else {
          tools.showModalCancel(res.Msg);
        }
        vm.$apply();
      });
  }

  async getActivityLogC(userid) {
    var vm = this;
    var result = await core.getActivityLog(userid, this.logIndex);
    tools.handleResult(result, res => {
      console.log(res, "我的活动轨迹");
      vm.hisActivityLog.count = res.count;
      if (res.list.length > 0) {
        vm.hisActivityLog.list = vm.hisActivityLog.list.concat(res.list);
        vm.logIndex > 1 && res.list.length < 10 && (vm.logLoadAll = true);
      } else {
        this.logIndex > 1 && (vm.logLoadAll = true);
      }
    },(err)=>{
      tools.showModalCancle(err.Msg);
    });
    vm.$apply();
  }

  async onReachBottom() {
    if (
      this.activeTabIndex == 1 &&
      this.hisActivityLog.count > 10 &&
      !this.logLoadAll
    ) {
      this.logLoadMore = true;
      this.logIndex++;
      await this.getActivityLogC(this.otherId);
      this.logLoadMore = false;
      this.$apply();
    }
  }

  //增加评论条数
  addCommentCount(arr) {
    arr.forEach((val, index) => {
      val.Comments != null && Array.isArray(val.Comments)
        ? (val.CommentCount = val.Comments.length)
        : (val.CommentCount = 0);
    });
  }

  onShow() {
    var isRefresh = tools.cacheGlobalData("editSuccess");
    if (isRefresh) {
      tools.cacheGlobalData("editSuccess", '');
      //回顶部
      tools.onPageScroll();
      this.getCard(this.otherId);
    }
  }

  async onPullDownRefresh() {
    this.isWait = true
    wx.showNavigationBarLoading();
    await this.getCard(this.otherId);
    wx.hideNavigationBarLoading();
    wx.stopPullDownRefresh();
  }

  computed = {
    showPhone() {
      return this.cardInfo.HiddenPhone == -1
        ? this.encrypt(this.cardInfo.Phone)
        : this.cardInfo.Phone;
    }
  };

  encrypt(val) {
    var valList = String(val).split(""),
      cryptIndexs = [3, 4, 5, 6],
      i = 0,
      index;
    while ((index = cryptIndexs[i++])) {
      valList[index] = "*";
    }
    return valList.join("");
  }
}
</script>
