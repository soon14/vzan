 <style lang="less">
.home-index {
  .search-bar {
    background: #fff;
    .search {
      width: 690rpx;
      height: 60rpx;
      .address {
        width: 180rpx;
        height: 60rpx;
        line-height: 1.3;
      }
      .search-input {
        color: #a1a2a3;
        width: 470rpx;
        height: 60rpx;
        line-height: 60rpx;
        border-radius: 30rpx;
        background-color: #eee;
      }
    }
  }
  .nav {
    overflow: hidden;
    width: 100%;
    height: 400rpx;
    .nav-swiper {
      width: 100%;
      height: 400rpx;
      .nav-swiper-img {
        width: 100%;
        height: 400rpx;
        display: block;
        background-color: #f2f2f2;
      }
    }
    .white-radius {
      bottom: -18rpx;
      background: #fff;
      width: 100%;
      height: 45rpx;
      border-top-left-radius: 100%;
      border-top-right-radius: 100%;
    }
  }
  .title {
    height: 76rpx;
    line-height: 76rpx;
  }
  .sprit {
    color: palevioletred;
    margin: 0 5rpx;
  }
  .recommend {
    padding: 0 20rpx;
    .recommend-swiper {
      box-sizing: border-box;
      width: 100%;
      height: 197rpx;
      .item {
        margin-right: 10rpx;
        .recommend-img {
          width: 230rpx;
          height: 134rpx;
          background: #d9d8d9;
        }
        &:last-child {
          margin-right: 0;
        }
      }
    }
  }
  .lh63 {
    line-height: 63rpx;
    height: 63rpx;
  }
  .null-data {
    height: 562rpx;
    line-height: 562rpx;
  }
  .comTab-wrap {
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 999;
    visibility: hidden;
    transform: translateY(-100%);
    transition: all 0.35s ease-in-out;
  }
  .slide-down {
    visibility: visible !important;
    transform: translateY(0%) !important;
  }
  #shopList {
    min-height: 500rpx;
  }
}
</style>
<template>
  <view class="home-index">
    <view class="comTab-wrap {{isFixed ? 'slide-down' : '' }}">
      <comTab :list.sync="list" onClickAfter="selectTab" :activeIndex.sync="comTabIndex" :lineColor.sync="comTabColor" :activeColor.sync="comTabColor" mode="textTrace"> </comTab>
    </view>
    <view class="search-bar hl100 f fc fc-h w-full f26">
      <view class="f fc search c666">
        <view class="dzicon icon-dizhi f28" style="line-height:60rpx;"></view>
        <view class="address f26 ml5 f fc" @tap="jumpLocation">
          <text class="line line1" >{{cityParam.curLocation}}</text>
          <text class="dzicon icon-zhuanyebaniconkuozhan_Distribu2" ></text>
        </view>
        <view class="search-input f26 f fc pw30" @tap="jumpShopSearch">
          <text class="dzicon icon-sousuo_rearch f40"></text>
          <text>搜索</text>
        </view>
      </view>
    </view>
    <view class="nav rel">
      <swiper class="nav-swiper" autoplay indicator-dots="{{showDots}}" indicator-color="rgba(255,255,255,.8)" indicator-active-color="rgba(255,255,255,1)">
        <repeat for="{{imgUrls}}" key="index">
          <swiper-item>
            <image class="nav-swiper-img" src="{{item.ADImg}}" mode="aspectFill" @tap="jumpShopDetail({{index}})"></image>
          </swiper-item>
        </repeat>
      </swiper>
      <!-- <view class="abs white-radius"></view> -->
    </view>
    <view class="bg-w" style="padding-top:30rpx;">
      <comSwiper :source.sync="slideList" @clickItem.user="jumpShopList" />
    </view>
    <view class="mt20 bg-w recommend">
      <view class="title tc f30">
        <text>推<text class="f20 sprit">/</text>荐<text class="f20 sprit">/</text>商<text class="f20 sprit">/</text>家</text>
      </view>
      <!-- display-multiple-items="3" -->
      <swiper class="recommend-swiper" autoplay>
        <repeat for="{{recommendList}}" item="recommend" index="pageIndex" key="pageIndex">
          <swiper-item class="f fc">
            <repeat for="{{recommend}}" index="index" key="index">
              <view class="f fv fc item" @tap="jumpRecommendShop({{pageIndex}},{{index}})">
                <image class="recommend-img" src="{{item.ADImg}}" mode="aspectFill"></image>
                <view class="f26 lh63 c333 w-100 ellipsis tc">{{item.ObjName}}</view>
              </view>
            </repeat>
          </swiper-item>
        </repeat>
      </swiper>
    </view>
    <view id="shopList" class="mt20">
      <view id="tab">
        <comTab :list.sync="list" onClickAfter="selectTab" :activeIndex.sync="comTabIndex" :lineColor.sync="comTabColor" :activeColor.sync="comTabColor" mode="textTrace"> </comTab>
      </view>
      <comInitListData :isInit.sync="isInit" :count.sync="shopCount" />
      <comShopItem :shopList.sync="shopList" />
    </view>
    <comLoading :showLoading.sync="loadMore" text="正在为您加载更多店铺" :showBottom.sync="loadAll" />
    <comWait wx:if="{{showWait}}" />
    <comIllegal :isShowIllegal.sync="isShowIllegal"/>
  </view>
</template>
<script>
import wepy from "wepy";
import { core, tools, http } from "@/lib/core";
console.log(tools);
import addr from "@/lib/addr";
import com_loading from "@/components/com_loading";
import com_tab from "@/components/com_tab";
import com_wait from "@/components/com_wait";
import com_swiper from "@/components/com_swiper2";
//import com_evaluate from "@/components/com_evaluate";
import com_shopItem from "@/components/com_shopItem";
import com_initListData from "@/components/com_initListData";
import com_illegal from "@/components/com_illegal";
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: "",
    enablePullDownRefresh: true
  };
  components = {
    comLoading: com_loading,
    comTab: com_tab,
    comSwiper: com_swiper,
    comWait: com_wait,
    comShopItem: com_shopItem,
    comInitListData: com_initListData,
    comIllegal: com_illegal
  };
  data = {
    appTitle: "",
    flag: false,
    cityParam: {
      curLocation: "全部",
      curCityCode: 0
    },
    location: {
      lat: "",
      lng: ""
    },
    list: [
      {
        title: "人气排行",
        state: 0
      },
      {
        title: "附近商户",
        state: 1
      },
      {
        title: "筛选",
        state: 2
      }
    ],
    categoryRequestParam: {
      isFirstType: 0,
      parentId: ""
    },
    shopListRequestParam: {
      orderType: 0, //默认0,距离1,时间2
      categoryId: 0, //默认0,其他代表某个类别
      cityCode: 0, //全部0,其他代表某个地区
      lat: "",
      lng: "",
      keyMsg: "", //搜索的关键字
      pageIndex: 1,
      pageSize: 10
    },
    comTabIndex: 0,
    comTabColor: "#3FD481",
    showDots: false,
    imgUrls: [], //轮播图列表
    slideList: [], //图片分类导航列表
    shopList: [],
    recommendList: [],
    isFixed: false,
    loadAll: false,
    loadMore: false,
    pageIndex: 1,
    shopCount: null,
    processor: null, //合并列表处理器
    isFirst: true, //是不是第一次加载
    isPullBottom: true,
    nodeResTop: 0,
    isInit: false,
    scrollTop: 0,
    parallelApis: 2,
    isShowIllegal: false
  };

  computed = {
    showWait() {
      return this.parallelApis == 0 ? false : true;
    }
  };

  methods = {
    jumpShopDetail(i) {
      let url = "";
      let id = this.imgUrls[i].ObjId;
      let ADImgType = this.imgUrls[i].ADImgType;
      if (ADImgType == 0) {
        //此时返回的objId是名片id,拥有名片id进入店铺等同于从个人中心进入店铺,所以这里type=1。
        let myCardId = this.imgUrls[i].ObjId;
        let type = 1;
        let isStoreID = this.imgUrls[i].isStoreID;
        url =
          "../shop-detail/index?myCardId=" +
          myCardId +
          "&type=" +
          type +
          "&isStoreID=" +
          isStoreID;
        tools.goNewPage(url);
      } else if (ADImgType == 1) {
        let id = this.imgUrls[i].ObjId;
        url = "/pages/classify/classify-details/index?msgid=" + id;
        tools.goNewPage(url);
      } else if (ADImgType == -1) {
        tools.preViewShow(this.imgUrls[i].ADImg);
      }
    },
    jumpLocation() {
      tools.goNewPage("../location/index?isHome=true");
    },
    jumpShopSearch() {
      wepy.$instance.globalData.cityParam = this.cityParam;
      let title = "商品列表";
      tools.goNewPage("../shop-list/index?title=" + title);
    },
    jumpRecommendShop(pageIndex, index) {
      let storeId = this.recommendList[pageIndex][index].storeId;
      tools.goNewPage("../shop-detail/index?storeId=" + storeId);
    },
    jumpShopList(pageIndex, index) {
      let isFirstType = this.categoryRequestParam.isFirstType;
      let typeId = this.slideList[pageIndex][index].Id;
      let toMore = pageIndex == 1 && index == 9 ? true : false;
      let shopListUrl =
        isFirstType == 1
          ? "../shop-list/index?shopType=" + typeId + "&isBigType=" + 1
          : "../shop-list/index?shopType=" + typeId;
      let url =
        this.slideList.length > 2 && toMore
          ? "../home-select/index"
          : shopListUrl;
      tools.goNewPage(url);
    },
    jumpHomeSearch() {
      tools.goNewPage("../home-search/index");
    }
  };
  async selectTab(state) {
    if (state >= 2) {
      tools.goNewPage("../home-search/index");
      return;
    } else {
      this.isPullBottom = false;
      this.resetData();
      this.shopListRequestParam.orderType = state;
      this.isInit = true;
      await this.GetStoreList();
      this.isInit = false;
      this.$apply();
    }
  }
  //获取轮播图及推荐商家
  async GetSwiperAndRecomm() {
    let app = wepy.$instance.globalData;
    let data = await core.GetConfig(this.location);
    tools.setPageTitle(data.dataObj.appname);
    tools.handleResult(
      data,
      res => {
        app.curCity = res.Location;
        this.appTitle = res.appname;
        this.imgUrls = res.ADImgs.list;
        this.showDots = this.imgUrls.length > 1 ? true : false;
        this.recommendList = core.resetMsgTypeList(res.TjStores.list, 3);
      },
      err => {
        console.log(err);
        tools.showModal(err.Msg);
      }
    );
    this.parallelApis--;
    this.$apply();
  }
  //获取图片导航
  async GetSlideList() {
    let level = await core.GetStoreCategoryLevel();
    if (level == 1) {
      this.categoryRequestParam.isFirstType = 2;
    } else if (level == 2) {
      this.categoryRequestParam.isFirstType = 1;
    }
    let data = await core.GetStoreCategory(this.categoryRequestParam);
    tools.handleResult(
      data,
      res => {
        this.slideList = core.resetMsgTypeList(res.list, 10);
        this.$apply();
        this.$invoke("comSwiper", "devideData");
      },
      err => {
        console.log(err);
        tools.showModalCancle(err.Msg);
      }
    );
    this.parallelApis--;
    this.$apply();
  }
  //获取商户列表
  async GetStoreList() {
    this.shopListRequestParam.pageIndex = this.pageIndex;
    this.shopListRequestParam.lat = this.location.lat;
    this.shopListRequestParam.lng = this.location.lng;
    let result = await core.GetStoreList(this.shopListRequestParam);
    tools.handleResult(
      result,
      res => {
        let dataList = res.list;
        this.shopCount = parseInt(res.totalCount);
        if (this.processor === null) {
          this.processor = tools.loadMoreData(
            this,
            this.shopListRequestParam.pageSize
          );
        }
        this.processor.concat_("shopList", dataList);
        this.isPullBottom = true;
        this.$apply();
      },
      err => {
        tools.showModalCancle(err.Msg);
      }
    );
  }

  async onShow() {
    let appCityParam = wepy.$instance.globalData.cityParam;
    if (appCityParam.curCityCode != undefined) {
      this.cityParam = appCityParam;
      this.shopListRequestParam.cityCode = appCityParam.curCityCode;
      this.isFirst = false;
      this.$apply();
    }
    if (!this.isFirst) {
      this.comTabIndex = 0;
      this.resetData();
      this.isInit = true;
      await this.GetStoreList();
      this.isInit = false;
      this.$apply();
    }
  }

  async onLoad() {
    let app = wepy.$instance.globalData;
    this.location = await core.getUserLocation();
    tools.checkVaildCard(this);
    this.GetSwiperAndRecomm();
    this.GetSlideList();
    this.isInit = true;
    await this.GetStoreList();
    this.isInit = false;
    this.$apply();
  }

  async onReady() {
    this.$invoke("comTab", "init");
    let nodeRes = await core.selectNode("#tab");
    this.nodeResTop = nodeRes[0].bottom;
  }

  async onPageScroll(option) {
    this.scrollTop = option.scrollTop;
    if (this.scrollTop >= this.nodeResTop) {
      if (this.isFixed) return;
      this.isFixed = true;
    } else {
      if (!this.isFixed) return;
      this.isFixed = false;
    }
    this.$apply();
  }
  //下拉刷新
  async onPullDownRefresh() {
    this.parallelApis = 2;
    this.resetData();
    this.GetSwiperAndRecomm();
    this.GetSlideList();
    this.isInit = true;
    await this.GetStoreList();
    this.isInit = false;
    this.$apply();
    wx.stopPullDownRefresh();
  }
  resetData() {
    this.pageIndex = 1;
    this.loadAll = false;
    this.loadMore = false;
    this.shopList = [];
    this.shopCount = null;
  }
  //上拉触底
  onReachBottom() {
    // if (thisisPullBottom)
    if (this.isPullBottom) {
      this.processor.handleReachBottom("shopCount", this.GetStoreList);
    }
  }
  onShareAppMessage() {
    let title = this.appTitle;
    return {
      title: title,
      path: "/pages/home/home-index/index",
      success: () => {
        console.log("转发成功");
      }
    };
  }
}
</script>
