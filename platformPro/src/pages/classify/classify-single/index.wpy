<style lang="less">
.infolist-wrap {
  .info-label {
    .active {
      color: #3fd682; // font-weight: bold;
      border-bottom: 5rpx solid #3fd682;
      padding-bottom: 10rpx;
    }
  }
}
</style>

<template>
    <view>
        <view class="infolist-wrap pt100">
            <comTab :list.sync="infoNav" onClickAfter="selectInfoLabel" position="fixed" lineColor="#3FD481" activeColor="#111" mode="textTrace"></comTab>
            <repeat>
                <comInfoItem :myCardId.sync="myCardId" :infoList.sync="infoList" :isRegister2.sync="isRegister" :labelIndex.sync="infoLabel.type" :onClickContactAfter="contactHim"></comInfoItem>
            </repeat>
            <comWait :isShow.sync="showWait" />
            <comLoading :showBottom.sync="showBottom" wx:if="{{isShowBottom}}" />
        </view>
    </view>
</template>

<script> 
import wepy from "wepy";
import { core, tools, http } from "@/lib/core";
import addr from "@/lib/addr";
import com_tab from "@/components/com_tab";
import com_infoItem from "@/components/com_infoItem";
import com_loading from "@/components/com_loading";
import com_wait from "@/components/com_wait";
export default class Search extends wepy.page {
  config = {};
  components = {
    comInfoItem: com_infoItem,
    comTab: com_tab,
    comLoading: com_loading,
    comWait: com_wait
  };
  data = {
    title: "",
    infoLabel: {
      type: 0, //最新发布|距离最近
      msgTypeId: 0, //帖子分类
      pageIndex: 1,
      pageSize: 10
    },
    infoList: [],
    infoNav: [
      {
        title: "最新发布",
        state: 0
      },
      {
        title: "距离最近",
        state: 1
      }
    ],
    isOnReach: false,
    isLoading: true,
    showBottom: true,
    isShowBottom: false,
    showWait: true,
    isRegister: false,
    myCardId: 0
  };
  methods = {};
  selectInfoLabel(state) {
    this.infoLabel.type = state;
    this.infoLabel.pageIndex = 1;
    (this.isOnReach = false), this.$apply();
    this.GetInfoList();
  }
  events = {};
  async onLoad(option) {
    this.title = option.title;
    this.infoLabel.msgTypeId = option.id;
    tools.setPageTitle(this.title);
    this.showWait = true;
    var result = await tools.checkRegister();
    this.isRegister = result.isRegister;
    this.myCardId = result.myCardId;
    this.showWait = false;
    this.$apply();
  }
  onShow() {
    this.GetInfoList();
  }
  onReady() {
    this.$invoke("comTab", "init");
  }
  //获取帖子列表
  async GetInfoList() {
    this.showWait = true;
    this.$apply();
    wx.showNavigationBarLoading();
    let data = await core.GetMsgList(this.infoLabel);
    tools.handleResult(
      data,
      res => {
        let dataList = res.list;
        let pageIndex = this.infoLabel.pageIndex;
        for (let i = 0, l = dataList.length; i < l; i++) {
          dataList[i].DzBtnText = dataList[i].IsDzed ? "取消" : "赞";
        }
        this.isLoading = dataList.length == 0 && pageIndex > 1 ? false : true;
        this.isShowBottom =
          dataList.length == 0 && pageIndex > 1 ? true : false;
        this.infoList = this.isOnReach
          ? this.infoList.concat(dataList)
          : dataList;
        this.showWait = false;
        this.$apply();
        wx.hideNavigationBarLoading();
      },
      err => {
        tools.showModalCancle(err.Msg);
      }
    );
  }
  onReachBottom() {
    this.infoLabel.pageIndex++;
    this.isOnReach = true;
    this.isLoading ? this.GetInfoList() : "";
  }
  contactHim(info) {
    tools.goNewPage(
      "../../connected/private-letter/index?userid=" +
        info.userId +
        "&avator=" +
        info.avatorUrl +
        "&name=" +
        info.name
    );
  }
}
</script>
