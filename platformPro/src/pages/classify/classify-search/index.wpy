<style lang="less">
.phcolor {
  color: #999;
}
.search {
  position: fixed;
  top: 0;
  height: 80rpx;
  border-bottom: 1px solid #f7f7f7;
  .content {
    width: 690rpx;
    height: 60rpx;
    line-height: 60rpx;
    padding: 0 20rpx;
    margin: 0 auto;
    background: #eee;
    border-radius: 30rpx; 
  }
}
.empty-info{
  height: 300rpx;
  line-height: 300rpx;
}
</style>

<template>
    <view>
        <!-- 搜索 -->  
        <view class="search f fc w-100 bg-w">
            <input value="{{infoLabel.keyMsg}}" placeholder-class="phcolor" placeholder="请输入你想查找的信息内容" focus="true" class="content f26 c666" @confirm="getInputText" />
        </view>
        <!-- 帖子列表 -->
        <view class="pt80">
            <comInfoItem :myCardId.sync="myCardId" :infoList.sync="infoList" :isRegister2.sync="isRegister" :labelIndex.sync="infoLabel.type" :onClickContactAfter="contactHim"></comInfoItem>
            <comLoading :showBottom.sync="showBottom" wx:if="{{isShowBottom}}" />
            <view class="empty-info tc w-full c666" wx:if="{{hasContent}}">暂无搜索内容</view>
        </view>
        <comWait :isShow.sync="showWait" />
    </view> 
</template>

<script>
import wepy from "wepy";
import { core, tools, http } from "@/lib/core";
import addr from "@/lib/addr";
import com_infoItem from "@/components/com_infoItem";
import com_wait from "@/components/com_wait";
import com_loading from "@/components/com_loading";
export default class Search extends wepy.page {
  config = {
    navigationBarTitleText: "搜索"
  };
  components = {
    comInfoItem: com_infoItem,
    comWait: com_wait,
    comLoading: com_loading
  };
  data = {
    infoLabel: {
      type: 0,
      keyMsg: "",
      pageIndex: 1,
      pageSize: 10
    },
    infoList: [],
    isOnReach: false,
    isLoading: true,
    showBottom: true, //判断提示内容是转圈或底线
    isShowBottom: false, //判断是否显示底部组件
    showWait: false,
    isRegister: false,
    hasContent:false,
    myCardId: 0
  };
  methods = {
    getInputText(e) {
      this.infoLabel.keyMsg = e.detail.value;
      this.isOnReach = false;
      this.isLoading = true;
      this.$apply();
      this.GetInfoList();
    }
  };
  events = {};
  async onLoad() {
    this.showWait = true;
    var resultInfo = await tools.checkRegister();
    this.isRegister = resultInfo.isRegister;
    this.myCardId = resultInfo.myCardId;
    this.showWait = false;
    this.$apply();
  }
  //获取帖子列表
  async GetInfoList() {
    this.showWait = true;
    this.hasContent = false;
    this.$apply();
    wx.showNavigationBarLoading();
    let data = await core.GetMsgList(this.infoLabel);
    if (data.isok) {
      let dataList = data.dataObj.list;
      let pageIndex = this.infoLabel.pageIndex;
       for (let i = 0, l = dataList.length; i < l; i++) {
          dataList[i].DzBtnText = dataList[i].IsDzed ? "取消" : "赞";
        }
      this.isLoading = dataList.length == 0 && pageIndex > 1 ? false : true;
      this.isShowBottom = dataList.length == 0 && pageIndex > 1 ? true : false;
      this.hasContent = dataList.length == 0&& pageIndex == 1?true:false;
      this.infoList = this.isOnReach
        ? this.infoList.concat(dataList)
        : dataList;
      this.showWait = false;
      this.$apply();
      wx.hideNavigationBarLoading();
    } else {
      tools.showModal(data.Msg);
    }
  }
  onReachBottom() {
    this.infoLabel.pageIndex++;
    this.isOnReach = true;
    this.isLoading ? this.GetInfoList() : "";
  }
  contactHim(info) {
    tools.goNewPage(
      "../../connected/private-letter/index?userid=" +
        info.userId +
        "&avator=" +
        info.avatorUrl +
        "&name=" +
        info.name
    );
  }
}
</script>
