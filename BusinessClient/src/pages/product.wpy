<style lang="less">
.p-img {
  width: 230rpx;
  height: 230rpx;
  background-color: #ccc;
  vertical-align: middle;
}
.p-mark {
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 2px 5px;
  color: #fff;

  font-size: 12px;
}
.mark0 {
  background-color: #ff6565;
}
.mark1 {
  background-color: #77d26b;
}
.tab-type {
  white-space: nowrap;
}
.tab-type > view {
  display: inline-block;
  margin-right: 20px;
}
.top {
  background-color: #fe536f;
  padding: 20rpx;
  padding-bottom: 0;

  .icon-sousuo {
    color: #c5c4cc;
  }
}

.good-item {
  padding: 20rpx;
  background-color: #fff;
  margin-top: 20rpx;
  padding-bottom: 0;
}
.good-name {
  font-size: 26rpx;
  color: #333;
}
.good-nums {
  font-size: 24rpx;
  color: #999;
}
.good-nums view {
  padding-right: 20rpx;
}
.good-price {
  color: #fe536f;
}
.good-item__right {
  border-bottom: 1rpx solid #f2f2f2;
  padding-bottom: 30rpx;
}
.good-item_action {
  padding: 20rpx 0 30rpx 0;
}
.good-item_action .btn-plain {
  margin-right: 20rpx;
}
.ico40 {
  vertical-align: middle;
  margin-right: 10rpx;
}
.p-add {
  font-size: 80rpx;
  color: #fe536f;
  position: fixed;
  font-weight: bolder;
  left: 40rpx;
  bottom: 40rpx;
}
.qrcode-pop .mask {
  background-color: rgba(0, 0, 0, 0.3);
  position: fixed;
  width: 100%;
  top: 0;
  bottom: 0;
}
.qrcode-pop canvas {
  position: fixed;
  width: 560rpx;
  height: 660rpx;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #fff;
  border-radius: 10rpx;
  z-index: 99;
}
.qrcode-pop .savetoalbum {
  width: 300rpx;
  height: 90rpx;
  line-height: 90rpx;
  text-align: center;
  color: #fff;
  font-size: 38rpx;
  border-radius: 150rpx;
  background-color: #fe536f;
  position: fixed;
  bottom: 50rpx;
  left: 50%;
  transform: translateX(-50%);
}
</style>

<!--第三步：使用组件-->
<template>
  <view>
    <view class="top">
      <view class="f fc search">

        <view class="f fc search-input">
          <view class="dzicon icon-sousuo"></view>
          <input type="text" class="" @input="inputKeyword" value="{{keyword}}" confirm-type="搜索" @confirm="searchGood"></input>
        </view>
      </view>
      <scroll-view scroll-x="true" class="mt20">
        <view class="tab-type f fc">
          <view @tap="chooseGoodType(-1)">
            <text class="{{goodTypesIndex==-1?'sel':''}}">全部</text>
          </view>
          <view wx:for="{{goodTypes}}" @tap="chooseGoodType({{index}})">
            <text class="{{index==goodTypesIndex?'sel':''}}">{{item.name}}</text>
          </view>
        </view>
      </scroll-view>
    </view>

    <view class="good-item" wx:for="{{vm.list}}">
      <view class="f">
        <view class="rel">
          <image src="{{item.img}}" class="p-img" mode="aspectFill"></image>
          <view class="p-mark mark{{item.tag}}">{{item.tag==1?'已上架':'已下架'}}</view>
        </view>
        <view class="ml20 f f1 fv fj good-item__right">
          <view class="line line2 good-name">{{item.name}}</view>
          <view class="" class='good-price'>
            <text class="f22">￥</text>
            <text class="f32">{{item.priceStr}}/套</text>
          </view>
          <view class="f good-nums">
            <view>销量:{{item.salesCount}},虚拟销量:{{item.virtualSalesCount}}</view>
            <view>库存:{{item.stockLimit?item.stock:'不限库存'}}</view>
          </view>

        </view>
      </view>
      <view class="good-item_action">
        <view class="f">
          <view class="f1">
            <view class="btn-plain btn-plain__red" @tap="goodQRCode({{item.id}},{{item.name}},{{item.priceStr}})">
              商品码
            </view>
          </view>
          <view>
            <view class="btn-plain btn-plain__red" @tap="goodEdit({{item.id}})">
              编辑
            </view>
            <view class="btn-plain btn-plain__blue" @tap="goodActEdit({{index}},'tag')">
              <view class="ico40 {{item.tag==0?'ico-up':'ico-down'}}"></view>{{item.tag==0?'上架':'下架'}}
            </view>
            <view class="btn-plain btn-plain__red" @tap="goodActDel({{index}},'del')" wx:if="{{item.tag==0}}">
              <view class="ico40 ico-del"></view>删除
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="p-add dzicon icon-more" @tap="addnew"></view>
    <wxc-loadmore is-end="{{!vm.ispost&&vm.loadall}}" icon="{{true}}"></wxc-loadmore>
    <wxc-toast is-show="{{$toast.show}}" text="{{$toast.msg}}"></wxc-toast>
    <view class="qrcode-pop" hidden="{{qrcodehide}}">
      <view class="mask" @tap="hideqrcode"></view>
      <canvas style="width: 560rpx; height: 660rpx; border-radius:10rpx;" canvas-id="shareCard"></canvas>
      <view class="savetoalbum" @tap="savetoalbum">保存到相册</view>
    </view>
  </view>

</template>

<script>
import wepy from "wepy";
import "wepy-async-function";
import { core, vm } from "../lib/core";
import baseMixin from "../mixins/base";
// import
//第一步： 引入组件文件

export default class product extends wepy.page {
  config = {
    navigationBarTitleText: "产品",
    enablePullDownRefresh: true,
    // 引入min组件
    usingComponents: {
      "wxc-toast": "../../packages/@minui/wxc-toast/dist/index",
      "wxc-loadmore": "../../packages/@minui/wxc-loadmore/dist/index"
    }
  };
  //第二步：声明组件
  components = {};
  mixins = [baseMixin];
  //mixins = [Enterprise];
  data = {
    $toast: {
      show: false,
      msg: "",
      inMess: ""
    },
    vm: JSON.parse(JSON.stringify(vm)),
    goodTypes: [],
    goodTypesIndex: -1,
    keyword: "",
    shareCardSetting: {},
    qrcodehide: true
  };
  computed = {};
  methods = {
    addnew() {
      wx.navigateTo({
        url: "/pages/product_edit?"
      });
    },
    //1：点击产品分类
    async chooseGoodType(index) {
      this.vm = JSON.parse(JSON.stringify(vm));
      this.goodTypesIndex = index;
      if (index == -1) {
        this.keyword = "";
        this.$apply();
      }
      await this.loadMore();
    },
    //2：输入关键词
    inputKeyword(e) {
      this.keyword = e.detail.value;
    },
    //3：搜索
    async searchGood() {
      this.vm = JSON.parse(JSON.stringify(vm));
      await this.loadMore();
    },
    //4：上、下架
    async goodActEdit(index, act) {
      await this.editGood(index, act);
    },
    //5：删除产品
    goodActDel(index, act) {
      let that = this;
      wx.showModal({
        title: "提示",
        content: "确定删除吗？",
        success: function(res) {
          if (res.confirm) {
            that.editGood(index, act);
          }
        }
      });
    },
    goodEdit(index) {
      this.$navigate("/pages/product_edit?id=" + index);
    },
    async goodQRCode(pid, name, price) {
      wx.showLoading({ title: "加载中..." });
      var that = this;
      var result = await core.GetProductQrcode(pid);

      console.log(result);
      if (result.isok) {
        that.qrcodehide = false;
        this.share_card(result.dataObj.qrCode, name, price);
      } else {
        wx.hideLoading();
        that.ShowToast(result.Msg+",只有发布成功的小程序才能获取二维码");
      }
      that.$apply();
    },
    hideqrcode() {
      this.qrcodehide = true;
    },
    savetoalbum() {
      var that = this;
      // 可以通过 wx.getSetting 先查询一下用户是否授权了 "scope.record" 这个 scope
      wx.getSetting({
        success(res) {
          if (!res.authSetting["scope.writePhotosAlbum"]) {
            wx.authorize({
              scope: "scope.writePhotosAlbum",
              success(res) {
                wx.canvasToTempFilePath({
                  // x: 0,
                  // y: 200,
                  // width: 50,
                  // height: 50,
                  // destWidth: 100,
                  // destHeight: 100,
                  canvasId: "shareCard",
                  success: function(res) {
                    console.log(res.tempFilePath);
                    wx.saveImageToPhotosAlbum({
                      filePath: res.tempFilePath,
                      success(res) {
                        that.ShowToast("保存成功");
                        that.qrcodehide = true;
                        that.$apply();
                      }
                    });
                  }
                });
              }
            });
          } else {
            wx.canvasToTempFilePath({
              // x: 100,
              // y: 200,
              // width: 50,
              // height: 50,
              // destWidth: 100,
              // destHeight: 100,
              canvasId: "shareCard",
              success: function(res) {
                console.log(res.tempFilePath);
                wx.saveImageToPhotosAlbum({
                  filePath: res.tempFilePath,
                  success(res) {
                    that.ShowToast("保存成功");
                    that.qrcodehide = true;
                    that.$apply();
                  }
                });
              }
            });
          }
        }
      });
    }
  };

  events = {};
  async onLoad() {}
  async onShow() {
    await this.reLoad();
  }

  async loadMore() {
    var that = this;
    //wx.showNavigationBarLoading();
    if (that.vm.ispost || that.vm.loadall) return;
    let goodType = 0;
    if (that.goodTypesIndex == -1) {
      goodType = 0;
    } else {
      goodType = that.goodTypes[that.goodTypesIndex].id;
    }

    let result = await core.GetEntGoodsList(
      //goodsType:
      goodType,
      //pageIndex:
      that.vm.pageindex,
      //pageSize:
      that.vm.pagesize,
      //goodsName:
      that.keyword
    );
    console.log(result);
    if (result) {
      if (result.isok) {
        if (result.dataObj.length >= that.vm.pagesize) {
          that.vm.pageindex += 1;
        } else {
          that.vm.loadall = true;
        }
        that.vm.ispost = false;
        that.vm.list = that.vm.list.concat(result.dataObj);
        that.$apply();
      } else {
        that.ShowToast(result.Msg);
      }
    }
    //wx.hideNavigationBarLoading();
  }
  //上拉加载更多
  async onReachBottom() {
    await this.loadMore();
  }

  //编辑产品 上架，下架，删除
  async editGood(index, act) {
    let good = this.vm.list[index];
    let goodsId = good.id;
    let value = -1;
    if (act == "tag") {
      value = good.tag == 0 ? 1 : 0;
    } else if (act == "del") {
      value = 0;
    }
    if (value == -1) return;

    let result = await core.UpdateState(act, value, goodsId);
    var that = this;
    if (result) {
      if (result.isok) {
        if (act == "tag") {
          good.tag = value;
        } else if (act == "del") {
          that.vm.list.splice(index, 1);
        }
        that.$apply();
      }
      that.ShowToast(result.Msg);
    }
  }
  //下拉刷新
  async onPullDownRefresh() {
    await this.reLoad();
    setTimeout(() => {
      wx.stopPullDownRefresh();
    }, 1000);
  }
  async loadGoodTypes() {
    let result = await core.GetGoodsTypes();
    if (result && result.isok) {
      this.goodTypes = result.dataObj;
      this.$apply();
    }
  }
  async reLoad() {
    this.vm = JSON.parse(JSON.stringify(vm));
    this.goodTypes = [];
    this.goodTypesIndex = -1;
    this.keyword = "";
    await this.loadMore();
    await this.loadGoodTypes();
  }

  share_card(imgurl, name, price) {
    let that = this;
    let data = {}; //e.currentTarget.dataset
    data.codePath =imgurl;//http://i.vzan.cc/image/jpg/2018/6/13/095916a1cf2d5cb40f42be843eb3237dc43e06.jpg
    data.name = name;
    //"iPhoneX手机壳苹果X新款8x潮牌超薄透明软硅胶全包防摔套女款气囊硬壳";
    data.price = "价格：￥" + price; //"1977";
    const ctx = wx.createCanvasContext("shareCard");
    const wW = wx.getSystemInfoSync().windowWidth;
    const wH = wx.getSystemInfoSync().windowHeight;

    downImage(data.codePath, function(cb) {
      if (cb) {
        ctx.setFillStyle("#fff");
        ctx.fillRect(0, 0, wW, wH);
        ctx.setFillStyle("#f2f2f2");
        ctx.fillRect(0, wH * 0.52, wW, wH * 0.08);
        // 店铺logo
        //ctx.drawImage(data.logoPath, wW * 0.04, wH * 0.04, wH * 0.14, wH * 0.14)
        // 产品名字

        drawText(data.name, wW * 0.04, wW * 0.04, wW * 0.63);
        // 店铺分数
        // for (let p = 0; p < 5; p++) {
        // 	if (p < Number(data.score)) {
        // 		drawStar(wW * 0.01, wW * 0.02, wW * 0.32 + (p * 18), wH * 0.12, true);
        // 	} else {
        // 		drawStar(wW * 0.01, wW * 0.02, wW * 0.32 + (p * 18), wH * 0.12, false);
        // 	}
        // }
        // 人均消费
        //ctx.setFontSize(13);
        //ctx.setFillStyle('white');
        //ctx.fillText('人均:￥' + data.price, wW * 0.61, wH * 0.13);
        // 店铺标签
        //drawLabels(data.labels, wW * 0.3, wH * 0.14, wH * 0.28)
        // 二维码
        ctx.drawImage(
          data.codePath,
          wW * 0.17,
          wH * 0.22,
          wH * 0.27,
          wH * 0.27
        );

        ctx.fillText(data.price, wW * 0.38, wH * 0.565);

        //drawText(data.price, wW * 0.04, wH * 0.52, wW * 0.63);
        ctx.draw();

        //that.data.shareCardSetting = data
        //that.setData({ showShareCard: true })
        wx.hideLoading();
      }
    });
    //文字转行
    function drawText(t, x, y, w) {
      var chr = t.split("");
      var temp = "";
      var row = [];
      ctx.setTextAlign("center");
      ctx.setFontSize(16);
      ctx.setFillStyle("#333333");
      for (var a = 0; a < chr.length; a++) {
        if (ctx.measureText(temp).width < w) {
        } else {
          row.push(temp);
          temp = "";
        }
        temp += chr[a];
      }
      row.push(temp);
      if (row.length == 1) {
        //ctx.fillText(row[0], wW * 0.3, wH * 0.08);
        ctx.fillText(row[0], wW * 0.38, wH * 0.08);
      } else {
        for (var b = 0; b < row.length; b++) {
          ctx.fillText(row[b], x, y + (b + 1) * 20);
        }
      }
    }
    // 画星星
    function drawStar(r, R, x, y, fill) {
      ctx.beginPath();
      for (let i = 0; i < 5; i++) {
        ctx.lineTo(
          Math.cos((18 + i * 72) / 180 * Math.PI) * R + x,
          -Math.sin((18 + i * 72) / 180 * Math.PI) * R + y
        );
        ctx.lineTo(
          Math.cos((52 + i * 72) / 180 * Math.PI) * r + x,
          -Math.sin((52 + i * 72) / 180 * Math.PI) * r + y
        );
      }
      ctx.strokeStyle = fill ? "#fea512" : "#fff";
      ctx.fillStyle = fill ? "#fea512" : "#fff";
      ctx.closePath();
      ctx.fill();
      ctx.stroke();
    }
    function drawLabels(labelsArray, x, y, w) {
      let _l = labelsArray;
      var _s = "";
      for (let i = 0; i < _l.length; i++) {
        _s += '"' + _l[i] + '"  ';
      }
      var chr = _s.split("");
      var temp = "";
      var row = [];
      ctx.setFontSize(13);
      ctx.setFillStyle("#fea512");
      for (var a = 0; a < chr.length; a++) {
        if (ctx.measureText(temp).width < w) {
        } else {
          row.push(temp);
          temp = "";
        }
        temp += chr[a];
      }
      row.push(temp);
      if (row.length == 1) {
        ctx.fillText(row[0], x, y + 16);
      } else if (row.length == 2) {
        for (var b = 0; b < row.length; b++) {
          ctx.fillText(row[b], x, y + (b + 1) * 16);
        }
      } else {
        row[1] = row[1].replace(
          row[1].substring(row[1].length - 2, row[1].length),
          "...."
        );
        for (var b = 0; b < 2; b++) {
          ctx.fillText(row[b], x, y + (b + 1) * 16);
        }
      }
    }
    function downImage(code, cb) {
      wx.downloadFile({
        url: code.replace(/http/, "https"), //下载店铺二维码
        success: function(res_1) {
          data.codePath = res_1.tempFilePath;
          cb("isok");
        }
      });
    }
  }
}
</script>
