@{
    ViewBag.Title = "秒杀";
    Layout = "~/Views/Shared/_MiniappLayout.cshtml";
    bool isAvailable = ViewBag.isAvailable;
}

<link href="@(WebSiteConfig.cdnurl)content/enterprise/css/main.css" rel="stylesheet" />
<link href="//j.vzan.cc/miniapp/layui/css/layui.css?v=1" rel="stylesheet" type="text/css" />
<link href="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
<script src="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-datepicker/locales/bootstrap-datepicker.zh-CN.min.js"></script>

@*<link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
<script type="text/javascript" src="https://unpkg.com/element-ui/lib/index.js"></script>*@

<link href="@(WebSiteConfig.cdnurl)content/plugin/elementUI/elementUI.css" rel="stylesheet" />
<script src="@(WebSiteConfig.cdnurl)content/plugin/elementUI/elementUI.js" type="text/javascript"></script>

<div id="app" v-cloak style="margin:5px;">

    <!--搜索活动-->
    <div style="margin-left:17px;">
        <ul class="searchul">
            <li>
                <span class="searchLabel">活动状态：</span>
                <el-select v-model="inputPara.state" clearable placeholder="请选择">
                    <el-option v-bind:key="@((int)FlashDealState.已上架)" v-bind:label="'已上架'" v-bind:value="@((int)FlashDealState.已上架)" size="small"></el-option>
                    <el-option v-bind:key="@((int)FlashDealState.已下架)" v-bind:label="'已下架'" v-bind:value="@((int)FlashDealState.已下架)" size="small"></el-option>
                    <el-option v-bind:key="@((int)FlashDealState.已开始)" v-bind:label="'进行中'" v-bind:value="@((int)FlashDealState.已开始)" size="small"></el-option>
                    <el-option v-bind:key="@((int)FlashDealState.已结束)" v-bind:label="'已结束'" v-bind:value="@((int)FlashDealState.已结束)" size="small"></el-option>
                </el-select>
            </li>
            <li>
                <span class="searchLabel">活动标题：</span>
                <el-input placeholder="请输入搜索标题" v-model="inputPara.title" size="small" style="display:inline" @*prefix-icon="el-icon-search"*@></el-input>
            </li>
            <li>
                <span class="searchLabel">活动时间：</span>
                <el-date-picker v-model="searchDate" v-bind:default-time="['00:00:00', '23:59:59']" value-format="yyyy-MM-dd HH:mm:ss" type="datetimerange"
                                start-placeholder="开始日期" range-separator="至" end-placeholder="结束日期" size="small" align="right">
                </el-date-picker>
            </li>
        </ul>
        <div class="d-flex d-flex-center formsearch">
            <el-button @@click="searchBegin" type="primary" @*plain*@ icon="el-icon-search" size="small">搜索</el-button>
            @*<a @@click="clearInput" style="cursor:pointer;margin-left:1rem;" class="btn btn-primary">清空</a>*@
        </div>
    </div>
    <br />
    <br />
    <div>
        @if (!isAvailable)
        {
            <el-button icon="el-icon-circle-plus-outline" type="primary" size="small" v-bind:disabled="true" title="该功能仅限于旗舰版使用">新增秒杀活动</el-button>
            <span style="color:orangered">（该功能仅限于旗舰版使用）</span>
        }
        else
        {
            <el-button @@click="add" icon="el-icon-circle-plus-outline" type="primary" size="small">新增秒杀活动</el-button>
        }
    </div>

    <!--编辑活动-->
    <el-dialog v-bind:title="editWindowTitle" v-bind:visible.sync="isEdit" width="45%" height="50%" center>
        <div class="dialog-body" style="max-height:45rem;overflow-y:scroll;">
            <el-form ref="flashDealForm" v-bind:model="flashDealForm" v-loading="isAjaxing" label-width="80px">
                <el-form-item label="活动标题：">
                    <el-input v-model="flashDealForm.Title" v-bind:disabled="viewOnly" maxlength="100" placeholder="请输入标题" size="small" style="width:20%"></el-input>
                </el-form-item>
                <el-form-item label="活动时间：">
                    <el-date-picker v-model="flashDealTimer"
                                    v-bind:picker-options="timerConfig"
                                    v-bind:disabled="viewOnly"
                                    v-bind:editable="false"
                                    v-bind:clearable="false"
                                    type="datetimerange"
                                    align="right"
                                    start-placeholder="开始日期"
                                    end-placeholder="结束日期"
                                    value-format="yyyy/MM/dd HH:mm:ss">
                    </el-date-picker>
                </el-form-item>
                <el-form-item label="限购数量：">
                    <el-input v-model="flashDealForm.AmountLimit" maxlength="6" size="small" style="width:30%;" v-bind:disabled="viewOnly">
                        <template slot="prepend">
                            每单
                        </template>
                        <template slot="append">
                            件
                        </template>
                    </el-input>
                </el-form-item>
                <el-form-item label="限制参加：">
                    <el-switch v-model="flashDealForm.OrderLimit" active-text="每人一次" inactive-text="不限制" v-bind:disabled="viewOnly"></el-switch>
                </el-form-item>
                <el-form-item label="广告图：">
                    <div v-if="!viewOnly" @@click="isUploadPic = true"  class="pimg" style="float:left">
                        <img v-if="flashDealForm.Banner" v-bind:src="flashDealForm.Banner" style="height:150px;width:150px;" />
                        <div v-else class="plus-button" >
                            <div class="s-image-uploader-wrapper">
                                <div>
                                    <div class="plus">+</div>
                                    <div class="plus-label">上传图片</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-else class="pimg" style="float:left" >
                        <img style="height:150px;width:150px;" v-bind:src="flashDealForm.Banner"/>
                    </div>
                    <span class="clearfix"></span>
                    <b class="warn" style="padding-left:1rem">建议尺寸：750*750px</b>
                </el-form-item>
                <!--商品列表-->
                <div v-loading="isloadingItem">
                    <el-form-item label="秒杀商品：" style="margin-bottom:0px" v-if="!viewOnly">
                        <el-button @@click="showItemList" icon="el-icon-circle-plus-outline" type="primary" @*plain*@ size="small">添加商品</el-button>
                    </el-form-item>
                    <el-table v-bind:data="flashItems" row-key="Id" border stripe ref="flashItemTable" style="width: 100%">
                        <el-table-column type="expand" style="padding:0px">
                            <!--多规格秒杀价编辑-->
                            <template scope="scope" v-if="scope.row.Specs && scope.row.Specs.length">
                                <el-form label-position="top" size="mini" inline style="display:inline;">
                                    <el-form-item v-for="spec in scope.row.Specs" v-bind:label="spec.Name" style="margin-right:0;width:50%;padding-right:2rem">
                                        <el-input v-bind:disabled="!scope.row.isEdit || viewOnly" placeholder="秒杀价" v-model.number="spec.DealPrice" maxlength="7">
                                            <template slot="prepend">
                                                原价:
                                                <span style="text-decoration:line-through">￥{{scope.row.OrigPrice}}</span>，秒杀价:￥
                                            </template>
                                        </el-input>
                                    </el-form-item>
                                </el-form>
                            </template>
                        </el-table-column>
                        <el-table-column label="商品名称" prop="Title" width="200"></el-table-column>
                        <el-table-column label="秒杀价格">
                            <template scope="scope">
                                <el-popover v-if="scope.row.Specs && scope.row.Specs.length" trigger="hover" placement="top">
                                    <p v-for="spec in scope.row.Specs">{{spec.Name}}：原价<span style="text-decoration:line-through">￥{{spec.OrigPrice}}</span>，秒杀价￥{{spec.DealPrice}}</p>
                                    <div slot="reference" class="name-wrapper" style="cursor:default">
                                        <i class="el-icon-document"></i>&ensp;查看
                                    </div>
                                </el-popover>
                                <el-input v-else v-bind:disabled="!scope.row.isEdit || viewOnly" placeholder="秒杀价" v-model.number="scope.row.DealPrice" maxlength="7">
                                    <template slot="prepend">
                                        原价
                                        <span style="text-decoration:line-through">￥{{scope.row.OrigPrice}}</span>，秒杀价：￥
                                    </template>
                                </el-input>
                            </template>
                        </el-table-column>
                        <el-table-column label="操作" width="200">
                            <template scope="scope">
                                <div v-if="!viewOnly">
                                    <el-button size="mini" v-if="!scope.row.isEdit" @@click="editItem(scope.row)" icon="el-icon-edit">编辑</el-button>
                                    <el-button size="mini" v-else @@click="updateItem(scope.row)" icon="el-icon-circle-check-outline">保存</el-button>
                                    <el-button size="mini" v-if="!scope.row.isEdit" @@click="removeItem([scope.row],true)" icon="el-icon-delete">删除</el-button>
                                    <el-button size="mini" v-else @@click="undoEdit(scope.row)" icon="el-icon-circle-close-outline">撤销</el-button>
                                </div>
                            </template>
                        </el-table-column>
                    </el-table>
                </div>
                <el-form-item label="规则说明：" style="margin-bottom:0">(选填)</el-form-item>
                <el-input type="textarea" v-model="flashDealForm.Description" v-bind:autosize="{minRows:2}" maxlength="800"></el-input>
            </el-form>
        </div>
        <span slot="footer" class="dialog-footer" v-if="viewOnly">
            <el-button @@click="isEdit = false">关 闭</el-button>
        </span>
        <span slot="footer" class="dialog-footer" v-else>
            <el-button @@click="isEdit = false">取 消</el-button>
            <el-button v-if="isNewFlashDeal && !isAjaxing" @@click="addPost" type="primary">保 存</el-button>
            <el-button v-else-if="!isAjaxing" @@click="editConfirm" type="primary">保 存</el-button>
            <el-button v-if="isAjaxing" type="primary">保 存</el-button>
        </span>
    </el-dialog>

    <!--批量新增/移除商品-->
    <el-dialog title="添加商品" v-bind:visible.sync="isSelectItem" width="40%">
        <div class="product-list" style="text-align: center;" v-loading="isloadingItem">
            <el-transfer style="text-align: left; display: inline-block;margin-bottom:2rem"
                         v-model="selectItem"
                         filterable
                         v-bind:props="{key: 'Id',label: 'Title'}"
                         v-bind:titles="['可选商品', '已选商品']"
                         v-bind:button-texts="['移除', '新增']"
                         v-bind:format="{可选: '${total}',选中: '${checked}/${total}'}"
                         v-bind:data="allItem">
            </el-transfer>
            <br />
            <span slot="footer" class="dialog-footer">
                <el-button @@click="isSelectItem = false">关 闭</el-button>
                <el-button type="primary" @@click="itemChange">保 存</el-button>
            </span>
        </div>
    </el-dialog>

    <!--上传图片-->
    <el-dialog v-bind:visible.sync="isUploadPic" width="40%">
        <div class="upload-pic-lay" style="text-align: center;">
            <iframe v-bind:src="uploadUrl" v-if="isUploadPic" style="width: 100%; min-height: 500px; border: 0px;"></iframe>
            <br />
        </div>
    </el-dialog>

    <!--活动列表-->
    <div v-loading="isloading">
        <table class="layui-table">
            <thead>
                <tr>
                    <th class="centertext">活动标题</th>
                    <th class="centertext">活动状态</th>
                    <th class="centertext">距离活动开始</th>
                    <th class="centertext">活动商品</th>
                    <th class="centertext">限购</th>
                    <th class="centertext">限制参与</th>
                    <th class="centertext">开始时间</th>
                    <th class="centertext">结束时间</th>
                    <th class="centertext">小程序页面路径</th>
                    <th class="centertext">操作</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in flashDeals">
                    <td style="width:10%">{{item.Title}}</td>
                    <td style="width:7%;font-weight:700;" v-bind:class="item.StateStr">{{item.StateStr}}</td>
                    <td style="width:9%">{{getCountDown(item.Begin)}}</td>
                    <td style="width:7%;text-align:center;">{{item.ItemCount}}</td>
                    <td style="width:5%;text-align:center;">每单{{item.AmountLimit}}件</td>
                    <td style="width:7%;text-align:center;">{{item.OrderLimit ? '每人一次' : '无限制'}}</td>
                    <td style="width:10%">{{item.Begin}}</td>
                    <td style="width:10%">{{item.End}}</td>
                    <td style="width:10%">/pages/flashDeal/{{item.Id}}</td>
                    <td style="width:23%">
                        <el-button-group>
                            <el-button @@click="onShelf(item)"
                                       v-if="item.State === @((int)FlashDealState.已下架) && !(timeCompare(new Date(item.Begin),DateTimeNow) && !timeCompare(new Date(item.End),DateTimeNow))"
                                       icon="el-icon-upload2" type="success" size="small">
                                上架
                            </el-button>
                            <el-button @@click="offShelf(item,'下架活动将停止倒计时，确认继续吗？')"
                                       v-if="item.State === @((int)FlashDealState.已上架)"
                                       icon="el-icon-download" type="warning" size="small">
                                下架
                            </el-button>
                            <el-button @@click="offShelf(item,'下架活动将停止活动（但不影响已下单用户支付），确认继续吗？')"
                                       v-if="item.State === @((int)FlashDealState.已开始)"
                                       icon="el-icon-download" type="warning" size="small">
                                下架
                            </el-button>
                            <el-button @@click="edit(item)"
                                       v-if="item.State === @((int)FlashDealState.已下架)"
                                       icon="el-icon-edit" type="primary" size="small">
                                编辑
                            </el-button>
                            <el-button @@click="view(item)"
                                       v-if="item.State === @((int)FlashDealState.已上架)|| item.State === @((int)FlashDealState.已开始) || item.State === @((int)FlashDealState.已结束)"
                                       icon="el-icon-document" type="primary" size="small">
                                查看
                            </el-button>
                            <el-button @@click="viewOrder(item)" icon="el-icon-search" type="primary" size="small">成交订单</el-button>
                            <el-button v-if="(item.State === @((int)FlashDealState.已上架) || item.State === @((int)FlashDealState.已下架)) && !timeCompare(new Date(item.End),DateTimeNow)"
                                       @@click="startNow(item)" icon="el-icon-time" type="primary" size="small">
                                立刻开始
                            </el-button>
                            <el-button @@click="remove(item)"
                                       v-if="item.State === @((int)FlashDealState.已下架)"
                                       icon="el-icon-delete" type="danger" size="small">
                                删除
                            </el-button>
                        </el-button-group>
                    </td>
                </tr>
                <tr v-if="!flashDeals.length">
                    <td colspan="10" style="text-align:center">暂无记录</td>
                </tr>
            </tbody>
        </table>
        <div class="pagerHolder" style="text-align:center" v-show="flashDealCount">
            <el-pagination v-bind:current-page.sync="queryPara.pageIndex"
                           v-bind:total="flashDealCount"
                           v-bind:page-size="10"
                           v-bind:pager-count="5"
                           background
                           layout="total,prev,pager,next">
            </el-pagination>
        </div>
    </div>

</div>

<input id="appId" value="@ViewBag.appId" type="hidden" />
<input id="iniBegin" type="hidden" value="@(DateTime.Now.AddDays(1).ToShortDateString() + " 08:00:00")" />
<input id="iniEnd" type="hidden" value="@(DateTime.Now.AddDays(2).ToShortDateString() + " 08:00:00")" />

<script type="text/javascript">
    var appId = document.getElementById('appId').value;
    var iniBegin = document.getElementById('iniBegin').value;
    var iniEnd = document.getElementById('iniEnd').value;
    var app = null;
    var standalone = null;
    $(function () {
        Vue.config.silent = true;
        app = new Vue({
            el: '#app',
            data: {
                //读取动画：加载活动列表，加载活动商品，更新活动
                isloading: false, isloadingItem: false, isAjaxing: false,
                //编辑活动 
                isEdit: false,
                //查看活动（不可编辑）
                viewOnly:false,
                //开启选择物品
                isSelectItem: false,
                //已选中物品
                selectItem: [],
                //全部物品
                allItem: [],
                //秒杀活动列表
                flashDeals: [],
                //活动物品列表
                flashItems: [],
                //活动编辑表单
                flashDealForm: {},
                //活动数据总数
                flashDealCount: 0,
                //搜索日期
                searchDate: '',
                //输入参数
                inputPara: {
                    title: '',
                    state: null,
                    queryStart: null,
                    queryEnd: null,
                },
                //查询参数
                queryPara: {
                    appId: appId,
                    title: '',
                    state: null,
                    queryStart: null,
                    queryEnd: null,
                    pageIndex: 1
                },
                //上传图片
                uploadUrl: '',
                //显示上传图片窗口
                isUploadPic: false,
                //默认活动开始日期
                iniBegin: iniBegin,
                //默认活动结束日期
                iniEnd: iniEnd
            },
            computed: {
                //新增活动表单格式
                newFlashDeal: function () {
                    return {
                        Id: 0,
                        Title: '',
                        Banner: '',
                        Begin: this.iniBegin,
                        End: this.iniEnd,
                        OrderLimit: 0,
                        AmountLimit: 1,
                        Description: '1.活动有效期内，用户在商城中按秒杀价购买指定的商品，活动结束后，价格恢复到商品原设定价格；\n2.秒杀商品不能放入购物车，提交订单后必需在30分钟内完成支付，否则订单自动失效，秒杀不能使用优惠券和会员折扣优惠；\n3.秒杀不能与优惠券／会员折扣等其他优惠同时使用，满包邮除外;'
                    };
                },
                //编辑活动窗口标题
                editWindowTitle: function () {
                    if (this.isNewFlashDeal) {
                        return '新增秒杀活动';
                    }
                    return this.flashDealForm.Title + (this.viewOnly ? '（查看）' : '');
                },
                //上传图片完成（回调）
                uploadComplete: {
                    get: function () {
                        return this.flashDealForm.Banner;
                    },
                    set: function (newPic) {
                        this.flashDealForm.Banner = newPic;
                    },
                },
                //是否新增活动
                isNewFlashDeal: function () {
                    return !this.flashDealForm.Id;
                },
                //活动时间（格式化）
                flashDealTimer: {
                    get: function () {
                        return [this.flashDealForm.Begin, this.flashDealForm.End];
                    },
                    set: function (timer) {
                        this.flashDealForm.Begin = timer[0];
                        this.flashDealForm.End = timer[1];
                    }
                },
                //活动列表翻页（回调）
                pageIndexChange: function () {
                    return this.queryPara.pageIndex;
                },
                //活动时间选择器配置
                timerConfig: function () {
                    thisApp = this;
                    return {
                        disabledDate(timer) {
                            now = new Date(Date.now());
                            return thisApp.dateCompare(timer, now);
                        }
                    }
                },
                DateTimeNow: function () {
                    return new Date(Date.now());
                },
            },
            created: function () {
                thisApp = this;
                //初始化活动列表
                thisApp.pageChange(1);
                //初始化上传图片路由
                thisApp.uploadUrl = String.raw`/tools/UpLoadImgFrm?Id=${this.queryPara.appId}&appId=${this.queryPara.appId}&multi_selection=0&maxImgSize=2&objKey=uploadComplete&objType=1&maxCount=1&remainCount=1`;
            },
            watch: {
                //打开批量新增/移除商品窗口（初始化数据）
                isSelectItem: function (isGet) {
                    if (isGet) {
                        this.getSelectItem(thisApp.flashDealForm.Id);
                    }
                },
                //上传图片完成（关闭窗口）
                uploadComplete: function () {
                    this.isUploadPic = false;
                },
                //活动开启日期（格式化回调）
                beginDateChange: function (newDate) {
                    this.flashDealForm.Begin = newDate;
                },
                //活动结束日期（格式化回调）
                endDateChange: function (newDate) {
                    this.flashDealForm.End = newDate;
                },
                //搜索活动日期（格式化回调）
                searchDate: function (queryDate) {
                    this.inputPara.queryStart = queryDate[0];
                    this.inputPara.queryEnd = queryDate[1];
                },
                //页码变化（回调）
                pageIndexChange: function () {
                    this.getList(this.queryPara);
                },
            },
            methods: {
                //返回初始化活动表单格式
                flashDeal: function (ini) {
                    var newForm = this.copyObject(this.newFlashDeal);
                    if (!ini) {
                        return newForm;
                    }
                    //数据库对象序列化为编辑表单
                    //筛选编辑字段
                    formatField = ['Id', 'Title', 'Banner', 'Begin', 'End', 'AmountLimit', 'OrderLimit', 'Description'];
                    //批量赋值
                    formatField.forEach(field => { newForm[field] = ini[field]; });
                    newForm.OrderLimit = !!newForm.OrderLimit;
                    return newForm;
                    //Object.getOwnPropertyNames(ini).forEach(attrName => { console.log(attrName); console.log(newForm[attrName]); newForm[attrName] = ini[attrName]; })
                },
                //进入新增活动模式
                add: function () {
                    this.isEdit = true;
                    this.flashDealForm = this.flashDeal();
                    this.flashItems = [];
                    this.viewOnly = false;
                },
                //进入编辑活动模式
                edit: function (flashDeal) {
                    this.isEdit = true;
                    this.flashDealForm = this.flashDeal(flashDeal);
                    this.getFlashItem(flashDeal.Id);
                    this.viewOnly = false;
                },
                //进入删除活动模式
                remove: function (flashDeal) {
                    thisApp = this;
                    thisApp.$confirm('确认删除该活动吗？', '警告', {
                        confirmButtonText: '删除',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        thisApp.removePost(flashDeal);
                    });
                },
                //进入上架活动模式
                onShelf: function (item) {
                    thisApp = this;
                    if (thisApp.timeCompare(new Date(item.End), thisApp.DateTimeNow)) {
                        layer.msg('活动结束时间必须大于当前时间');
                        return;
                    }
                    //立即开始活动（活动结束大于当前时间）
                    if (thisApp.timeCompare(new Date(item.Begin), thisApp.DateTimeNow)) {
                        thisApp.startNow(item);
                        return;
                    }
                    timeDiff = thisApp.getRemainTime(new Date(Date.now()),new Date(item.Begin));
                    thisApp.$confirm(String.raw`上架活动将开始活动倒计时，距离活动开始还有${timeDiff}，确认上架吗？`, '警告', {
                        confirmButtonText: '上架',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        thisApp.onShelfPost(item);
                    }).catch(function() {
                        return;
                    });
                },
                //进入下架活动模式
                offShelf: function (item, msg) {
                    thisApp = this;
                    thisApp.$confirm(msg, '警告', {
                        confirmButtonText: '下架',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        thisApp.offShelfPost(item);
                    }).catch(function () {
                        return;
                    });
                //进入上架活动模式
                },
                //进去开始活动模式
                startNow: function (item) {
                    thisApp = this;
                    timeDiff = thisApp.getRemainTime(new Date(Date.now()), new Date(item.Begin));
                    thisApp.$confirm(String.raw`立即开始将调整“活动开始时间”为马上开始，距离活动开始还有${timeDiff}，确认继续吗？`, '警告', {
                        confirmButtonText: '立即开始',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        thisApp.startNowPost(item);
                    }).catch(function () {
                        return;
                    });
                    //进入上架活动模式
                },
                //进入查看活动模式
                view: function (flashDeal) {
                    this.isEdit = true;
                    this.flashDealForm = this.flashDeal(flashDeal);
                    this.getFlashItem(flashDeal.Id);
                    this.viewOnly = true;
                },
                //跳转查看活动订单
                viewOrder: function (flashDeal) {
                    this.isloading = true;
                    location.href = String.raw`/enterprisepro/OrderTotalList?appId=${flashDeal.Aid}&tab=1&flashDealId=${flashDeal.Id}`;
                },
                //编辑确认保存
                editConfirm: function () {
                    thisApp = this;
                    thisApp.$confirm('确认保存吗？', '提示', {
                        confirmButtonText: '保存',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(thisApp.editPost).catch(function () {
                        return;
                    });
                },
                //新增活动提交请求
                addPost: function () {
                    thisApp = this;
                    newFlashDeal = thisApp.copyObject(thisApp.flashDealForm);
                    newFlashItems = thisApp.copyObject(thisApp.flashItems);
                    //检查输入
                    result = thisApp.checkUserInput(newFlashDeal);
                    if (!result.isValid) {
                        layer.msg(result.msg);
                        return;
                    }
                    if (!newFlashItems || !newFlashItems.length) {
                        layer.msg('请添加至少一个秒杀商品');
                        return;
                    }
                    //反序列化保存
                    newFlashItems = thisApp.deserialize(newFlashItems);
                    //序列化限购格式
                    newFlashDeal.OrderLimit = newFlashDeal.OrderLimit ? 1 : 0;
                    thisApp.isAjaxing = true;
                    //提交请求
                    $.post('/FlashDeal/Add', {
                        appId: this.queryPara.appId, inputDeal: newFlashDeal, inputItem: newFlashItems
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        thisApp.isEdit = false;
                        thisApp.getList(thisApp.queryPara);
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isAjaxing = false;
                    });
                },
                //编辑活动提交请求
                editPost: function () {
                    thisApp = this;
                    updateFlash = thisApp.copyObject(thisApp.flashDealForm);
                    //检查输入
                    result = thisApp.checkUserInput(updateFlash);
                    if (!result.isValid) {
                        layer.msg(result.msg);
                        return;
                    }
                    //序列化限购格式
                    updateFlash.OrderLimit = updateFlash.OrderLimit ? 1 : 0;
                    thisApp.isAjaxing = true;
                    $.post('/FlashDeal/Update', {
                        appId: thisApp.queryPara.appId, updateDeal: updateFlash
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        thisApp.isEdit = false;
                        thisApp.getList(thisApp.queryPara);
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isAjaxing = false;
                    });
                },
                //删除活动提交请求
                removePost: function (flashDeal) {
                    thisApp = this;
                    thisApp.isloading = true;
                    $.post('/FlashDeal/Delete', {
                        appId: thisApp.queryPara.appId, flashDealId: flashDeal.Id
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloading = false;
                        thisApp.getList(thisApp.queryPara);
                    });
                },
                //上架活动提交请求
                onShelfPost: function (flashDeal) {
                    thisApp = this;
                    thisApp.isloading = true;
                    $.post('/FlashDeal/onShelf', {
                        appId: thisApp.queryPara.appId, flashDealId: flashDeal.Id
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloading = false;
                        thisApp.getList(thisApp.queryPara);
                    });
                },
                //下架活动提交请求
                offShelfPost: function (flashDeal) {
                    thisApp = this;
                    thisApp.isloading = true;
                    $.post('/FlashDeal/offShelf', {
                        appId: thisApp.queryPara.appId, flashDealId: flashDeal.Id
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloading = false;
                        thisApp.getList(thisApp.queryPara);
                    });
                },
                //开始活动提交请求
                startNowPost: function (flashDeal) {
                    thisApp = this;
                    thisApp.isloading = true;
                    $.post('/FlashDeal/Start', {
                        appId: thisApp.queryPara.appId, flashDealId: flashDeal.Id
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloading = false;
                        thisApp.getList(thisApp.queryPara);
                    });
                },
                //进入编辑物品
                editItem: function (item) {
                    if (item.Specs) {
                        this.$refs.flashItemTable.toggleRowExpansion(item, true)
                    }
                    item.backup = this.copyObject(item);
                    item.isEdit = true;
                    this.flashItems = Array.from(this.flashItems);
                },
                //撤销编辑物品
                undoEdit: function (item) {
                    thisApp = this;
                    index = thisApp.flashItems.findIndex(thisItem => thisItem.Id === item.Id);
                    thisApp.flashItems[index] = thisApp.copyObject(item.backup);
                    thisApp.flashItems = Array.from(thisApp.flashItems);
                },
                //更新物品提交请求
                updateItem: function (item) {
                    thisApp = this;
                    if (thisApp.isNewFlashDeal) {
                        item.isEdit = false;
                        thisApp.flashItems = Array.from(thisApp.flashItems);
                        return;
                    }
                    thisApp.isloadingItem = true;
                    postItem = thisApp.deserialize([thisApp.copyObject(item)])[0];
                    $.post('/FlashDeal/UpdateItem', {
                        appId: thisApp.queryPara.appId,
                        dealItem: postItem,
                    }).then(function (result) {
                        thisApp.isloadingItem = false;
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        item.isEdit = false;
                        thisApp.getFlashItem(item.DealId); 
                    }).fail(function (error) {
                        thisApp.isloadingItem = false;
                        alert(String.raw`error:${result.statusText}`);
                    });
                },
                //新增物品提交请求
                addItem: function (items, refresh, callBack) {
                    thisApp = this;
                    thisApp.isloadingItem = true;
                    items = thisApp.deserialize(items);
                    $.post('/FlashDeal/AddItem', {
                        appId: thisApp.queryPara.appId,
                        flashDealId: thisApp.flashDealForm.Id,
                        newItem: items
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        if (refresh) {
                            thisApp.getFlashItem(thisApp.flashDealForm.Id);
                        }
                    }).fail(function (error) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloadingItem = false;
                        callBack ? callBack() : null;
                    });
                },
                //移除物品提交请求
                removeItem: function (items, refresh, confirm, callBack) {
                    thisApp = this;
                    if (thisApp.isNewFlashDeal) {
                        thisApp.flashItems = thisApp.flashItems.filter(item => !items.find(delItem => delItem.Id === item.Id));
                        return;
                    }
                    function postRequest() {
                        thisApp.isloadingItem = true;
                        $.post('/FlashDeal/DeleteItem', {
                            appId: thisApp.queryPara.appId,
                            flashDealId: thisApp.flashDealForm.Id,
                            deleteItem: items
                        }).then(function (result) {
                            if (!result.isok) {
                                layer.msg(result.Msg);
                                return;
                            }
                        }).fail(function (error) {
                            alert(String.raw`error:${result.statusText}`);
                        }).always(function () {
                            thisApp.isloadingItem = false;
                            callBack ? callBack() : null;
                            if (refresh) {
                                thisApp.getFlashItem(thisApp.flashDealForm.Id);
                            }
                        });
                    }
                    if (confirm) {
                        postRequest();
                        return;
                    }
                    thisApp.$confirm('确认删除该物品吗？', '警告', {
                        confirmButtonText: '删除',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(postRequest).catch(function () {
                        return;
                    });
                },
                //活动列表翻页
                pageChange: function (pageIndex) {
                    this.queryPara.pageIndex = pageIndex;
                    this.getList(this.queryPara, this.pageChanged);
                },
                //批量新增/移除物品
                itemChange: function () {
                    thisApp = this;
                    if (!thisApp.selectItem.length) {
                        layer.msg('请添加至少一个秒杀商品1件商品');
                        return;
                    }
                    //新增物品
                    newItem = thisApp.allItem.filter(item => thisApp.selectItem.indexOf(item.SourceId) > -1 && !thisApp.flashItems.find(currItem=>currItem.SourceId === item.SourceId));
                    //删除物品
                    deleteItem = thisApp.flashItems.filter(item => thisApp.selectItem.indexOf(item.SourceId) === -1);
                    //新增活动（缓存本地）
                    if (thisApp.isNewFlashDeal && newItem.length) {
                        //新增本地
                        thisApp.flashItems = thisApp.flashItems.concat(newItem);
                    }
                    if (thisApp.isNewFlashDeal && deleteItem.length) {
                        //删除本地
                        thisApp.flashItems = thisApp.flashItems.filter(currItem => deleteItem.find(item => item.Id === currItem.Id));
                    }
                    if (thisApp.isNewFlashDeal) {
                        thisApp.isSelectItem = false
                        return;
                    }
                    //编辑活动（立即提交）
                    var tasks = [];
                    if (newItem.length) {
                        //新增提交请求
                        tasks.push(function () {
                            var $d = $.Deferred();
                            thisApp.addItem(newItem, false, function () {
                                $d.resolve();
                            });
                            return $d.promise();
                        })
                    }
                    if (deleteItem.length) {
                        //删除提交请求
                        tasks.push(function () {
                            var $d = $.Deferred();
                            thisApp.removeItem(deleteItem, false, true, function () {
                                $d.resolve();
                            });
                            return $d.promise();
                        })
                    }
                    if (newItem.length || deleteItem.length) {
                        //刷新提交请求
                        tasks.push(function () {
                            var $d = $.Deferred();
                            thisApp.getFlashItem(thisApp.flashDealForm.Id);
                            $d.resolve();
                            return $d.promise();
                        })
                    }
                    thisApp.$confirm('确认保存"已选商品"变动？', '警告', {
                        confirmButtonText: '保存',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        //同步执行
                        thisApp.isSelectItem = false
                        tasks.reduce((previous, p) => previous.then(p), $.Deferred().resolve());
                    }).catch(function () {
                        return;
                    });
                },
                //检查用户输入活动表单
                checkUserInput: function (flashDeal) {
                    result = { isValid: false, msg: '' };
                    if (!flashDeal.Title) {
                        result.msg = '请输入活动标题';
                        return result;
                    }
                    if (!flashDeal.Begin) {
                        result.msg = '请设置开始时间';
                        return result;
                    }
                    if (!flashDeal.End) {
                        result.msg = '请设置结束时间';
                        return result;
                    }
                    if (new Date(flashDeal.Begin) >= new Date(flashDeal.End)) {
                        result.msg = '开始时间必须小于结束时间';
                        return result;
                    }
                    if (!flashDeal.Banner) {
                        result.msg = '请上传广告图';
                        return result;
                    }
                    result.isValid = true;
                    return result;
                },
                //显示可选物品列表
                showItemList: function () {
                    this.isSelectItem = true;
                    this.selectItem = this.flashItems.map(item => item.SourceId);
                },
                //搜索活动表单提交请求
                searchBegin: function () {
                    thisApp = this;
                    field = ['title', 'state', 'queryStart', 'queryEnd'];
                    field.forEach(name => { thisApp.queryPara[name] = thisApp.inputPara[name]; });
                    thisApp.flashDealCount = 0;
                    thisApp.getList(thisApp.queryPara);
                },
                //清空搜索表单
                clearInput: function () {
                    field = ['contact', 'title', 'queryStart', 'queryEnd'];
                    field.forEach(name => this.inputPara[name] = '');
                    this.dateHolder = null;
                },
                //获取活动列表数据
                getList: function (queryPara, callBack) {
                    thisApp = this;
                    thisApp.isloading = true;
                    $.get('/FlashDeal/Get', queryPara).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        if (queryPara.pageIndex === 1) {
                            thisApp.flashDealCount = result.dataObj.total;
                        }
                        thisApp.flashDeals = result.dataObj.deals;
                        !callBack || callBack(result);
                    }).fail(function (result) {
                        alert(String.raw`error:${result.statusText}`);
                    }).always(function () {
                        thisApp.isloading = false;
                    });
                },
                //获取活动物品列表数据
                getFlashItem: function (flashDealId) {
                    thisApp = this;
                    thisApp.isloadingItem = true;
                    $.get('/FlashDeal/GetItem', {
                        appId: thisApp.queryPara.appId,
                        flashDealId: flashDealId,
                    }).then(function (result) {
                        if (!result.isok) {
                            layer.msg(result.Msg);
                            return;
                        }
                        thisApp.flashItems = thisApp.serialize(result.dataObj);
                        thisApp.isloadingItem = false;
                    }).fail(function (result) {
                        alert(String.raw`error:${result.statusText}`);
                        thisApp.isloadingItem = false;
                    });
                },
                //获取可选活动武器列表数据
                getSelectItem: function (flashDealId) {
                    var thisApp = this;
                    thisApp.isloadingItem = true;
                    $.get('/FlashDeal/SelectItem', {
                        appId: thisApp.queryPara.appId,
                        flashDealId: flashDealId
                    }).then(function (result) {
                        if (!result.isok) {
                            return;
                        }
                        result.dataObj.forEach(item => {
                            if (item.Specs && item.Specs.length) {
                                item.Specs.forEach(spec => {
                                    spec.DealPrice = thisApp.formatPrice(spec.DealPrice, 0.01);
                                    spec.OrigPrice = thisApp.formatPrice(spec.OrigPrice, 0.01);
                                });
                            }
                            item.isEdit = false;
                        });
                        thisApp.allItem = result.dataObj;
                    }).always(function () {
                        thisApp.isloadingItem = false;
                    });
                },
                //创建对象副本（解除双向绑定）
                copyObject: function (obj) {
                    console.log(JSON.stringify(obj));
                    return JSON.parse(JSON.stringify(obj));
                },
                //格式化价格（价格，单位）
                formatPrice: function (price, unit) {
                    return parseFloat(parseFloat(price * unit).toFixed(2));
                },
                //日期对比（dateTime1 < dateTime2）
                dateCompare: function (dateTime1, dateTime2) {
                    date1 = new Date(dateTime1.getFullYear(), dateTime1.getMonth(), dateTime1.getDate(), 0, 0, 0, 0);
                    date2 = new Date(dateTime2.getFullYear(), dateTime2.getMonth(), dateTime2.getDate(), 0, 0, 0, 0);
                    return date1.getTime() < date2.getTime();
                },
                //日期&时间对比（dateTime1 < dateTime2）
                timeCompare: function (dateTime1,dateTime2) {
                    return dateTime1.getTime() < dateTime2.getTime();
                },
                //格式化倒计时（距离活动开始时间）
                getRemainTime: function (faultDate, completeTime) {
                    var days = 0;
                    var hours = 0;
                    var minutes = 0
                    var stime = Date.parse(faultDate);
                    var etime = Date.parse(completeTime);
                    if (new Date(stime).getTime() < new Date(etime).getTime())
                    {
                        var usedTime = etime - stime;  //两个时间戳相差的毫秒数  
                        days = Math.floor(usedTime / (24 * 3600 * 1000));
                        //计算出小时数  
                        var leave1 = usedTime % (24 * 3600 * 1000);    //计算天数后剩余的毫秒数  
                        hours = Math.floor(leave1 / (3600 * 1000));
                        //计算相差分钟数  
                        var leave2 = leave1 % (3600 * 1000);        //计算小时数后剩余的毫秒数  
                        minutes = Math.floor(leave2 / (60 * 1000));
                    }
                    var time = String.raw`${days}天${hours}时${minutes > 0 ? minutes +1: 0}分`;
                    return time;
                },
                //获取活动倒计时
                getCountDown: function (beginString) {
                    return this.getRemainTime(new Date(Date.now()),new Date(beginString));
                },
                //序列化秒杀活动物品
                serialize: function (flashItem) {
                    flashItem.forEach(item => {
                        item.OrigPrice = thisApp.formatPrice(item.OrigPrice, 0.01);
                        item.DealPrice = thisApp.formatPrice(item.DealPrice, 0.01);
                        item.isEdit = false;
                        if (!!item.Specs && item.Specs.length) {
                            item.Specs = JSON.parse(item.Specs);
                            item.Specs.forEach(spec => {
                                spec.OrigPrice = thisApp.formatPrice(spec.OrigPrice, 0.01);
                                spec.DealPrice = thisApp.formatPrice(spec.DealPrice, 0.01);
                            });
                        }
                    });
                    return flashItem;
                },
                //反序列秒杀活动物品
                deserialize: function (flashItem) {
                    //序列化金额格式
                    flashItem.forEach(item => {
                        item.OrigPrice = thisApp.formatPrice(item.OrigPrice, 100);
                        item.DealPrice = thisApp.formatPrice(item.DealPrice, 100);
                        item.backup = null;
                        if (item.Specs && item.Specs.length) {
                            item.Specs.forEach(spec => {
                                spec.OrigPrice = thisApp.formatPrice(spec.OrigPrice, 100);
                                spec.DealPrice = thisApp.formatPrice(spec.DealPrice, 100);
                            });
                            item.Specs = JSON.stringify(item.Specs);
                        }
                    });
                    return flashItem;
                },
            },
        });
    });
</script>

<style>
    .el-transfer-panel__body { height: 336px; }  .el-transfer-panel__list { min-height: 284px; }  .el-form-item .el-form-item__label { width: 90px !important; }  .el-input-group input { text-align: center; }  .plus-button { box-shadow: none !important; border: 2px dashed #aaa; color: #888; cursor: pointer; text-align: center; height: 120px; transition: all .2s cubic-bezier(.7,0,.3,1); width: 120px; }  .plus-button .plus { font-size: 100px; line-height: 1; font-weight: 700; margin-top: -10px; }  .plus-label { font-size: 14px; position: relative; text-align: center; top: -8px; }  .centertext { vertical-align: middle !important; text-align: center; }  span.layui-laypage-curr, span.layui-laypage-skip { float: none; padding-top: 0; }  .searchul { width: 100%; margin: 20px 0px 14px 0px; }  .searchul li { float: left; margin-right: 25px; }  .searchLabel { float: left; padding-top: 5px; padding-right: 8px; }  .searchul li input, .searchul li select { width: 140px; } td[class=已上架] { color:dodgerblue } td[class=已下架] { color:orange } td[class=已开始] { color:darkseagreen } td[class=已结束] { color:red }
</style>