
@using User.MiniApp.comment;
@model CommonSetting
@{
    int aid = ViewBag.appId;
    int storeId = ViewBag.storeId;
    int pageType = ViewBag.PageType;
    bool isFrame = false;   //是否 iframe 加载
    int sortShoppingSwtich = ViewBag.sortShoppingSwtich;//排队购物功能开关
    switch (pageType)
    {
        case (int)TmpType.小程序餐饮模板:
            ViewBag.Title = "排队拿号";
            Layout = "~/Views/Shared/_MiniappLayout.cshtml";
            break;
        case (int)TmpType.小程序专业模板:
            ViewBag.Title = "排队购物";
            Layout = "";
            isFrame = true;
            break;
    }

}

@if (isFrame)   //iFrame加载时需单独加载这些原模板页中提供的js
{
    <script src="@WebSiteConfig.MiniappZyUrl/js/jquery.min.js"></script>
    <script src="@(WebSiteConfig.cdnurl)content/jsPolyfill/Polyfill.js?v=@WebSiteConfig.cdnVersion"></script>
    <script src="@WebSiteConfig.MiniappZyUrl/layer/layer.js"></script>
    <script src="@WebSiteConfig.MiniappZyUrl/js/vue.js"></script>
    <script src="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap/js/bootstrap.js"></script>
    <script src="@WebSiteConfig.MiniappZyUrl/layui/layui.js"></script>

    <script src="@(WebSiteConfig.cdnurl)content/assets/global/scripts/app.min.js" type="text/javascript"></script>
    <script src="@(WebSiteConfig.cdnurl)content/assets/layouts/layout/scripts/layout.min.js" type="text/javascript"></script>

    <script src="@(WebSiteConfig.cdnurl)content/assets/global/scripts/appTools.js"></script>
    <script src="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-datetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>


    <link href="/Content/assets/global/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="@(WebSiteConfig.cdnurl)content/newhome/css/dzbase.css?v3" rel="stylesheet" />
    <link href="@(WebSiteConfig.cdnurl)content/newhome/css/base.css?v3" rel="stylesheet" />
    <link href="/Content/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}
<link rel="stylesheet" type="text/css" href="@WebSiteConfig.MiniappZyUrl/layui/css/layui.css?v=1" />
<link href="@(WebSiteConfig.cdnurl)content/enterprise/css/main.css" rel="stylesheet" />
<style>
    .lead.text-muted { margin-top: 20px; color: red; }

    .sweet-alert.showSweetAlert h2 { font-size: 20px; }

    table { margin: 20px 0px 0px 20px; color: #616060; }

    table tr { height: 35px; }

    table th { text-align: center; }

    .ml10 { margin-left: 20px; }

    .modal-title { font-size: 16px; font-weight: bold; }

    .modal-body ul li { width: 50%; height: 28px; float: left; }

    .detail_title { color: #4a86e8; font-size: 16px; margin-bottom: 10px; }
    [v-cloak] { display: none; }
    .layui-form-switch { margin-top: 0px; height: 24px; width: 53px; }
    .layui-form-onswitch { border-color: #2196f3; background-color: #2196f3; }
    /*.layui-form { width: 665px; margin-top: 30px; }*/
    .layui-form tr { height: 50px; }
    .layui-form .title { text-align: right; }
    .layui-tab-brief > .layui-tab-title .layui-this { color: #0094ff !important; }
        .layui-tab-brief > .layui-tab-more li.layui-this:after, .layui-tab-brief > .layui-tab-title .layui-this:after { border-color: #0094ff !important; }
    .table-striped > tbody > tr:nth-of-type(odd) { background-color: #F0F8FF; }
    .selected { border-color: #2196f3; color: #fff; background: #2196f3; }
    .selected:hover { color: #fff; }

    .searchbox td { width: 100px; }
    .redFont { color: red; }
    a {color: #337ab7;text-decoration: none;}

    body { background-color:white; }
    .searchbox td { font-size:14px; }
    .table > thead > tr > th { font-size:14px; }
    .table > tbody > tr > td { font-size:14px; }
</style>
<input type="hidden" id="CName_Hidden" value="小程序" />

<div id="sortQueues" class="container-fluid" v-cloak>
    <table>
        <tr>
            @{
                if (pageType == 22 && sortShoppingSwtich == 1)
                {
                    <td width="220px">
                        <div class="layui-form" title="请升级到更高版本">
                            &nbsp; <label style="font-size: 16px; font-weight:bold; color:#5691fc">&nbsp;排队开关</label>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type="checkbox" lay-skin="switch" lay-text="开|关" disabled="disabled">
                        </div>
                    </td>
                    <td>
                        <a href="javascript:void(0);" style="background-color:#5691fc;border-color:#5691fc;" class="btn btn-success temp-btn-setting" title="请升级到更高版本">
                            重置队列
                        </a>
                    </td>
                }
                else
                {
                    <td width="220px">
                        <div class="layui-form">
                            &nbsp; <label style="font-size: 16px; font-weight:bold; color:#5691fc">&nbsp;排队开关</label>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type="checkbox" lay-skin="switch" lay-text="开|关" v-model="sortQueueSwitch">
                        </div>
                    </td>
                    <td>
                        <a href="javascript:void(0);" style="background-color:#5691fc;border-color:#5691fc;" class="btn btn-success temp-btn-setting" data-itemid="0" data-name="" v-on:click="resetSortQueue()">
                            重置队列
                        </a>
                    </td>
                }
            }
          
        </tr>
    </table>
    
    <br />
    <br />
    <div class="layui-tab layui-tab-brief" lay-filter="tab_page">
        <ul class="layui-tab-title">
            <li lay-id="queueing">排队中</li>
            <li lay-id="processed">已作废</li>
        </ul>
        <div class="layui-tab-content">
        </div>
    </div>
    <div>
        <table class="searchbox">
            <tr>
                <td class="tr">起止时间：</td>
                <td>
                    <input type="text" class="input-sm form-control time" id="sortTime" style="width:250px;" readonly />
                </td>
                <td class="tr">排队手机号：</td>
                <td>
                    <input type="text" class="input-sm form-control" v-model="searchData.telephone" onkeyup="value=value.replace(/[^\d]/g,'')"/>
                </td>
                <td class="tr">排队号码：</td>
                <td>
                    <input type="text" class="input-sm form-control" v-model="searchData.sortNo" onkeyup="value=value.replace(/[^\d]/g,'')"/>
                </td>
                <td style="width:220px; text-align:center;">
                    <button type="button" class="layui-btn layui-btn-primary selected" v-on:click="getSortQueues()">搜索</button>
                </td>
            </tr>
        </table>

        <!--#region 排队数据表格-->
        <div class="mt10">
            <table class="table table-striped table-hover" style="width:98%; text-align:center; margin-right:20px;">
                <thead>
                    <tr class="text-center active">
                        <th>排队号码</th>
                        <th>手机号</th>
                        <th>微信昵称</th>
                        <th>排队时间</th>
                        <th v-if="pageType=='8'">就餐人数</th> <!--餐饮版才有此列-->
                        <th v-if="curPage=='queueing'">操作</th>
                        <th v-else>状态</th>
                    </tr>
                </thead>
                <tbody id="bcontent">
                    <tr v-for="(item,index) in sortQueues">
                        <td width="180px">{{item.sortNo}}</td>
                        <td width="180px">{{item.telephone}}</td>
                        <td width="180px">{{item.nickName}}</td>
                        <td width="220px">{{item.createDateStr}}</td>
                        <td width="180px" v-if="pageType=='8'">{{item.pCount}}</td>
                        <td width="120" v-if="item.state==0">
                            <a class="editiInfo" v-on:click="updateSortState(index,1)" v-if="pageType=='8'">就餐</a>
                            <a class="editiInfo" v-on:click="updateSortState(index,1)" v-else>接待</a>
                            <a class="editiInfo redFont" v-on:click="updateSortState(index,-1)">取消</a>
                        </td>
                        <td width="180px" v-else>{{item.stateRemark}}</td>
                    </tr>
                    <tr>
                        <td colspan="8" v-if="recordCount<=0">暂无数据</td>
                    </tr>
            </table>
            <div id="pages" style="text-align: center;margin-top: 0.5rem;" v-show="recordCount>searchData.pageSize"></div>
        </div>
        <!--#endregion-->

    </div>
</div>


<script>
    var element,form,layid,laydate;

    var sortQueues = new Vue({
        el: "#sortQueues",
        data: {
            appId: @aid,
            storeId: @storeId,
            pageType: @pageType,
            isFrame: @(isFrame ? "true" : "false"),

            isloading: false,//是否正在加载
            sortQueueSwitch : @(Model.sortQueueSwitch ? "true" : "false"),
            sortQueues: [],
            recordCount: 0,
            curPage : 'queueing',

            time:'',
            searchData :
            {
                appId: @aid,
                storeId: @storeId,
                state: 0,

                startTime: '',
                endTime: '',
                telephone:'',
                sortNo:null,
                pageIndex:1,
                pageSize:10,
            }
        },
        methods: {
            //初始化layui控件
            InitLayer: function () {
                layui.use(['element','form','laydate'], function () {
                    element = layui.element;
                    //获取hash来切换选项卡，假设当前地址的hash为lay-id对应的值
                    sortQueues.curPage = location.hash.replace(/^#tab_page=/, '');
                    //找不到路径则默认打开的标签页
                    if(sortQueues.curPage == undefined || sortQueues.curPage == '' || $("#" + sortQueues.curPage).val() == undefined)
                    {
                        sortQueues.curPage = 'queueing';
                        location.hash = 'tab_page='+ sortQueues.curPage;
                    }
                    element.tabChange('tab_page', sortQueues.curPage);

                    //监听Tab切换，以改变地址hash值
                    element.on('tab(tab_page)', function(){
                        sortQueues.curPage = this.getAttribute('lay-id');
                        location.hash = 'tab_page='+ sortQueues.curPage;

                        //切换标签页更改查询条件中的状态
                        if(sortQueues.curPage == 'queueing')
                        {
                            sortQueues.searchData.state = 0;
                        }
                        else
                        {
                            sortQueues.searchData.state = 1;
                        }
                        sortQueues.searchData.pageIndex = 1;
                        sortQueues.getSortQueues();
                    });

                    //开关按钮
                    form = layui.form;
                    form.on('switch', function (data) {
                        sortQueues.sortQueueSwitch = data.elem.checked;
                        sortQueues.switchSetting();
                    });

                    //时间选择器
                    laydate = layui.laydate;
                    laydate.render({
                        elem: '#sortTime', //指定元素
                        theme: 'grid',
                        range: '~',
                        value: '',
                        done: function (value, date, endDate) {
                            $("#sortTime").val(value);
                            if(value != '' && value != 'undefined' )
                            {
                                sortQueues.searchData.startTime = date.year + "-" + date.month + "-" + date.date;
                                sortQueues.searchData.endTime = endDate.year + "-" + endDate.month + "-" + endDate.date;
                            }
                            else
                            {
                                sortQueues.searchData.startTime = "";
                                sortQueues.searchData.endTime = "";
                            }
                        }
                    });
                });
            },

            //根据当前页面加载形式返回不同的layer对象
            curLayer :function (){
                if(this.isFrame)//若是iframe加载,那么用上层主窗体的layer来进行弹框或提示
                {
                    return window.parent.layer;
                }
                else
                {
                    return layer;
                }
            },

            //获取队列数据
            getSortQueues: function () {
                var that=this;
                if (that.isloading) {
                    that.curLayer().msg("正在加载");
                    return;
                }
                that.isloading = true;
                var loadindex = that.curLayer().load(1);
                $.post("/common/GetSortQueues", that.searchData, function (data) {
                    sortQueues.curLayer().close(loadindex);
                    sortQueues.isloading = false;
                    if (!data.isok) {
                        sortQueues.curLayer().msg(data.Msg);
                        return;
                    } else {
                        sortQueues.recordCount = data.dataObj.recordCount;
                        sortQueues.sortQueues = data.dataObj.sortQueues;

                        sortQueues.resetPage();
                    }
                });
            },

            //分页器
            resetPage: function () {
                layui.use('laypage', function () {
                    var laypage = layui.laypage;
                    laypage.render({
                        elem: 'pages'
                        , count: sortQueues.recordCount //数据总数，从服务端得到
                        , curr: sortQueues.searchData.pageIndex //当前页
                        , limit: sortQueues.searchData.pageSize
                        , jump: function (obj, first) {
                            sortQueues.searchData.pageIndex = obj.curr;
                            //首次执行
                            if (!first) {
                                sortQueues.searchData.pageIndex = obj.curr;
                                sortQueues.getSortQueues();
                            }
                        }
                        , theme: '#1E9FFF'
                        , layout: ['prev', 'page', 'next', 'skip']
                    });
                })
            },

            //开关
            switchSetting: function()
            {
                var layindex = sortQueues.curLayer().load(1);
                $.post("/common/ModifySortQueueSwitch",
                    {
                        appId:sortQueues.appId,
                        storeId:sortQueues.storeId,
                        sortQueueSwitch:sortQueues.sortQueueSwitch
                    }, function (data) {
                        sortQueues.curLayer().close(layindex);
                        sortQueues.curLayer().msg(data.Msg);
                });
            },

            //重置队列
            resetSortQueue :function()
            {
                sortQueues.curLayer().confirm('确定重置队列吗？', {
                    btn: ['确定','取消'] //按钮
                }, function(){
                    var layindex = sortQueues.curLayer().load(1);

                    $.post("/common/ResetSortNo",
                    {
                        appId:sortQueues.appId,
                        storeId:sortQueues.storeId,
                    }, function (data) {
                        sortQueues.curLayer().close(layindex);
                        sortQueues.curLayer().msg(data.Msg);
                    });
                }, function(){

                });
            },

            //修改队列状态
            updateSortState :function(index,state)
            {
                var handleRemark = "";
                if(state == 1)
                {
                    switch(sortQueues.pageType)
                    {
                        case 8:
                            handleRemark = "确定客户即将就餐吗?";
                            break;
                        case 22:
                            handleRemark = "确定即将接待客户吗?";
                            break;
                    }
                }
                if(state == -1)
                {
                    handleRemark = "确定取消该排队记录吗?";
                }

                sortQueues.curLayer().confirm(handleRemark, {
                    btn: ['确定','取消'] //按钮
                }, function(){
                    var layindex = sortQueues.curLayer().load(1);
                    $.post("/common/UpdateSortQueuesState",
                        {
                            appId:sortQueues.appId,
                            storeId:sortQueues.storeId,
                            sortId: sortQueues.sortQueues[index].id,
                            state: state
                        }, function (data) {
                            sortQueues.curLayer().close(layindex);
                            sortQueues.curLayer().msg(data.Msg);

                            sortQueues.getSortQueues();
                        });
                }, function(){

                });
            },
        },
        mounted: function () {
            this.InitLayer();
            this.getSortQueues();
        }

    });

</script>
