@using Entity.MiniApp.User;
@{
    Layout = "~/Views/Shared/_MiniappLayout.cshtml";
    ViewBag.Title = "门店信息";

    //门店照片
    List<C_Attachment> storeImgs = C_AttachmentBLL.SingleModel.GetListByCache(Model.Id, (int)AttachmentItemType.小程序餐饮门店图片);
    //门店Logo
    List<C_Attachment> storeLogo = C_AttachmentBLL.SingleModel.GetListByCache(Model.Id, (int)AttachmentItemType.小程序餐饮店铺Logo);

    //当前用户有店主权限
    bool havMasterStoreRole = ViewBag.havMasterStoreRole;
}
@model Food

@*<script type="text/javascript" src="@(WebSiteConfig.cdnurl)content/aliosslib/lib/plupload-2.1.2/js/plupload.full.min.js"></script>*@
<script src="~/Content/aliosslib/lib/plupload-2.1.2/js/plupload.full.min.js"></script>
<link href="@(WebSiteConfig.cdnurl)content/assets/global/plugins/bootstrap-colorpicker/bootstrap-clockpicker.min.css" rel="stylesheet" />

<style>
    /*默认滚动条样式*/
    .layui-laydate-content ::-webkit-scrollbar { width: 8px; height: 8px; }
    .layui-laydate-content ::-webkit-scrollbar-track { border: 1px #d3d3d3 solid; box-shadow: 0px 0px 3px #dfdfdf inset; border-radius: 10px; background: #eee; }
    .layui-laydate-content ::-webkit-scrollbar-thumb { border: 1px #808080 solid; border-radius: 10px; background: #999; }
    .layui-laydate-content ::-webkit-scrollbar-thumb:hover { background: #7d7d7d; }

    .row { width: 869px; }
    .table td.title { text-align: right; width: 20%; }
    .storename { width: 200px; }
    .layui-form-switch { margin-top: 0px; height: 24px; width: 53px; }
    .layui-form-onswitch { border-color: #2196f3; background-color: #2196f3; }
    input[type=checkbox] { margin: 0px; }
    .business-hours label { margin-right: 10px; }
    .btn-primary, .btn-primary:active, .btn-primary:focus { background-color: #2196f3; border-color: #2196f3; }
    .btn-primary:hover, .btn-primary:active:hover { background-color: #337ab7; border-color: #337ab7; }
    /*图片上传组件样式*/
    .del-btn { position: absolute; top: -9px; right: -8px; color: #fff; background: rgba(0, 0, 0, 0.56); width: 18px; border-radius: 13px; text-align: center; line-height: 18px; }

    .i_Posters { height: 25%; margin-bottom: 2px; border-radius: 5px; }
    .i_Posters > div { display: inline-block;vertical-align:middle; margin-right:10px;box-shadow: 0 0 2px #ccc;}
    .DelPoster { position:absolute;right:5px;top:5px;}
    .DelPoster .glyphicon-remove { font-size: 14px; color: #ccc; padding: 5px; border: 1px solid #ccc; border-radius: 100%; }
    .plus-button {box-shadow:none!important; border: 2px dashed #aaa; color: #888; cursor: pointer; text-align: center; height: 120px; transition: all .2s cubic-bezier(.7,0,.3,1); width: 120px; }
    .plus-button .plus { font-size: 100px; line-height: 1; font-weight: 700;margin-top:-10px; }
    .plus-label { font-size: 14px; position: relative; text-align: center; top: -2px; }

    .width200 { width:200px; }
    .reminder {color: orange;}

    .content_qcode { height: 130px;width: 130px;padding: 30px;text-align: center;background-color: #888888;}
    .region-head { font-size: 17px; color: dodgerblue; border-left: 2px solid dodgerblue; padding-left: 10px; margin-left: 15px; margin-bottom: 30px;}
</style>

<input type="hidden" id="CName_Hidden" value="小程序" />
<input type="hidden" id="listenMap" value="" onchange="getMap();" />
<div id="app" v-cloak>
    <div class="row" v-show="@(havMasterStoreRole ? "true": "false") && storeModel.masterStoreId > 0">
        <h2 class="region-head">店铺管理</h2>
        <table class="table table-condensed cancel-table-td-border ">
            <tr>
                <td class="title">门店是否上架：</td>
                <td>
                    <div class="layui-form">
                        <input type="checkbox" name="storeState" lay-skin="switch" lay-filter="switchState" lay-text="上架|下架" v-model="storeModel.state">
                        <label class="forinputmassage reminder" for="DeliveryRange">&nbsp;&nbsp;&nbsp;*上架后顾客才能在该门店购物</label>

                    </div>
                </td>
            </tr>
            <tr>
                <td class="title">门店管理员账号：</td>
                <td>
                    <div class="content_qcode" v-if="scanCode">
                        <span style="color:white;">该二维码已经失效,请刷新页面</span>
                    </div>
                    <div style="width:130px;height:130px;background-color:#A0A0A0;" v-if="!scanCode">
                        <input id="sessid" value="@Session["qrcodekey"]" hidden />
                        <img src="/QrCode/GetQrCode?code=@Session["qrcodekey"]" alt="" style="width: 100%;height: 100%;" />
                    </div>
                    <label for="DeliveryRange" class="forinputmassage reminder">*使用需要绑定的管理员微信扫描二维码进行绑定</label>

                </td>
            </tr>
            <tr>
                <td class="title">店铺管理员微信昵称:</td>
                <td>
                    <input type="text" class="form-control storename" v-model="storeModel.masterNickName" readonly style="display:inline-block;" />
                    <input type="button" value="解除绑定" class="btn btn-primary width100" v-on:click="RemoveUserStoreManager()" style="margin-top:-5px;">
                </td>
            </tr>
        </table>
    </div>

    <div class="row">
        <h2 class="region-head">店铺信息</h2>
        <table class="table table-condensed cancel-table-td-border ">
            <tr>
                <td class="title">店铺名称<label class="color-red">*</label></td>
                <td><input type="text" class="form-control storename" v-model="storeModel.FoodsName" /></td>
            </tr>

            <tr>
                <td class="title" style="vertical-align: middle;"><p class="model_right_t_font">店铺Logo<label class="color-red">*</label></p></td>
                <td>
                    <div class="pimg">
                        <img style="height:120px;width:120px;" v-bind:src="storeModel.Logo" v-if="storeModel.Logo!=''&&storeModel.Logo!=null" v-on:click="UploadImg(0)" />
                        <div class="plus-button" v-on:click="UploadImg(0)" v-else>
                            <div class="s-image-uploader-wrapper">
                                <div>
                                    <div class="plus">+</div>
                                    <div class="plus-label">上传图片</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <b class="reminder">建议尺寸：300*300px</b>
                </td>
            </tr>
            <tr>
                <td class="centertext title"><p class="model_right_t_font">门店照片</p></td>
                <td>
                    <div class="pslideimgs">
                        <div class="i_Posters rel">
                            <div style="position:relative;" v-for="(item,index) in storeImgs">
                                <img v-bind:src="item.filepath" style="display:block;height:120px;width:120px;" />
                                <span v-on:click="clearImg(1,index)" class="DelPoster"><i class="glyphicon glyphicon-remove"></i></span>
                            </div>
                            <div class="plus-button" v-on:click="UploadImg(1)">
                                <div class="s-image-uploader-wrapper">
                                    <div>
                                        <div class="plus">+</div>
                                        <div class="plus-label">上传图片</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <label class="reminder">* 最多可上传6张门店照片，建议照片尺寸为750*500px</label>
                </td>
            </tr>
            <tr>
                <td class="title">详细地址<label class="color-red">*</label></td>
                <td class="form-inline">
                    <label id="Address">{{storeModel.Address}}</label>
                    <a id="btnMap"><label id="checkMapStr" v-on:click="GetMap()">{{storeModel.Address.length>0?"重新选择" : "从地图选择"}}</label></a>
                </td>
            </tr>
            <tr>
                <td class="title">营业日期<label class="color-red">*</label></td>
                <td class="business-hours">
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Monday" />周一</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Tuesday" />周二</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Wensday" />周三</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Thursday" />周四</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Friday" />周五</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Saturday" />周六</label>
                    <label><input class="weekcheckbox" name="weekcheckbox" type="checkbox" v-model="switchModel.Sunday" />周日</label>
                </td>
            </tr>
            <tr>
                <td class="title">营业时间<label style="color: red">*</label></td>
                <td>
                    <div class="OpenTimeDiv">
                        <input id="StartShopTime" type="text" readonly="readonly" class="form-control width200 StartShopTime" v-model="storeModel.getOpenTimeList[0].StartTime" style="display:inline-block;"/><span>-</span>
                        <input id="EndShopTime" type="text" readonly="readonly" class="form-control width200 EndShopTime" v-model="storeModel.getOpenTimeList[0].EndTime" style="display:inline-block;"/>
                        @*<input type="text" readonly="readonly" class="form-control storename" id="ShopTime" value="" />*@
                    </div>
                    <label class="reminder" for="DeliveryRange" >* 营业时间外,外卖及点餐小程序均会显示商家休息中,顾客将无法下单</label>
                </td>
            </tr>
            <tr>
                <td class="title">客服电话<label class="color-red">*</label></td>
                <td><input type="text" class="form-control storename" v-model="storeModel.TelePhone" /></td>
            </tr>

            <tr>
                <td class="title">店铺公告</td>
                <td><textarea class="form-control width400" rows="8" id="Notice" v-model="storeModel.Notice"></textarea></td>
            </tr>
            <tr>
                <td style="text-align: right;" width="20%">自动接单<label style="color: red">*</label></td>
                <td>
                    <div class="layui-form">
                        @*<label class="layui-form-label">自动接单<label style="color: red">*</label></label>*@
                        <input type="checkbox" name="openTakeOut" lay-skin="switch" lay-text="开|关" v-bind:checked="storeModel.AutoAcceptOrder==1">
                        <label class="reminder forinputmassage" for="AutoAcceptOrderRadio" >&nbsp;&nbsp;&nbsp;* 开启后,用户在小程序端下单后,将自动打印订单,商家无需手动接单</label>
                    </div>
                </td>
            </tr>
            <tr><td colspan="2">&nbsp;</td></tr>
            <tr><td colspan="2">&nbsp;</td></tr>
            <tr>
                <td colspan="2" style="text-align:center">
                    <input type="button" class="btn btn-primary width100" v-on:click="SaveInfo()" value="保存" />
                </td>
            </tr>
        </table>
    </div>
    <!-- #region 选择地图位置弹窗 -->
    <div class="modal fade" id="ChooseLocationModal" tabindex="-1" role="dialog" aria-labelledby="ChooseLocationModal_label">
        <div class="modal-dialog modal-lg" role="document" style="width:1000px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="ChooseLocationModal_label">选择地图位置</h4>
                </div>
                <div class="modal-body">
                    <iframe name="mapframe" src="/content/plugin/chooselocation/index.html" frameborder="0" width="100%" height="610"></iframe>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-primary" v-on:click="ChooseLocation()">确定</button>
                </div>
            </div>
        </div>
    </div>
    <div style="display: none;">
        <button id="browse_file_img">上传图片</button>
        <button id="start_upload_img" v-on:click="uploadFile('img')">开始上传</button>
    </div>
</div>


<script>
    var mask;
    var MAX_IMG_SIZE=1,MAX_AUDIO_SIZE=10,MAX_VIDEO_SIZE=20;
    var uploader= {
        img: {
            filePath: ''
        },
        video: {
            filePath: ''
        },
        audio: {
            filePath: ''
        }
    };

    var imgModel =
    {
        id:0,
        filepath:'',
    };


    var form, laydate, element;
    var app = new Vue({
        el: "#app",
        data: {
            storeModel:@Html.Raw(JsonConvert.SerializeObject(Model)),
            storeImgs:@(Html.Raw(JsonConvert.SerializeObject(storeImgs))),
            storeLogo:@(Html.Raw(JsonConvert.SerializeObject(storeLogo))),
            switchModel:{
                Monday: @(Model.OpenDateStr.Contains("周一") ? "true" : "false"),
                Tuesday:@(Model.OpenDateStr.Contains("周二") ? "true" : "false"),
                Wensday:@(Model.OpenDateStr.Contains("周三") ? "true" : "false"),
                Thursday:@(Model.OpenDateStr.Contains("周四") ? "true" : "false"),
                Friday:@(Model.OpenDateStr.Contains("周五") ? "true" : "false"),
                Saturday:@(Model.OpenDateStr.Contains("周六") ? "true" : "false"),
                Sunday:@(Model.OpenDateStr.Contains("周日") ? "true" : "false"),
            },

            scanCode: false, //是否已经扫过码
        },
        mounted: function ()
        {
            this.initUploader('img');
        },
        methods: {
            //上传图片
            UploadImg:function(type){
                app.uploadImgType=type;
                $('#browse_file_img').click();
            },

            InitLayer: function () {
                layui.use(['form', 'laydate', 'element'], function () {
                    element = layui.element;
                    //开关按钮
                    form = layui.form;
                    form.on('switch', function (data) {
                        if(data.elem.name == 'storeState')
                        {
                            app.storeModel.state = data.elem.checked ? 1 : 0;
                            app.cutStoreState();
                        }
                        else if(data.elem.name == 'openTakeOut')
                        {
                            app.storeModel.AutoAcceptOrder = data.elem.checked ? 1 : 0;
                        }
                    });

                    //开始时间
                    laydate = layui.laydate;
                    laydate.render({
                        elem: '#StartShopTime', //指定元素
                        type: 'time',
                        theme: 'grid',
                        format:'HH:mm',
                        value:  app.storeModel.getOpenTimeList[0].StartTime,
                        range: false,
                        done: function (value, date, endDate) {
                            $("#ShopTime").val(value);
                            app.storeModel.getOpenTimeList[0].StartTime = value;
                        }
                    });
                    //结束时间
                    laydate.render({
                        elem: '#EndShopTime', //指定元素
                        type: 'time',
                        theme: 'grid',
                        format:'HH:mm',
                        value:  app.storeModel.getOpenTimeList[0].EndTime,
                        range: false,
                        done: function (value, date, endDate) {
                            app.storeModel.getOpenTimeList[0].EndTime = value;
                        }
                    });
                });
            },

            //初始化上传控件
            initUploader: function (type) {
                var that = this;
                var options = {
                    browse_button: 'browse_file_' + type,
                    url: 'http://oss.aliyuncs.com',
                    flash_swf_url: '@(WebSiteConfig.cdnurl)content/aliosslib/lib/lib/plupload-2.1.2/js/Moxie.swf',
                    silverlight_xap_url: '@(WebSiteConfig.cdnurl)content/aliosslib/lib/lib/plupload-2.1.2/js/Moxie.xap',
                    filters: {

                    },
                    multi_selection: true

                };
                switch (type) {
                    case 'img':

                        options.filters = {

                            mime_types: [
                                {
                                    title: "图片文件",
                                    extensions: "jpg,jpeg,gif,png"
                                },
                            ],
                            //max_file_size: '5mb'
                        }
                        break;
                    case 'video':
                        options.filters = {

                            mime_types: [ //只允许上传图片和zip文件
                                {
                                    title: "视频文件",
                                    extensions: "mp4,m3u8",
                                },
                            ],
                            //max_file_size: '20mb'
                        }

                        break;
                    case 'audio':
                        options.filters = {

                            mime_types: [ //只允许上传图片和zip文件
                                {
                                    title: "音频文件",
                                    extensions: "mp3",
                                },
                            ],
                            //max_file_size: '10mb'
                        }
                        break;
                }

                //如果还有当前类型的上传组件实例的话则先把其销毁
                if (uploader[type].instance) {
                    console.log('destroy uploader :' + type);
                    uploader[type].instance.destroy();
                }

                //创建新的控件实例
                uploader[type].instance = new plupload.Uploader(options);
                uploader[type].instance.init();

                //添加路径
                uploader[type].instance.bind('FilesAdded', function (uploader, files) {
                    $('#start_upload_' + type).click();
                });

                //上传之前
                uploader[type].instance.bind('BeforeUpload', function (d, f) {


                    //取到文件后缀名

                    var fileName = f.name;
                    var ext = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);

                    //转成Mb
                    var fileSize = f.size / 1024 / 1024;
                    var flag = true;

                    switch (type) {
                        case 'img':
                            if (!['jpg', 'png', 'gif', 'jpeg'].contains(ext)) {
                                layer.msg('请上传正确的图片格式，后缀名可为：jpg,png,gif,jpeg');
                                flag = false;
                            }
                            if (fileSize > MAX_IMG_SIZE) {
                                layer.msg('文件最大支持 ' + MAX_IMG_SIZE + 'Mb');
                                flag = false;

                            }
                            break;
                        case 'audio':
                            if (!['mp3'].contains(ext)) {
                                layer.msg('请上传正确的音频格式文件，后缀名可为：mp3');
                                flag = false;

                            }
                            if (fileSize > MAX_AUDIO_SIZE) {
                                layer.msg('文件最大支持 ' + MAX_AUDIO_SIZE + 'Mb');
                                flag = false;

                            }
                            break;
                        case 'video':
                            if (!['mp4', 'm3u8'].contains(ext)) {
                                layer.msg('请上传正确的视频格式文件，后缀名可为：mp4,m3u8');
                                flag = false;

                            }
                            if (fileSize > MAX_VIDEO_SIZE) {
                                layer.msg('文件最大支持 ' + MAX_VIDEO_SIZE + 'Mb');
                                flag = false;
                            }
                            break;
                    }
                    //如果在上传中遇到文件类型和文件大小不正确的错误时重新初始上传组件
                    if (!flag) {
                        that.initUploader(type);
                    }

                    uploader.token.key += new Date().getTime() + '.' + ext;
                    f.name = uploader.token.key;
                    uploader[type].instance.setOption(uploader.token);
                });

                //上传过程中
                uploader[type].instance.bind('UploadProgress', function (uploader, file) {

                    mask=  layer.load(0, {content: file.percent + "%",shade: [0.8, '#393D49'],

                        success: function(layero){
                            layero.find('.layui-layer-content').css('color', 'white').css('font-size','2rem').css('background','none');
                        }
                    });
                });

                //单个文件上传完毕之后
                uploader[type].instance.bind('FileUploaded', function (d, file, responseObject) {
                    if (responseObject.status == 200) {
                        if(that.uploadImgType==0){
                            that.storeModel.Logo = uploader[type].filePath + file.name;
                        }
                        else
                        {
                            var newImgs = JSON.parse(JSON.stringify(imgModel));//新文件model
                            newImgs.filepath = uploader[type].filePath + file.name;

                            that.storeImgs.push(newImgs);
                        }
                    }
                }),

                //全部上传任务完成后
                uploader[type].instance.bind('UploadComplete', function (d, f, e) {
                    layer.close(mask);
                    var fileName; //文件名
                    var fileExt;  //文件格式

                    //轮播图
                    $(f).each(function(index,item)
                    {

                    });

                    //上传完成后重新初始上传组件
                    that.initUploader(type);
                });
            },

            //上传文件
            uploadFile:function (type) {
                //   var that = this;
                $.get('/upload/initupload', {
                    type: type
                }).then(function (data) {
                    var filePath = data.dir + data.key;
                    uploader[type].filePath = data.host + '/';

                    var multipartParams = {
                        //因为不知道生成随机文件名的规则，所以，存储原始文件名
                        'key': filePath,
                        'policy': data.policy,
                        'OSSAccessKeyId': data.accessid,
                        'success_action_status': '200',
                        'signature': data.signature
                    };
                    uploader.token = multipartParams;
                    uploader[type].instance.setOption({
                        'url': data.host,
                        'multipart_params': multipartParams
                    });
                    uploader[type].instance.start();
                }).fail(function (data) {
                });

            },
            //删除图片
            clearImg:function(type,index){
                var that = this;
                if(type == 1){
                    //表示轮播图
                    if(that.storeImgs.length>0){
                        that.storeImgs.splice(index,1);
                    }
                }else{
                    that.storeModel.Logo = '';
                }
            },


            GetMap: function () {
                $("#ChooseLocationModal").modal("show");
            },
            ChooseLocation: function () {
                var _location = mapframe.window.document.getElementById("poi_cur").value;
                var _addr_cur = mapframe.window.document.getElementById("addr_cur").value;
                var _zoom = mapframe.window.document.getElementById("zoomlevel").innerHTML;
                if (_location == "") {
                    layer.msg("您还未选择地理位置！");
                    return;
                }
                _location = _location.split(",");
                this.storeModel.Lng = parseFloat(_location[1]);
                this.storeModel.Lat = parseFloat(_location[0]);
                this.storeModel.Address = _addr_cur;
                $("#checkMapStr").text("重新选择");
                $("#ChooseLocationModal").modal("hide");
            },

            //保存店铺信息
            SaveInfo: function () {
                if(!this.ValidData())return;

                $.post("/foods/SaveFoodInfo", {appId : app.storeModel.appId, storeModel:app.storeModel,storeImgs:app.storeImgs }, function (data) {
                    layer.msg(data.Msg);
                },"json")
            },

            //验证数据
            ValidData: function () {
                var result = false;
                if (app.storeModel.Logo.length <= 0) {
                    layer.msg("请选择店铺logo");
                    return result;
                }
                if (app.storeImgs.length > 6) {
                    layer.msg("门店照片不能超过6张");
                    return result;
                }
                if ($.trim(app.storeModel.FoodsName).length <= 0) {
                    layer.msg("请输入店铺名称");
                    return result;
                }

                //营业日期
                var openTimeStr = '';
                if(app.switchModel.Monday) openTimeStr += "周一";
                if(app.switchModel.Tuesday) openTimeStr += "周二";
                if(app.switchModel.Wensday) openTimeStr += "周三";
                if(app.switchModel.Thursday) openTimeStr += "周四";
                if(app.switchModel.Friday) openTimeStr += "周五";
                if(app.switchModel.Saturday) openTimeStr += "周六";
                if(app.switchModel.Sunday) openTimeStr += "周日";
                app.storeModel.OpenDateStr = openTimeStr;


                app.storeModel.getOpenTimeList[0].StartTime = $("#StartShopTime").val();
                app.storeModel.getOpenTimeList[0].EndTime = $("#EndShopTime").val();

                //营业时间
                app.storeModel.OpenTimeJson = JSON.stringify(app.storeModel.getOpenTimeList);

                result = true;
                return result;
            },

            //绑定管理员
            wxBind() {
                var key = $('#sessid').val();
                $.ajax({
                    type: "POST",
                    url: "/foods/StoreManagerBindWx",
                    xhrFields: {
                        withCredentials: true
                    },
                    data: { wxkey: key },
                    success: function (returnData) {
                        if (returnData.success) {
                            layer.msg(returnData.msg);
                            clearInterval(wxLoginInterval);
                            app.storeModel.masterNickName=returnData.ShopManagerName;

                            app.scanCode = true;
                        }

                    }
                });
            },

            //解绑管理员
            RemoveUserStoreManager:function(){
                if(app.storeModel.masterNickName.length == 0)
                {
                    layer.msg("该门店尚未绑定管理员");
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "/foods/RemoveUserStoreManagerRole",
                    data: { appId: app.storeModel.appId,storeId:app.storeModel.Id },
                    success: function (returnData) {
                        if (returnData.success) {
                            app.storeModel.masterNickName = '';
                            layer.msg(returnData.msg);
                        }

                    }
                });
            },


        //店铺上下架
        cutStoreState: function () {
            $.post("/foods/SaveFoodInfo", {appId : app.storeModel.appId, storeModel:app.storeModel ,colName: 'state'}, function (data) {
                if(data.isok)
                {
                    if(app.storeModel.state == 1)    
                    {
                        layer.msg("门店已上架");
                    }
                    else
                    {
                        layer.msg("门店已下架");
                    }
                }
                else
                {
                    layer.msg(data.Msg);
                }
                },"json")
            },
        },
        created: function(){
            //定时确认是否已经扫码登录
            if(this.storeModel.masterNickName=="" && this.storeModel.masterStoreId>0 )
                wxLoginInterval = setInterval(this.wxBind, 1000);

            this.InitLayer();
        }
    })
</script>





