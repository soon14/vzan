@using Entity.MiniApp.Tools
@using User.MiniApp.comment
@model Groups
@{
    Layout = "~/Views/Shared/_MiniappLayout.cshtml";
    ViewBag.Title = Model.Id > 0 ? "拼团编辑" : "发布拼团";
    List<EntSpecification> specificationlist = new List<EntSpecification>();
}
<style>
    .picklabels {
        white-space: normal;
        word-break: break-all;
    }

        .picklabels span {
            cursor: pointer;
            padding: 5px 10px;
            border: 1px solid #5B94FD;
            color: #5B94FD;
            border-radius: 5px;
            text-align: center;
            display: inline-block;
            margin: 10px 10px 0 0;
        }

            .picklabels span.sel {
                background-color: #5B94FD;
                color: #fff;
            }

    .btn-primary {
        background-color: rgba(16, 142, 233, 1) !important;
        color: #fff;
        border-color: rgba(16, 142, 233, 1) !important;
    }

    .alert-info {
        display: inline-block;
        min-width: 100px;
        margin-right: 10px;
        padding: 5px;
        margin-bottom: 10px;
    }

    .gg_line {
        padding: 5px;
    }

        .gg_line .goodlabels {
            padding: 10px 0;
        }

    .gg_title {
        background-color: #E5E5E5;
        padding: 10px;
        text-align:center;
    }

    .ggtable {
        border-top: 1px solid #ccc;
        border-left: 1px solid #ccc;
    }

        .ggtable tr td {
            border-right: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
            border-collapse: collapse;
        text-align:center;
        }

    .w50 {
        width: 50px;
    }

    .i_Posters {
        height: 25%;
        margin-bottom: 2px;
        border-radius: 5px;
    }

        .i_Posters > div {
            display: inline-block;
            vertical-align: middle;
            margin-right: 10px;
            box-shadow: 0 0 2px #ccc;
        }

    .DelPoster {
        position: absolute;
        right: 5px;
        top: 5px;
    }

        .DelPoster .glyphicon-remove {
            font-size: 14px;
            color: #ccc;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 100%;
        }

    .plus-button {
        box-shadow: none !important;
        border: 2px dashed #aaa;
        color: #888;
        cursor: pointer;
        text-align: center;
        height: 120px;
        transition: all .2s cubic-bezier(.7,0,.3,1);
        width: 120px;
    }

        .plus-button .plus {
            font-size: 100px;
            line-height: 1;
            font-weight: 700;
            margin-top: -10px;
        }

    .plus-label {
        font-size: 14px;
        position: relative;
        text-align: center;
        top: -2px;
    }
</style>
<script src="@(WebSiteConfig.cdnurl)content/active/date/js/mobiscroll_002.js" type="text/javascript"></script>
<script src="@(WebSiteConfig.cdnurl)content/active/date/js/mobiscroll_004.js" type="text/javascript"></script>
<link href="@(WebSiteConfig.cdnurl)content/active/date/css/mobiscroll_002.css" rel="stylesheet" type="text/css">
<link href="@(WebSiteConfig.cdnurl)content/active/date/css/mobiscroll.css" rel="stylesheet" type="text/css">
<script src="@(WebSiteConfig.cdnurl)content/active/date/js/mobiscroll.js" type="text/javascript"></script>
<script src="@(WebSiteConfig.cdnurl)content/active/date/js/mobiscroll_003.js" type="text/javascript"></script>
<script src="@(WebSiteConfig.cdnurl)content/active/date/js/mobiscroll_005.js" type="text/javascript"></script>
<link href="@(WebSiteConfig.cdnurl)content/active/date/css/mobiscroll_003.css" rel="stylesheet" type="text/css">

<div id="app" v-cloak>
    <table class="table table-condensed table-hover cancel-table-td-border ">
        <tr>
            <td style="text-align: right;">产品图片：<label style="color: red">*</label><d>
            <td class="CarouselList">
                @Html.FileUploadFor("LogUrl", maxFiles: 1, controllerWidth: 120, initImageList: (new List<object>() { new { id = 0, url = Model.ImgUrl } }), removeCallback: "removeFun", awm: 1)
                <label class="forinputmassage">点击灰色区域选择上传图片，最好尺寸（750*750px）</label>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;" width="30%">拼团名称：<label style="color: red">*</label></td>
            <td>
                <input id="GroupName" class="form-control width400" v-model="groupModel.GroupName" name="GroupName" palcehlder="1-40字" maxlength="40" />
            </td>
        </tr>
        <tr>
            <td align="right" valign="top">产品规格：</td>
            <td valign="top">
                @*<div><input type="button" class="btn btn-primary groupelement" value="添加规格项目" v-on:click="addSpecificationItem" /></div>*@
                <div style="width:70%;">
                    <div v-if="groupModel.Id==0">
                        <input palcehlder="输入规格" class="form-control" maxlength="10" style="width:100px;display:inline-block;" id="spetest" v-bind:disabled="groupModel.Id>0"/>
                        <input type="button" value="添加规格" class="btn btn-primary groupelement" v-on:click="addSpecTest" v-bind:disabled="groupModel.Id>0"/>
                    </div>
                    <div v-for="(item,index) in pickspecification" class="gg_line">
                        <div class="d-flex d-flex-center gg_title">
                            <div class="flex">
                                {{item.name}}
                            </div>
                            <div  v-if="groupModel.Id==0">
                                <input palcehlder="输入规格值" class="form-control" maxlength="10" style="width:100px;display:inline-block;" v-bind:id="'labeltest'+index"/>
                                <a class="btn-link" v-on:click="addLabelTest(item.name,index)">添加</a>
                                <a class="btn-link" v-on:click="pickspecification.splice(index,1)">删除</a>
                            </div>
                        </div>
                        <div class="goodlabels">
                            <div class="alert alert-info" v-for="(value_item,value_index) in item.items">
                                <button type="button" class="close" v-on:click="item.items.splice(value_index,1)">×</button>
                                {{value_item.name}}
                            </div>
                        </div>
                    </div>

                    <div class="" v-if="pickspecification.length>0">
                        <table width="100%" class="ggtable">
                            <tr class="gg_title">
                                <td v-for="(item,index) in pickspecification" v-if="item.items.length>0">
                                    {{item.name}}
                                </td>
                                <td>原价</td>
                                <td>单买价</td>
                                <td>团购价</td>
                                <td>库存</td>
                            </tr>
                            <template v-if="pickspecification.length==1">
                                <tr v-for="(item,index) in pickspecification[0].items">
                                    <td>
                                        {{item.name}}
                                    </td>
                                    <!--原价-->
                                    <td width="110" align="center"><input type="text" class="original-price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--单买价/普通商品价格-->
                                    <td width="110" align="center"><input type="text" class="price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--团购价-->
                                    <td width="110" align="center"><input type="text" class="group-price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--库存-->
                                    <td width="110" align="center"><input type="text" class="stock form-control input-mini" v-on:input="changeStock"/> </td>
                                </tr>
                            </template>
                            <template v-else>
                                <tr v-for="(item,index) in buildSpecificationTable()">
                                    <template v-for="(col_item,col_index) in item">
                                        <td valign="middle" align="center" v-bind:rowspan="GetRowSpan(col_index)" v-if="GetRowSpan(col_index)>1&&index%GetRowSpan(col_index)==0">
                                            {{col_item.name}}
                                        </td>
                                        <td v-else-if="GetRowSpan(col_index)==1">
                                            {{col_item.name}}
                                        </td>
                                    </template>

                                    <!--原价-->
                                    <td width="110" align="center"><input type="text" class="original-price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--单买价/普通商品价格-->
                                    <td width="110" align="center"><input type="text" class="price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--团购价-->
                                    <td width="110" align="center"><input type="text" class="group-price form-control input-mini" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--库存-->
                                    <td width="110" align="center"><input type="text" class="stock form-control input-mini " v-on:input="changeStock"/> </td>
                                </tr>
                            </template>
                        </table>
                        <div v-if="pickspecification.length>0" class="gg_title" style="padding:0;">
                            <table align="right">

                                <tr>
                                    <td align="right">批量设置：</td>
                                    <!--原价-->
                                    <td width="110" align="center"><input type="number" min="0" class="form-control input-mini" id="original-price" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--单买价/普通商品价格-->
                                    <td width="110" align="center"><input type="number" min="0" class="form-control input-mini " id="price" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--团购价-->
                                    <td width="110" align="center"><input type="number" min="0" class="form-control input-mini " id="group-price" v-on:input="changePrice" v-bind:disabled="groupModel.Id>0"/> </td>
                                    <!--库存-->
                                    <td width="110" align="center"><input type="number" min="0" class="form-control input-mini" id="stock" v-on:input="changeStock" /> </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <!--原价-->
                                    <td align="center"><input type="button" class="btn btn-primary" value="确定" v-on:click="setAllValue('original-price')" v-bind:disabled="groupModel.Id>0"/></td>
                                    <!--单买价/普通商品价格-->
                                    <td align="center"><input type="button" class="btn btn-primary" value="确定" v-on:click="setAllValue('price')" v-bind:disabled="groupModel.Id>0"/></td>
                                    <!--团购价-->
                                    <td align="center"><input type="button" class="btn btn-primary " value="确定" v-on:click="setAllValue('group-price')" v-bind:disabled="groupModel.Id>0"/></td>
                                    <!--库存-->
                                    <td align="center"><input type="button" class="btn btn-primary" value="确定" v-on:click="setAllValue('stock')" /></td>
                                </tr>
                            </table>
                            <div style="clear:both;"></div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">拼团价：<label style="color: red">*</label></td>
            <td>
                <input id="DiscountPriceStr" class="form-control width400" v-model="groupModel.DiscountPriceStr" name="DiscountPriceStr" palcehlder="拼团价" maxlength="10" v-bind:disabled="groupModel.Id>0" v-on:input="changePrice"/>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">单买价：<label style="color: red">*</label></td>
            <td>
                <input id="UnitPriceStr" class="form-control width400" v-model="groupModel.UnitPriceStr" name="UnitPriceStr" palcehlder="单买价" maxlength="10" v-bind:disabled="groupModel.Id>0" v-on:input="changePrice"/>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">原价：<label style="color: red">*</label></td>
            <td>
                <input id="OriginalPriceStr" class="form-control width400" v-model="groupModel.OriginalPriceStr" name="OriginalPriceStr" palcehlder="原价" maxlength="10" v-on:input="changePrice"/>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">团长减价：<label style="color: red">*</label></td>
            <td>
                <input id="HeadDeductStr" class="form-control width400" v-model="groupModel.HeadDeductStr" name="HeadDeductStr" palcehlder="团长减价" maxlength="10" v-bind:disabled="groupModel.Id>0" v-on:input="changePrice"/>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">开始时间：<label style="color: red">*</label></td>
            <td>
                @Html.TextBoxFor(m => m.ShowTimeS, new { @class = "form-control width400", placeholder = "2016-11-24 12:30", maxlength = "20", readOnly = "readOnly", style = "background-color:white;" })
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">结束时间：<label style="color: red">*</label></td>
            <td>
                @Html.TextBoxFor(m => m.ShowTime, new { @class = "form-control width400", placeholder = "2016-11-24 12:30", maxlength = "20", readOnly = "readOnly", style = "background-color:white;" })
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">拼团描述：</td>
            <td>
                <textarea id="editor" style="width:610px; height: 240px;" name="editor"></textarea>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">生成数量：<label style="color: red">*</label></td>
            <td>
                <input id="CreateNum" class="form-control width400" v-model="groupModel.CreateNum" name="CreateNum" palcehlder="生成数量" maxlength="3" onkeyup="value = value.replace(/[^\d]/g, '')" onafterpaste="this.value=this.value.replace(/D/g, '')" />
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">成团人数：<label style="color: red">*</label></td>
            <td>
                <input id="GroupSize" class="form-control width400" v-model="groupModel.GroupSize" name="GroupSize" palcehlder="成团人数" maxlength="2" onkeyup="value = value.replace(/[^\d]/g, '')" onafterpaste="this.value=this.value.replace(/D/g, '')" />
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">每用户限购：<label style="color: red">*</label></td>
            <td>
                <select class="form-control width400" id="LimitNum" v-model="groupModel.LimitNum">
                    <option value="0" v-bind:selected="groupModel.LimitNum==0">不限</option>
                    @for (var i = 1; i <= 20; i++)
                    {
                    <option value="@i" v-bind:selected="groupModel.LimitNum==@i">@i</option>
                }
                </select>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">轮播图片：</td>
            <td class="CarouselList">
                @Html.FileUploadFor("CarouselList", maxFiles: 9, controllerWidth: 360, initImageList: (List<object>)ViewBag.CarouselList, removeCallback: "removeFun", awm: 1)
                <label class="forinputmassage">点击灰色区域选择上传图片，最好尺寸（750*750px）</label>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">立即开始：<label style="color: red">*</label></td>
            <td>
                <input type="checkbox" class="form-control" style="width:20px !important;" checked id="IsConcern" name="IsConcern" />
            </td>
        </tr>
        <tr>
            <td colspan="2" style="text-align: center">
                <input type="button" class="btn btn-primary width100" v-on:click="save" value="保存" />
                <input type="button" class="btn btn-default width100" onclick="self.location = document.referrer;" value="返回" />
            </td>
        </tr>
    </table>
</div>
<div class="modal bs-example-modal-sm" id="loadModal" tabindex="-1" role="dialog" aria-labelledby="loadModal" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <span>提示</span>
            </div>
            <div class="modal-body text-center">
                正在保存 . . .
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-primary" id="loadModalComfirm">确定</button>*@
            </div>
        </div>
    </div>
</div>
<script src="/js/ueditor1_4_3_3-utf8-net/utf8-net/ueditor.config.js"></script>
<script src="/js/ueditor1_4_3_3-utf8-net/utf8-net/ueditor.all.min.js"></script>
<script type="text/javascript" src="@(WebSiteConfig.cdnurl)js/Base64.js"></script>
<script type="text/html" id="js_article_content">
    @Html.Raw(Model.Description)
</script>
<script>
    $(function(){
        // #region 日期选择控件
        var currYear = (new Date()).getFullYear();
        var opt = {};
        opt.date = { preset: 'date' };
        opt.datetime = { preset: 'datetime' };
        opt.time = { preset: 'time' };
        opt.default = {
            theme: 'android-ics light',
            display: 'modal',
            mode: 'scroller',
            dateFormat: 'yyyy-mm-dd',
            minDate: new Date(),
            //maxDate: new Date(new Date().setMonth(new Date().getMonth() + 6)),
            lang: 'zh',
            showNow: true,
            nowText: "今天",
            startYear: currYear - 10,
            endYear: currYear + 10
        };
        opt.default_time = {
            theme: 'android-ics light',
            display: 'modal',
            mode: 'scroller',
            timeFormat: "HH:ii",
            lang: 'zh',
        };
        var optDateTime = $.extend(opt['datetime'], opt['default']);
        var optTime = $.extend(opt['time'], opt['default_time']);
        var optDate = $.extend(opt['date'], opt['default']);
        $("#ShowTimeS").mobiscrolls(optDateTime).datetime(optDateTime);
        $("#ShowTime").mobiscrolls(optDateTime).datetime(optDateTime);
        $("#ShowUseTimeEnd").mobiscrolls(optDateTime).datetime(optDateTime);
        // #endregion

        //#region 在线富文本编辑器
        //编辑器
        comeditor = UE.getEditor('editor',{
            toolbars: [
                ['source','|' ,'undo', 'redo' ,'|','bold',' italic',' underline','strikethrough','|','forecolor','backcolor', '|','justifyleft','justifycenter','justifyright','justifyjustify'],
                ['simpleupload','insertimage','paragraph','fontsize',' |','insertorderedlist','insertunorderedlist','horizontal','autotypeset', 'pasteplain']
            ],
            imageUrl: "/Upload/Image?cityid=" + @ViewBag.appId,
            autoHeight: true
        });
        comeditor.ready(function () {
            if ($("#js_article_content").html() != "") {
                comeditor.setContent($("#js_article_content").html());
            }
        });
        //#endregion
    })
    //var _reg = /^\d+\.?(\d{1,2})?$/;
    var _reg = /^[0-9]{1,10}(\.\d{0,2})?$/;
    var specificationlist= @(Html.Raw(JsonConvert.SerializeObject(specificationlist)));
    //规格项
    var specificationItem={
        id:0,
        name:"",
        parentid:0,
        items:[],//规格值列表
    };

    var app = new Vue({
        el: "#app",
        data: {
            groupModel:@Html.Raw(JsonConvert.SerializeObject(Model)),

            pickspecification:[],//选择的规格
            current_pickspecification_index: -1,//当前操作的规格索引
            current_pickspecification_id:-1,
            current_specificationlist:[],//当前显示的规格值列表
            groupedit:false,
            specificationLevel1: [],
        },
        mounted: function () {
            if(this.groupModel.Id>0){
                if(this.groupModel.specificationdetail!=""){
                    var detail=JSON.parse(this.groupModel.specificationdetail);
                    var jqggtable=$(".ggtable tr:not(.gg_title)");
                    jqggtable.each(function(i,o){
                        $(o).find(".price").val(detail[i].price);
                        $(o).find(".stock").val(detail[i].stock);
                        $(o).find(".original-price").val(detail[i].originalPrice);
                        $(o).find(".price").prop("disabled", true);
                        $(o).find(".group-price").val(detail[i].groupPrice).prop("disabled", true);
                    });
                }
            }
        },
        computed: {

        },
        created:function(){
            if(this.groupModel.pickspecification!=""){
                this.pickspecification=JSON.parse(this.groupModel.pickspecification);
            }
        },
        methods:{
            save:function(){
                var carouselAlert = false;
                if ($('.CarouselList .dz-image-preview').length > 0) {
                    $('.CarouselList .dz-image-preview').each(function(i,n) {
                        if ($(n).find('span[data-dz-errormessage=""]').html() !== '') {
                            carouselAlert = true;
                        }
                    });
                    $('#ImageCount').val($('.CarouselList .dz-image-preview').length);
                }
                if (carouselAlert) {
                    return layer.msg('轮播图上传失败 ! ').html();
                }
                if ($('.CarouselList .dz-image-preview').length ===0) {
                    return layer.msg('至少上传一张轮播图 ! ');
                }

                var GroupName = app.groupModel.GroupName;
                if (GroupName.length === 0) return layer.msg("请填写拼团名称");
                if (GroupName.length > 40) {
                    return layer.msg("拼团名称最多40个字！");
                }

                var miniprice = 10000000000
                var minigroupprice = 10000000000;
                var minioriginaprice = 10000000000;
                var sumstock = 0;
                //规格
                var gglist=this.buildSpecificationTable();
                var labelcount = 0;
                //规格详情列表
                var ggdetail=[];
                var jqggtable=$(".ggtable tr:not(.gg_title)");
                if(gglist.length>0){
                    labelcount = gglist.length;
                }
                else if(this.pickspecification.length==1&&this.pickspecification[0].items.length>0){
                    labelcount = this.pickspecification[0].items.length;
                }
                if(labelcount>0)
                {
                    for (var gi = 0; gi < labelcount; gi++) {
                        var _cstock=jqggtable.eq(gi).find(".stock").val() || 0;
                        var _price = Number(jqggtable.eq(gi).find(".price").val())||0;
                        var _originalPrice = Number(jqggtable.eq(gi).find(".original-price").val()) || 0;
                        var _groupPrice = Number(jqggtable.eq(gi).find(".group-price").val()) || 0;
                        if (_price >= _originalPrice) {
                            layer.msg("单买价需小于原价！");
                            return;
                        }
                        if (_groupPrice >= _price) {
                            layer.msg("团购价需小于单买价！");
                            return;
                        }

                        miniprice = miniprice>_price?_price:miniprice;
                        minigroupprice = minigroupprice>_groupPrice?_groupPrice:minigroupprice;
                        minioriginaprice = minioriginaprice>_originalPrice?_originalPrice:minioriginaprice;
                        sumstock += Number(_cstock);

                        var spenames = [];
                        if(gglist.length>0)
                        {
                            gglist[gi].forEach(function(specitem){
                                spenames.push(specitem.name);
                            });
                        }
                        else{
                            spenames.push(this.pickspecification[0].items[gi].name);
                        }
                        ggdetail.push({
                            "name":spenames.join("_"),
                            "originalPrice": _originalPrice,
                            "price": _price,
                            "groupPrice": _groupPrice,
                            "stock": _cstock
                        });
                    }

                    app.groupModel.UnitPrice = Math.ceil(miniprice*100);
                    app.groupModel.DiscountPrice = Math.ceil(minigroupprice*100);
                    app.groupModel.OriginalPrice = Math.ceil(minioriginaprice*100);
                    app.groupModel.CreateNum = sumstock;
                    app.groupModel.specificationdetail=JSON.stringify(ggdetail);
                    app.groupModel.pickspecification=JSON.stringify(this.pickspecification);
                }
                else{
                    app.groupModel.DiscountPrice = Math.ceil(app.groupModel.DiscountPriceStr*100);
                    if (app.groupModel.DiscountPrice<= 0)
                        return layer.msg("请填写拼团价格");

                    app.groupModel.UnitPrice = Math.ceil(app.groupModel.UnitPriceStr*100);
                    if (app.groupModel.UnitPrice<=0)
                        return layer.msg("请填写单买价");

                    if (app.groupModel.UnitPrice <= app.groupModel.DiscountPrice) {
                        return layer.msg("单买价必须大于拼团价格！");
                    }

                    app.groupModel.OriginalPrice = Math.ceil(app.groupModel.OriginalPriceStr*100);
                    if (app.groupModel.OriginalPrice<=0)
                        return layer.msg("请填写原价");
                    if (app.groupModel.OriginalPrice <= app.groupModel.UnitPrice) {
                        return layer.msg("原价必须大于单买价！");
                    }

                    app.groupModel.HeadDeduct =  Math.ceil(app.groupModel.HeadDeductStr*100);
                    if (app.groupModel.HeadDeduct >= app.groupModel.DiscountPrice) {
                        return layer.msg("团长减价必须小于拼团价！");
                    }

                    var CreateNum = app.groupModel.CreateNum;
                    if (0 == CreateNum || CreateNum.length == 0 || CreateNum=="") {
                        return layer.msg('请输入生成数量！');
                    }
                    if (CreateNum < 1 || CreateNum > 999) {
                        return layer.msg('生成数量必须在1-999！');
                    }
                }

                //是否立即开始
                var IsConcern = $('#IsConcern')[0].checked;
                var ValidDateStart = $('#ShowTimeS').val();
                var ValidDateEnd = $('#ShowTime').val();
                var UserDateEnd=$("#ShowUseTimeEnd").val();
                if(app.groupModel.Id == 0){
                    if (new Date(ValidDateStart) < new Date() && !IsConcern) {
                        layer.msg('开始时间要大于当前时间！');
                        return false;
                    }
                }
                if (new Date(ValidDateEnd) < new Date(ValidDateStart)) {
                    layer.msg('结束时间要大于开始时间！');
                    return false;
                }
                var SDate=IsConcern?new Date():new Date(ValidDateStart);
                var artDate= SDate.setDate(SDate.getDate()+2);
                if (new Date(ValidDateEnd) < artDate) {
                    layer.msg('活动时间要大于48小时！');
                    return false;
                }

                app.groupModel.ValidDateStart = ValidDateStart;
                app.groupModel.ValidDateEnd = ValidDateEnd;

                var GroupSize = app.groupModel.GroupSize;
                if (0 == GroupSize || GroupSize.length == 0 || GroupSize == "") {
                    return layer.msg('请输入成团人数！');
                }
                if (GroupSize < 2 || GroupSize > 99) {
                    return layer.msg('成团人数必须在2-99！');
                }

                var Description =comeditor.getContent();// ue.getContent();
                //Base64加密
                var b = new Base64();
                app.groupModel.Description = b.encode(Description);

                //轮播图
                var ImgList = '';
                $('input[name="CarouselList"]').each(function (i, n) {
                    ImgList += '|' + $(n).val();
                });
                //产品图片
                var ImgUrl = '';
                if($('input[name="LogUrl"]').length>0)
                {
                    $('input[name="LogUrl"]').each(function (i, n) {
                        app.groupModel.ImgUrl = $(n).val();
                    });
                }
                else{
                    if(app.groupModel.ImgUrl.length<=0)
                    {
                        return layer.msg('请上传产品图片！');
                    }
                }

                app.groupModel.appId='@ViewBag.appId';
                app.groupModel.IsConcern=IsConcern;

                $.post('/groups/AddOrEdite',
                    $.extend(app.groupModel,{ImgList:ImgList,isEncryption:true}),
                    function (result) {
                        if (result.code > 0) {
                            layer.msg('保存成功');
                            $('#loadModal .modal-body').html(result.msg);
                            window.location.href = "/groups/MiniappStoreGroupsManager?appId=@ViewBag.appId&PageType=@(Utility.IO.Context.GetRequestInt("PageType",0))";
                        } else {
                            layer.msg(result.msg);
                        }
                    });
            },
            /*******************************产品规格 begin ********************************/
            addSpecTest:function(){
                var value = $('#spetest').val();
                if(value==undefined || value.length<=0)
                {
                    return layer.msg("请输入规格");
                }
                var isbreak = false;
                app.pickspecification.forEach(function(item){
                    if(value==item.name)
                    {
                        isbreak = true;
                        return;
                    }
                });
                if(isbreak)
                {
                    return layer.msg("规格不能重复");
                }
                if(this.pickspecification.length>=4){
                    layer.msg("最多只能创建4种规格！");
                    return;
                }

                app.pickspecification.push({name:value,items:[]});
            },
            addLabelTest:function(name,index){
                var value = $('#labeltest'+index).val();
                if(value==undefined || value.length<=0)
                {
                    return layer.msg("请输入规格值");
                }
                var isbreak=false;
                app.pickspecification.forEach(function(item){
                    if(name==item.name)
                    {
                        if(item.items.length>10)
                        {
                            return layer.msg("最多只能添加10个规格值");
                        }
                        item.items.forEach(function(o){
                            if(o.name==value){
                                isbreak=true;
                                return;
                            }
                        });
                        if(isbreak)
                        {
                            return layer.msg("规格值不能重复");
                        }
                        item.items.push({name:value});
                        return;
                    }
                });
            },
            discarts:function () {
                //笛卡尔积
                var twodDscartes = function (a, b) {
                    var ret = [];
                    for (var i = 0; i < a.length; i++) {
                        for (var j = 0; j < b.length; j++) {
                            ret.push(ft(a[i], b[j]));
                        }
                    }
                    return ret;
                }
                var ft = function (a, b) {
                    if (!(a instanceof Array))
                        a = [a];
                    var ret = a.slice(0);
                    ret.push(b);
                    return ret;
                }
                //多个一起做笛卡尔积
                return (function (data) {
                    var len = data.length;
                    if (len == 0)
                        return [];
                    else {
                        var r = data[0];
                        for (var i = 1; i < len; i++) {
                            r = twodDscartes(r, data[i]);
                        }
                        return r;
                    }
                })(arguments.length > 1 ? arguments : arguments[0]);
            },
            GetRowSpan:function(index){
                result= this.pickspecification.reduce(function(sum,currentValue,currentIndex){
                    if(currentIndex>index&&sum*currentValue.items.length>0){
                        return sum*currentValue.items.length;
                    }
                    else{
                        return  sum*1;
                    }
                },1);
                return result;
            },
            //创建规格表格
            buildSpecificationTable:function(){
                var _t=[];
                var that=this;
                this.pickspecification.forEach(function(o){
                    if(o.items.length>0){
                        _t.push(o.items);
                    }

                });
                var _result=[];
                if(_t.length>1){
                    _result= this.discarts(..._t);
                }
                return _result;
            },
            changeStock:function(e){
                var obj=$(e.target);
                var value = obj.val();
                while (!/^\d{0,7}$/.test(value) && value != "") {
                    value = value.substring(0,value.length-1);
                }
                obj.val(value);
            },
            changePrice:function(e){
                var obj=$(e.target);
                var value = obj.val();
                while (!_reg.test(value) && value != "") {
                    value = value.substring(0,value.length-1);
                }
                obj.val(value);
            },

            changeStockLimit:function(){
                var that=this;
                if(!that.p.stockLimit){
                    layer.confirm('不限制库存将清空现在设置的库存数！', function(index){
                        //do something
                        $(".ggtable tr:not(.gg_title)").each(function(i,o){
                            $(o).find(".stock").val("")
                        });
                        that.p.stock=0;
                        layer.close(index);

                    },function(index){

                        that.p.stockLimit=true;
                        layer.close(index);
                    });
                }

            },
            GetRowCount:function(id){
                var _t=this.buildSpecificationTable();
                var _check=0;
                for (var i = 0; i < _t.length; i++) {
                    for(var j=0;j<_t[i].length;j++){
                        if(_t[i][j].id==id){
                            _check+=1;

                        }
                    }
                }
                return _check;

            },
            setAllValue:function(classname){
                var that=this;
                var value = $("#"+classname).val();
                if(value==undefined || value.length==0)
                {
                    return;
                }
                $(".ggtable tr:not(.gg_title)").each(function(i,o){
                    $(o).find("."+classname).val(value);
                });
            },
            /*******************************产品规格 end ********************************/
        }
    });
</script>
