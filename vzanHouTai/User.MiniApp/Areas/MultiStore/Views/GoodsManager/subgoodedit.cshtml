
@model EntGoods
@{
    ViewBag.Title = "编辑产品";
    ViewBag.PageType = (int)TmpType.小程序多门店模板;
    string path = "/MultiStore/GoodsManager";
    Layout = "~/Views/Shared/_MiniappLayout.cshtml";
    int appid = Utility.IO.Context.GetRequestInt("appId", 0);
    int storeId = Utility.IO.Context.GetRequestInt("storeId", 0);

    List<EntGoodType> ptypes = EntGoodTypeBLL.SingleModel.GetList(string.Format("aid={0} and state=1", appid), 50, 1, "*", "id asc");
    List<EntGoodLabel> plabels = EntGoodLabelBLL.SingleModel.GetList(string.Format("aid={0} and state=1", appid), 25, 1, "*", "id asc");
    List<EntGoodUnit> punits = EntGoodUnitBLL.SingleModel.GetListBySql(string.Format("select * from entgoodunit where aid={0}", appid));
    List<EntSpecification> specificationlist = EntSpecificationBLL.SingleModel.GetList(string.Format("aid={0} and state=1", appid));

    
    List<EntIndutypes> exttypes = EntIndutypesBLL.SingleModel.GetList(string.Format("state=1 and aid={0}", appid));
    XcxAppAccountRelation rel = XcxAppAccountRelationBLL.SingleModel.GetModel(appid);

    var _imglist = new List<object>();
    var _slideimgs = new List<object>();
    string[] slideimgarray = new string[] { };

    if (Model.id > 0)
    {

        if (!string.IsNullOrEmpty(Model.img))
        {
            _imglist.Add(new { id = 1, url = Model.img });
        }

        if (!string.IsNullOrEmpty(Model.slideimgs))
        {
            slideimgarray = Model.slideimgs.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
            for (int i = 0; i < slideimgarray.Length; i++)
            {
                _slideimgs.Add(new { id = i, url = slideimgarray[i] });
            }
        }
    }
    FootBathBLL storeBLL =  FootBathBLL.SingleModel;
    List<FootBath> storeList = storeBLL.GetList(string.Format("appid={0}", appid));
    string manageType = Utility.IO.Context.GetRequest("manageType", "");
    FootBath currentStore = null;
    if (manageType == "fromAdmin")
    {
        if (storeId <= 0)
        {
            @:非法请求
            return;
        }
        else
        {
            currentStore = storeBLL.GetModel(storeId);
            ViewBag.Title = "编辑门店产品";
        }
    }
}

<script src="/js/ueditor1_4_3_3-utf8-net/utf8-net/ueditor.config.js"></script>
<script src="/js/ueditor1_4_3_3-utf8-net/utf8-net/ueditor.all.min.js"></script>


<style>
    .picklabels { white-space: normal; word-break: break-all; }
    .picklabels span { cursor: pointer; padding: 5px 10px; border: 1px solid #5B94FD; color: #5B94FD; border-radius: 5px; text-align: center; display: inline-block; margin: 10px 10px 0 0; }
    .picklabels span.sel { background-color: #5B94FD; color: #fff; }
    .btn-primary { background-color: rgba(16, 142, 233, 1) !important; color: #fff; border-color: rgba(16, 142, 233, 1) !important; }

    .alert-info { display: inline-block; min-width: 100px; margin-right: 10px; padding: 5px; margin-bottom: 10px; }

    .gg_line { padding: 5px; }
    .gg_line .goodlabels { padding: 10px 0; }
    .gg_title { background-color: #E5E5E5; padding: 10px; }
    .ggtable { border-top: 1px solid #ccc; border-left: 1px solid #ccc; }
    .ggtable tr td { border-right: 1px solid #ccc; border-bottom: 1px solid #ccc; border-collapse: collapse; }
    .w50 { width: 50px; }
</style>
<div id="app" v-cloak>
    <div>
        <input type="button" value="保存" class="btn btn-primary" v-on:click="save" />
        @if (Model.goodtype == (int)EntGoodsType.拼团产品)
        {
            <a href="/MultiStore/GoodsManager/subgrouplist?appId=@appid&storeId=@(storeId)" class="btn btn-default">返回</a>
        }
        else
        {
            <a href="@(path)/subgoodlist?appId=@appid&storeId=@(storeId)&manageType=@manageType" class="btn btn-default">返回</a>
        }
        
    </div>
    <div class="wrap mt10">
        <h2 class="region-head">基础信息</h2>
        <div class="text-danger">门店只能修改产品库存，其他信息均不可修改！</div>
        <table width="60%" class="formtable">
            <tr>
                <td width="125" align="right"><span class="danger">*</span>产品名称：</td>
                <td align="left">
                    <input type="text" disabled v-model="p.name" class="form-control" placeholder="必填，100个字以内" size="100" maxlength="100" />
                </td>
            </tr>
            <tr>
                <td align="right" valign="top"><span class="danger">*</span>产品图片：</td>
                <td align="left">
                    <div class="pimg">
                        <img src="@(Model.img)" width="120" />
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right"><span class="danger">*</span>产品分类：</td>
                <td align="left">
                    <div class="d-flex fc">
                        <div class="goodlabels">
                            <div class="alert alert-info" v-for="(item,index) in picktype">

                                {{item.name}}
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">产品标签：</td>
                <td align="left">

                    <div class="">
                        <div class="goodlabels">
                            <div class="alert alert-info" v-for="(item,index) in picklabel">
                                {{item.name}}
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">产品规格：</td>
                <td valign="top">


                    <div>
                        <div v-for="(item,index) in pickspecification" class="gg_line">
                            <div class="d-flex d-flex-center gg_title">
                                <div class="flex">
                                    <select v-model="item.id" v-on:change="changeSpecification(item)" disabled>
                                        <option disabled>请选择规格</option>
                                        <option v-for="(gg_item,gg_index) in specificationLevel1" v-bind:value="gg_item.id">{{gg_item.name}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="goodlabels">
                                <div class="alert alert-info" v-for="(value_item,value_index) in item.items" v-if="item.items.length>0">
                                    {{value_item.name}}
                                </div>

                            </div>
                        </div>

                        <div class="" v-if="pickspecification.length>0">
                            <table width="100%" class="ggtable">
                                <tr class="gg_title">
                                    <td v-for="(item,index) in pickspecification" v-if="item.items.length>0">
                                        {{item.name}}
                                    </td>
                                    <td v-if="p.goodtype==1">原价</td>
                                    <td>{{p.goodtype==1?"单买价":"价格"}}</td>
                                    <td v-if="p.goodtype==1">团购价</td>
                                    <td>库存</td>
                                </tr>
                                <template v-if="pickspecification.length==1">
                                    <tr v-for="(item,index) in pickspecification[0].items">
                                        <td>
                                            {{item.name}}
                                        </td>
                                        <!--原价-->
                                        <td width="110" align="center" v-if="p.goodtype==1"><input type="text" :disabled="p.goodtype==1&&p.id>0" class="original-price form-control input-mini" v-on:input="changePrice" /> </td>
                                        <!--单买价/普通商品价格-->
                                        <td width="110" align="center"><input type="text" :disabled="p.goodtype==1&&p.id>0" class="price form-control input-mini" v-on:input="changePrice" /> </td>
                                        <!--团购价-->
                                        <td width="110" align="center" v-if="p.goodtype==1"><input :disabled="p.goodtype==1&&p.id>0" type="text" class="group-price form-control input-mini" v-on:input="changePrice" /> </td>
                                        <!--库存-->
                                        <td width="110" align="center"><input type="text" class="stock form-control input-mini" v-on:input="changeStock" v-bind:disabled="!p.stockLimit" /> </td>
                                    </tr>
                                </template>
                                <template v-else>
                                    <tr v-for="(item,index) in buildSpecificationTable()">
                                        <template v-for="(col_item,col_index) in item">
                                            <td valign="middle" align="center" v-bind:rowspan="GetRowSpan(col_index)" v-if="GetRowSpan(col_index)>1&&index%GetRowSpan(col_index)==0">
                                                {{col_item.name}}
                                            </td>
                                            <td v-else-if="GetRowSpan(col_index)==1">
                                                {{col_item.name}}
                                            </td>

                                        </template>

                                        <td width="110" align="center"><input type="text" class="price form-control input-mini" v-on:input="changePrice" disabled /> </td>
                                        <td width="110" align="center"><input type="text" class="stock form-control input-mini" v-on:input="changeStock" v-bind:disabled="!p.stockLimit" /> </td>
                                    </tr>
                                </template>
                            </table>
                            <div v-if="pickspecification.length>0" class="gg_title" style="padding:0;">
                                <table align="right">

                                    <tr>
                                        <td align="right">批量设置：</td>
                                        <td width="110" align="center"></td>
                                        <td width="110" align="center"><input type="number" min="-1" class="form-control input-mini" v-model="allStock" v-bind:disabled="!p.stockLimit" /> </td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td align="center"></td>
                                        <td align="center"><input type="button" class="btn btn-primary" value="确定" v-on:click="setAllStock" v-bind:disabled="!p.stockLimit" /></td>
                                    </tr>
                                </table>
                                <div style="clear:both;"></div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">产品参数：</td>
                <td align="left">
                    <table class="table table-condensed" style="width:300px">
                        <tr class="info">
                            <td>参数名称</td>
                            <td>参数值</td>
                            <td>操作</td>
                        </tr>
                        <tr v-for="(pickitem,pickindex) in pickindutypes">
                            <td>
                                <select v-model="pickitem.sel1" class="form-control" v-on:change="changetype1(pickitem.sel1,pickitem)">
                                    <option v-for="(item1,index1) in pickitem.typelist1" v-bind:value="item1.TypeId">{{item1.TypeName}}</option>
                                </select>
                            </td>
                            <td>
                                <select v-model="pickitem.sel2" class="form-control">
                                    <option v-for="(item2,index2) in pickitem.typelist2" v-bind:value="item2.TypeId">{{item2.TypeName}}</option>
                                </select>
                            </td>
                            <td>
                                
                            </td>
                        </tr>
                    </table>
                   
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">库存：</td>
                <td align="left">

                    <div class="d-flex d-flex-center">
                        <label for="showprice">
                            <input type="checkbox" id="showprice" disabled name="showprice" v-model="p.stockLimit" v-on:click="changeStockLimit" />限制库存
                        </label>
                        <div class="ml10">
                            <input type="text" class="form-control w100" v-model.number="p.stock" v-bind:disabled="!p.stockLimit||pickspecification.length>0" />
                        </div>
                    </div>
                </td>
            </tr>
            <tr v-if="buildSpecificationTable().length<=0">
                <td align="right" valign="top">价格：</td>
                <td align="left">
                    <input type="text" disabled v-model="p.price" class="form-control w100" placeholder="非必填，请输入大于0的数字，最多两位小数" />
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">单位：</td>
                <td align="left">
                    <div class="d-flex d-flex-center">
                        <select class="form-control w100" v-model="p.unit" disabled>
                            <option disabled value="">请选择</option>
                            <option v-for="(item,index) in punits" v-bind:value="item.name">{{item.name}}</option>
                        </select>

                    </div>
                </td>
            </tr>
            <tr>
                <td align="right" valign="top">优先级：</td>
                <td>
                    <input type="number" v-model="p.sort" class="form-control w100" dis />
                    <div class="warn mt10">
                        可输入0~9999之间的整数，数字越大，优先级越高<br />
                        不填或者填写为0时表示自动排序，即按创建时间先后排序
                    </div>
                </td>
            </tr>
        </table>
        <br />
        <div v-if="p.goodtype==1">
            <h2 class="region-head">拼团信息（把产品展示组件添加到小程序后，以下信息将显示在产品展示列表）</h2>
            <table width="60%" class="formtable">
                @*start 拼团*@
                <tr v-if="specificationNums()<=0">
                    <td width="125" align="right" valign="top">拼团价：<label style="color: red">*</label></td>
                    <td align="left">
                        <input id="DPrice" maxlength="7" placeholder="拼团价" v-model="p.EntGroups.GroupPriceStr" class="form-control width400 inputdecimal" v-bind:disabled="p.EntGroups.Id>0" />
                    </td>
                </tr>
                <tr v-if="specificationNums()<=0">
                    <td align="right" valign="top">原价：<label style="color: red">*</label></td>
                    <td align="left">

                        <input id="OPrice" maxlength="7" placeholder="原价" v-model="p.EntGroups.OriginalPriceStr" class="form-control width400 inputdecimal" v-bind:disabled="p.EntGroups.Id>0" />
                    </td>
                </tr>
                <tr>
                    <td align="right" valign="top" width="125">团长减价：<label style="color: red">*</label></td>
                    <td align="left">
                        <input name="HeadDeduct" id="HeadDeductStr" maxlength="7" placeholder="团长减价" v-model="p.EntGroups.HeadDeductStr" class="form-control width400 limitinput inputdecimal " v-bind:disabled="p.EntGroups.Id>0" />
                    </td>
                </tr>
                <tr>
                    <td align="right" valign="top">成团人数：<label style="color: red">*</label></td>
                    <td align="left">
                        <input type="text" maxlength="2" placeholder="成团人数" id="GroupSize" v-bind:disabled="p.EntGroups.Id>0" onkeyup="value = value.replace(/[^\d]/g, '')" v-model="p.EntGroups.GroupSize" class="form-control width400">
                    </td>
                </tr>
                <tr>
                    <td align="right" valign="top">每用户限购：<label style="color: red">*</label></td>
                    <td align="left">
                        <select class="form-control width400" id="LimitNum" v-bind:disabled="p.EntGroups.Id>0" v-model="p.EntGroups.LimitNum">
                            <option value="0" v-bind:selected="p.EntGroups.LimitNum==0">不限</option>
                            @for (var i = 1; i <= 20; i++)
                            {
                                <option value="@i" v-bind:selected="p.EntGroups.LimitNum==@i">@i</option>
                            }
                        </select>
                    </td>
                </tr>

                @*end 拼团*@
            </table>
        </div>
        <h2 class="region-head">产品详情</h2>
        <table width="100%" class="formtable">
            <tr>
                <td align="right" width="125">产品轮播图：</td>
                <td>
                    <div class="pslideimgs">
                        @if (slideimgarray.Length > 0)
                        {
                            for (int i = 0; i < slideimgarray.Length; i++)
                            {
                                <img src="@(slideimgarray[i])" width="100" height="100" />
                            }
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right">产品描述：</td>
                <td>
                    <div id="editor" style="width:380px;height:360px;"></div>
                </td>
            </tr>
        </table>
    </div>
</div>

<script>
    var ispost=false;
    var aid=@appid;
    var industr = "@(rel.Industr)";
    var subid =@(Utility.IO.Context.GetRequestInt("subid",0));
    var ptypeitem = {
        id:0,
        name: "",
        aid:aid,
        state:1,
    };
    var plabelitem = {
        id:0,
        name: "",
        aid:aid,
        state:1,
    };
    var punititem = {
        id:0,
        name: "",
        aid:aid,
        state:1,
    };
    var indutypeitem={
        sel1:0,
        sel2:0,
        typelist1:[],
        typelist2:[],
    };
    var comeditor=null;
    var exttypes= @(Html.Raw(JsonConvert.SerializeObject(exttypes)));
    if(exttypes.length>0){
        indutypeitem.typelist1=exttypes.filter(function(item){
            return item.ParentId==0;
        });
    }

    var specificationlist= @(Html.Raw(JsonConvert.SerializeObject(specificationlist)));
    //产品规格数据结构

    var slideimg=@Html.Raw(JsonConvert.SerializeObject(Model.slideimgs.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries).ToList()));
    //规格项
    var specificationItem={
        id:0,
        name:"",
        parentid:0,
        items:[],//规格值列表
    };

    var app = new Vue({
        el: "#app",
        data: {
            p:@Html.Raw(JsonConvert.SerializeObject(Model)),
            ptypes:@Html.Raw(JsonConvert.SerializeObject(ptypes)),
            plabels:@Html.Raw(JsonConvert.SerializeObject(plabels)),
            punits:@Html.Raw(JsonConvert.SerializeObject(punits)),
            editptypeitem:JSON.parse(JSON.stringify(ptypeitem)),
            editplabelitem:JSON.parse(JSON.stringify(plabelitem)),
            editpunititem:JSON.parse(JSON.stringify(punititem)),
            plabeladd: false,
            ptypeadd: false,
            picklabel: [],
            picktype: [],
            pickindutypes:[],
            pickspecification:[],//选择的规格
            current_pickspecification_index: -1,//当前操作的规格索引
            current_pickspecification_id:-1,
            current_specificationlist:[],//当前显示的规格值列表
            specificationTable:[],
            allPrice:0,
            allStock:0,
            specificationLevel1:[],
        },
        computed:{
            specificationNums:function(){

            },

        },
        created:function(){
            if(specificationlist.length>0){
                this.specificationLevel1=specificationlist.filter(function(item){
                    return item.parentid==0;
                });
            }

            if (this.p.exttypes != "") {
                var _exttypes = this.p.exttypes.split(",");
                if (_exttypes.length > 0) {
                    for (var i = 0; i < _exttypes.length; i++) {
                        var _types_arr = _exttypes[i].split('-');
                        var _newitem = $.extend({}, indutypeitem, true);
                        _newitem.sel1 = _types_arr[0];
                        this.changetype1(_newitem.sel1, _newitem);
                        _newitem.sel2 = _types_arr[1];
                        this.pickindutypes.push(_newitem);
                    }
                }
            }


            if(this.p.pickspecification!=""){
                this.pickspecification=JSON.parse(this.p.pickspecification);
            }
        },
        mounted: function () {
            var that=this;
            if ($(".edui-container").length == 0) {
                //that.comeditor.destroy();
                that.BuildEditor();
            }

            if(this.p.id>0){
                if (this.p.plabels != "") {
                    var _plabels = this.p.plabels.split(",");
                    for (var i = 0; i < this.plabels.length; i++) {
                        for (var j = 0; j < _plabels.length; j++) {
                            if (this.plabels[i].id == _plabels[j]) {
                                this.plabels[i].sel = true;
                                this.picklabel.push(this.plabels[i]);
                            }
                        }
                    }
                }

                if (this.p.ptypes != "") {
                    var _ptypes = this.p.ptypes.split(",");
                    for (var i = 0; i < this.ptypes.length; i++) {
                        for (var j = 0; j < _ptypes.length; j++) {
                            if (this.ptypes[i].id == _ptypes[j]) {
                                this.ptypes[i].sel = true;
                                this.picktype.push(this.ptypes[i]);
                            }
                        }
                    }
                }

                if(this.p.specificationdetail!=""){
                    var detail=JSON.parse(this.p.specificationdetail);
                    var jqggtable=$(".ggtable tr:not(.gg_title)");
                    jqggtable.each(function(i,o){
                        $(o).find(".price").val(detail[i].price);
                        $(o).find(".stock").val(detail[i].stock);

                        $(o).find(".original-price").val(detail[i].originalPrice);
                        $(o).find(".group-price").val(detail[i].groupPrice).prop("disabled", true);
                    });
                }

            }
            console.log("mounted");
        },

        methods:{
            specificationNums: function () {
                var list = this.buildSpecificationTable();
                if (list.length > 0) {
                    return list.length
                }
                else {
                    if (this.pickspecification.length == 0) {
                        return 0;
                    }
                    else {
                        return this.pickspecification[0].items.length;
                    }
                }
            },
            save:function(){
                var that=this;
                if(ispost)
                    return;
                if($.trim(this.p.name).length==0){
                    layer.msg("请填写产品名称！");
                    return;
                }
                if($.trim(this.p.name).length>100){
                    layer.msg("产品名称不能超过100个字！");
                    return;
                }
                //价格
                if(this.pickspecification.length==0){
                    if(!/^\d*.?\d{0,2}$/.test(this.p.price)){
                        layer.msg("产品价格请输入大于0的数字，最多两位小数！");
                        return;
                    }
                    else if (this.p.price <= 0 || this.p.price>1000000) {
                        layer.msg("产品价格请输入大于0小于1000000的数字，最多两位小数！");
                        return;
                    }
                }
                if (that.p.stockLimit) {
                    if (!/^\d{0,7}$/.test(this.p.stock)||(parseInt(that.p.stock)) <= 0) {
                        layer.msg("请输入产品库存,库存只能输入大于0的整数！");
                        return;
                    }
                }

                if (!/\d+/.test(that.p.sort)) {
                    layer.msg("请输入0~9999之间的整数作为产品的优先级！");
                    return;
                }

                var _img=$("input:hidden[name='img']").val()||"";
                //图片
                if(this.p.img==""&&_img==""){
                    layer.msg("请上传产品图片！",{time:1000});
                    return;
                }
                else if(_img!=""){
                    this.p.img=_img;
                }
                var _ptypes = [];
                if (this.picktype.length <= 0) {
                    layer.msg("请选择产品分类！", { time: 1000 });
                    return;

                }
                else {
                    for (var i = 0; i < this.picktype.length; i++) {
                        _ptypes.push(this.picktype[i].id);
                    }
                }

                //标签
                var _plabels=[];
                if(this.picklabel.length>0){
                    for (var i = 0; i < this.picklabel.length; i++) {
                        _plabels.push(this.picklabel[i].id);
                    }
                }

                var selindutype=[];
                if(this.pickindutypes.length>0){
                    for (var i = 0; i < this.pickindutypes.length; i++) {
                        var _item=this.pickindutypes[i];
                        if(_item.sel1==0||_item.sel2==0){
                            layer.msg("请选择产品参数和参数值！");
                            return;
                        }
                        else{
                            var _sel=_item.sel1+"-"+_item.sel2;
                            if(selindutype.includes(_sel)){
                                layer.msg("请勿添加重复的产品参数！");
                                return;
                            }
                            else{
                                selindutype.push(_sel);
                            }

                        }
                    }
                }
                if(selindutype.length>0){
                    this.p.exttypes=selindutype.join(",");
                }

                //规格
                var gglist=this.buildSpecificationTable();
                //规格详情列表
                var ggdetail=[];
                var jqggtable=$(".ggtable tr:not(.gg_title)");
                if(gglist.length>0){
                    for (var gi = 0; gi < gglist.length; gi++) {
                        var _cstock=jqggtable.eq(gi).find(".stock").val();
                        _cstock=parseInt(_cstock)||0;
                        var _cprice=jqggtable.eq(gi).find(".price").val();
                        if(!/^\d{1,}.?(\d{0,2})?$/.test(_cprice)){
                            layer.msg("产品价格请输入大于0的数字，最多两位小数！");
                            return;
                        }
                        var _cids=[];
                        gglist[gi].forEach(function(_gi_item){
                            _cids.push(_gi_item.id);
                        });
                        ggdetail.push({"id":_cids.join("_"),price:Number(_cprice),stock:_cstock});
                    }
                }
                else if(this.pickspecification.length==1&&this.pickspecification[0].items.length>0){
                    for (var gi = 0; gi < this.pickspecification[0].items.length; gi++) {
                        var _cstock=jqggtable.eq(gi).find(".stock").val();
                        _cstock=parseInt(_cstock)||0;
                        var _cprice=jqggtable.eq(gi).find(".price").val();


                        if(!/^\d{1,}.?(\d{0,2})?$/.test(_cprice)){
                            layer.msg("产品价格请输入大于0的数字，最多两位小数！");
                            return;
                        }


                        var _citem=this.pickspecification[0].items[gi];
                        ggdetail.push({"id":_citem.id,price:Number(_cprice),stock:_cstock});
                    }

                }
                //选择最小价格 作为产品的展示价格
                if (ggdetail.length > 0) {
                    var ggdetail_temp = JSON.parse(JSON.stringify(ggdetail));
                    ggdetail_temp.sort(function (a, b) {
                        return a.price - b.price;
                    });
                    this.p.price = ggdetail[0].price;
                }
                this.p.specificationdetail=JSON.stringify(ggdetail);

                console.log(this.p.specification);
                console.log(this.p.specificationdetail);

                var specificationkeys=[];
                var _specification=[];

                this.p.pickspecification=JSON.stringify(this.pickspecification);
                if(this.pickspecification.length>0){

                    this.pickspecification.forEach(function(_item){
                        if(_item.items.length>0){
                            //保存规格
                            specificationkeys.push(_item.id);
                            //保存规格值
                            _item.items.forEach(function(_item_value){
                                _specification.push(_item_value.id);
                            });
                        }
                    });
                }
                this.p.specificationkeys=specificationkeys.join(",");
                this.p.specification=_specification.join(",");

                //return;
                this.p.ptypes = _ptypes.join(",");
                this.p.plabels=_plabels.join(",");
                //滚动图片
                var slidehide=$("input:hidden[name='p_slideimgs']");

                if(slidehide&&slidehide.length>0){
                    for (var i = 0; i < slidehide.length; i++) {
                        slideimg.push($(slidehide[i]).val());
                    }
                }
                that.p.slideimgs=slideimg.join(",");
                that.p.aid=aid;
                console.log(that.slideimgs);
                ispost=true;
                that.p.description = comeditor.getContent();
                if (subid <= 0) {
                    layer.msg("非法请求");
                    return;
                }
                $.post("@(path)/subgoodedit", $.extend(that.p, {
                    act: "edit",
                    subid: subid,
                    appId: aid
                }), function (data) {
                    console.log(data);
                    if(data&&data.isok){
                        layer.msg(data.msg,{time:1000});
                    }
                    else{
                        layer.msg(data.msg,{time:1000});
                    }
                    setTimeout(function () {
                        if(app.p.goodtype==1)
                        {
                            window.location.href = "/MultiStore/GoodsManager/subgrouplist?appId="+aid+"&storeId=@(storeId)";
                        }
                        else{
                            window.location.href = "@(path)/subgoodlist?appId=" + aid +"&storeId=@(storeId)&manageType=@(manageType)";
                        }
                    }, 1000)
                });
            },
            addnewptype: function () {

                $('#addModal_ptype').modal('show');

            },
            addnewlabel:function(){

                $('#addModal_plabel').modal('show');
            },
            addnewlabel_add:function(){
                if(this.plabels.length>=25){
                    layer.alert("无法新增标签！您已添加了25个标签分类，已达到上限，请编辑已有的标签或删除部分标签后再进行新增。");
                    return;
                }
                this.plabeladd=true;
            },
            addnewptype_add: function () {
                if (this.ptypes.length >= 50) {
                    layer.alert("无法新增分类！您已添加了50个产品分类，已达到上限，请编辑已有的分类或删除部分分类后再进行新增。");
                    return;
                }
                this.ptypeadd = true;
            },
            //点击添加单位
            addnewunit:function(){
                $("#addModal_punit").modal("show");
            },
            addnewptypeOK:function(){
                var that=this;
                var _typename=$.trim(that.editptypeitem.name);
                if(_typename.length==0||_typename.length>10){
                    layer.msg("分类名称不能为空，且不能超过10个字",{time:1000});
                    return;
                }
                $.post("@(path)/ptype", $.extend(that.editptypeitem,{appId:aid}),function(data){
                    if(typeof data=="object"){
                        if(data.isok){

                            layer.msg("保存成功",{time:1000});
                            if(ptypeitem.id==0){
                                that.ptypes.push(data.msg);
                            }
                            that.editptypeitem=JSON.parse(JSON.stringify(ptypeitem));
                        }
                        else{
                            layer.msg(data.msg,{time:1000});
                        }
                    }
                    else{
                        layer.msg(data.msg,{time:1000});
                    }
                });
            },
            addnewlabelOK:function(){
                var that=this;
                var _typename=$.trim(that.editplabelitem.name);
                if(_typename.length==0||_typename.length>10){
                    layer.msg("标签名称不能为空，且不能超过10个字",{time:1000});
                    return;
                }
                $.post("@(path)/plabel", $.extend(that.editplabelitem,{appId:aid}),function(data){
                    if(typeof data=="object"){
                        if(data.isok){
                            //$('#addModal_plabel').modal('hide');
                            layer.msg("保存成功",{time:1000});
                            if(plabelitem.id==0){
                                that.plabels.push(data.msg);
                            }
                            that.editplabelitem=JSON.parse(JSON.stringify(plabelitem));
                            that.plabeladd=false;
                        }
                        else{
                            layer.msg(data.msg,{time:1000});
                        }
                    }
                    else{
                        layer.msg(data.msg,{time:1000});
                    }
                });
            },
            //确定添加单位
            addnewpunitOK:function(){
                var that=this;
                var _typename=$.trim(that.editpunititem.name);
                if(_typename.length==0||_typename.length>10){
                    layer.msg("单位名称不能为空，且不能超过10个字",{time:1000});
                    return;
                }
                $.post("@(path)/punit", $.extend(that.editpunititem,{appId:aid}),function(data){
                    if(typeof data=="object"){
                        if(data.isok){
                            $('#addModal_punit').modal('hide');
                            layer.msg("保存成功",{time:1000});
                            if(punititem.id==0){
                                that.punits.push(data.msg);
                            }
                            that.editpunititem=JSON.parse(JSON.stringify(punititem));

                        }
                        else{
                            layer.msg(data.msg,{time:1000});
                        }
                    }
                    else{
                        layer.msg(data.msg,{time:1000});
                    }
                });
            },
            selLabel:function(index){
                this.plabels[index].sel=!this.plabels[index].sel;

            },
            selType: function (index) {
                this.ptypes[index].sel = !this.ptypes[index].sel;
            },
            pickplabelOK:function(){

                var selcount=0;
                for (var i = 0; i < this.plabels.length; i++) {
                    if(this.plabels[i].sel){
                        selcount+=1;
                    }
                }
                if(selcount>5){
                    layer.msg("最多只能选择5个标签！",{time:1000});
                    return;
                }
                this.picklabel=[];
                for (var i = 0; i < this.plabels.length; i++) {
                    if(this.plabels[i].sel){
                        this.picklabel.push(this.plabels[i]);
                    }
                }
                $('#addModal_plabel').modal('hide');
            },
            pickptypeOK: function () {
                var selcount = 0;
                this.picktype = [];
                for (var i = 0; i < this.ptypes.length; i++) {
                    if (this.ptypes[i].sel) {
                        this.picktype.push(this.ptypes[i]);
                    }
                }
                $('#addModal_ptype').modal('hide');
            },
            removePickLabel:function(index){

                for (var i = 0; i < this.plabels.length; i++) {
                    if(this.plabels[i].id==this.picklabel[index].id){
                        this.plabels[i].sel=false;
                    }
                }
                this.picklabel.splice(index,1)
            },
            removePickType: function (index) {

                for (var i = 0; i < this.ptypes.length; i++) {
                    if (this.ptypes[i].id == this.picktype[index].id) {
                        this.ptypes[i].sel = false;
                    }
                }
                this.picktype.splice(index, 1)
            },
            BuildEditor: function () {
                console.log("BuildEditor");
                var that = this;
                if (comeditor != null) {
                    comeditor.reset();

                }
                //编辑器
                comeditor = UE.getEditor('editor',{
                    toolbars: [
                        ['source','|' ,'undo', 'redo' ,'|','bold',' italic',' underline','strikethrough','|','forecolor','backcolor', '|','justifyleft','justifycenter','justifyright','justifyjustify'],
                        ['simpleupload','insertimage','insertvideo','paragraph','fontsize',' |','insertorderedlist','insertunorderedlist','horizontal','autotypeset','pasteplain']
                    ],
                    imageUrl: "/Upload/Image?cityid=" + aid,
                    autoHeight: true,
                    readonly: true,
                });
                comeditor.ready(function () {
                    comeditor.setContent(that.p.description);
                });
                comeditor.addListener("contentChange", function () {
                    // const wordCount = ue.getContentLength(true);
                    // const content = ue.getContent();
                    //const plainTxt = ue.getPlainTxt();
                    //console.log(wordCount, content);
                    console.log("change");
                    if (comeditor != null) {
                        that.p.description=comeditor.getContent();
                    }
                });
            },
            addMoreTypeLine:function(){

                var _newitem=$.extend({},indutypeitem,true);
                this.pickindutypes.push(_newitem);
            },
            changetype1:function(pid,pickitem){
                if(exttypes.length>0){
                    var searchlist=exttypes.filter(function(item){
                        return item.ParentId==pid&&item.Industr==industr&&item.AId==aid;
                    });

                    pickitem.typelist2=searchlist;
                }
            },
            /*******************************产品规格 begin ********************************/
            discarts:function () {
                //笛卡尔积
                var twodDscartes = function (a, b) {
                    var ret = [];
                    for (var i = 0; i < a.length; i++) {
                        for (var j = 0; j < b.length; j++) {
                            ret.push(ft(a[i], b[j]));
                        }
                    }
                    return ret;
                }
                var ft = function (a, b) {
                    if (!(a instanceof Array))
                        a = [a];
                    var ret = a.slice(0);
                    ret.push(b);
                    return ret;
                }
                //多个一起做笛卡尔积
                return (function (data) {
                    var len = data.length;
                    if (len == 0)
                        return [];
                    else {
                        var r = data[0];
                        for (var i = 1; i < len; i++) {
                            r = twodDscartes(r, data[i]);
                        }
                        return r;
                    }
                })(arguments.length > 1 ? arguments : arguments[0]);
            },
            GetRowSpan:function(index){
                result= this.pickspecification.reduce(function(sum,currentValue,currentIndex){
                    if(currentIndex>index&&sum*currentValue.items.length>0){
                        return sum*currentValue.items.length;
                    }
                    else{
                        return  sum*1;
                    }
                },1);
                return result;
            },
            //创建规格表格
            buildSpecificationTable:function(){
                //if(this.pickspecification.length==0&&this.p.specificationdetail!=""){
                //    return JSON.parse(this.p.specificationdetail);
                //}
                //2*3*2
                var _t=[];
                var that=this;
                this.pickspecification.forEach(function(o){
                    if(o.items.length>0){
                        _t.push(o.items);
                    }

                });
                var _result=[];
                if(_t.length>1){
                    _result= this.discarts(..._t);
                }
                return _result;
            },
            changeStock:function(e){
                var obj=$(e.target);
                if(!/^\d{0,7}$/.test(obj.val())){
                    layer.msg("请输入正确的库存数",{time:1000});
                    obj.val("");
                    return;
                }
                this.sumStock();
            },
            sumStock:function(){
                var that=this;
                if(that.pickspecification.length>0&& that.p.stockLimit){
                    Vue.nextTick(function(){
                        var allcount=0;
                        $(".ggtable tr:not(.gg_title)").each(function(i,o){
                            var _citemstock= $(o).find(".stock");
                            if(/^\d{0,7}$/.test(_citemstock.val())){
                                allcount+=parseInt(_citemstock.val())||0;
                            }
                            else{
                                layer.msg("请输入正确的库存数",{time:1000});
                                _citemstock.val("");
                                return;
                            }

                        });
                        that.p.stock=allcount;
                    })
                }
            },
            changePrice:function(e){
                var obj=$(e.target);
                if(!/^\d*.?\d{0,2}$/.test(obj.val())){
                    layer.msg("请输入正确的库存数",{time:1000});
                    obj.val("");
                    return;
                }
            },

            changeStockLimit:function(){
                var that=this;
                if(!that.p.stockLimit){
                    layer.confirm('不限制库存将清空现在设置的库存数！', function(index){
                        //do something
                        $(".ggtable tr:not(.gg_title)").each(function(i,o){
                            $(o).find(".stock").val("")
                        });
                        that.p.stock=0;
                        layer.close(index);

                    },function(index){

                        that.p.stockLimit=true;
                        layer.close(index);
                    });
                }

            },
            GetRowCount:function(id){
                var _t=this.buildSpecificationTable();
                var _check=0;
                for (var i = 0; i < _t.length; i++) {
                    for(var j=0;j<_t[i].length;j++){
                        if(_t[i][j].id==id){
                            _check+=1;

                        }
                    }
                }
                return _check;

            },
            //添加规格
            addSpecificationItem:function(){
                if(specificationlist.length<=0){
                    layer.msg("请先添加产品规格！");
                    return;
                }
                if(this.pickspecification.length>=4){
                    layer.msg("最多只能选择4种规格！");
                    return;
                }

                var _specificationItem=$.extend({},specificationItem,true);
                //_specificationItem.select=specificationlist.filter(function(item){
                //    return item.parentid==0;
                //});
                this.pickspecification.push(_specificationItem);
            },
            //添加规格值
            addSpecificationValue:function(item,index){
                if(item.id==0){
                    layer.msg("请先选择产品规格！");
                    return;
                }

                $("#addSpecValueModal").modal("show");
                this.current_pickspecification_index = index;
                this.current_pickspecification_id = item.id;
                this.current_specificationlist=specificationlist.filter(function(_item){
                    return _item.parentid==item.id;
                });
            },
            //确认选择的规格值
            addSpecValueOK:function(){
                var that=this;
                this.pickspecification[this.current_pickspecification_index].items=[];
                var selarray=JSON.parse(JSON.stringify(this.current_specificationlist.filter(function(item){
                    return item.sel;
                })));
                selarray.forEach(function(o,i){
                    that.pickspecification[that.current_pickspecification_index].items.push({id:o.id,aid:o.aid, name:o.name,parentid:o.parentid});
                });

                this.current_pickspecification_index = -1;
                this.current_pickspecification_id = -1;
                $("#addSpecValueModal").modal("hide");
            },
            changeSpecification:function(item){
                var check=this.pickspecification.filter(function(_item){
                    return _item.id!=0&&_item.id==item.id;
                });
                if(check.length>1){
                    layer.msg("不能设置重复的规格！");
                    item.id=0;
                    return;
                }
                item.items=[];
                var selitem=specificationlist.find(function(_selitem){
                    return _selitem.id==item.id;
                });
                if(selitem){
                    item.name=selitem.name;
                    item.parentid=selitem.parentid;
                }
                this.buildSpecificationTable();
            },
            setAllPrice:function(){
                var that=this;
                if(!/^\d*.?\d{0,2}$/.test(that.allPrice)){
                    layer.msg("产品价格请输入大于0的数字，最多两位小数！");
                    return;
                }
                else if(parseFloat(this.p.price)>1000000){
                    layer.msg("产品价格最高只能设置为1000000！");
                    return;
                }
                //var table=this.buildSpecificationTable();
                $(".ggtable tr:not(.gg_title)").each(function(i,o){
                    $(o).find(".price").val(that.allPrice);

                });

            },
            setAllStock:function(){
                var that=this;
                if(this.p.stockLimit){
                    if(that.allStock<=0){
                        layer.msg("限制库存时，库存不能为0");
                        return;
                    }
                }

                $(".ggtable tr:not(.gg_title)").each(function(i,o){
                    $(o).find(".stock").val(that.allStock);

                });
                this.sumStock();
            }
            /*******************************产品规格 end ********************************/
        }
    });
    function removeAttachmentFunction(file) {
        console.log(arguments);
        if(slideimg.length>0){
            slideimg.splice(file.id,1);
        }
    }

</script>