<style lang="less">
    .goods-details-wrap {
        .goods-swiper {
            width: 100%;
            height: 750rpx;
            .img {
                width: 100%;
                height: 750rpx;
                background-color: #f2f2f2;
            }
        }
        .goods-description {
            padding: 30rpx;
            .label {
                max-width: 500rpx;
                .item {
                    min-width: 100rpx; 
                    text-align: center;
                    background-color: #eee;
                    border-radius: 26rpx;
                    padding: 5rpx 10rpx;
                    margin-right: 24rpx;
                    margin-bottom: 14rpx;
                }
            }
        } 
 
        .evaluate-wrap {
            width: 100%; 
            .content { 
                .header {
                    height: 84rpx;
                    border-bottom: 1px solid #eee;
                }
            }
        }
        .detail-wrap {
            margin-top: 24rpx;
            .header {
                height: 84rpx;
                line-height: 84rpx;
                padding: 0 30rpx;
            }
            &>image {
                width: 100%;
                height: 498rpx;
                background-color: #f2f2f2;
                margin-bottom: 18rpx;
            }
            &>image:last-of-type {
                margin-bottom: 0;
            }
        }
        .bottom-bar {
            width: 750rpx;
            height: 100rpx;
            line-height: 100rpx;
            position: fixed;
            left: 0;
            bottom: 0;
            z-index: 10;
            .bottom-bar-btn {
                width: 132rpx;
                height: 100rpx;
                border-right: 1px solid #eee;
            }
        }
        .float-cart {
            position: fixed;
            right: 30rpx;
            bottom: 200rpx;
            width: 84rpx;
            height: 84rpx;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, .2);
            .cart-count {
                width: 32rpx;
                height: 32rpx;
                line-height: 32rpx;
                border-radius: 50%;
                position: absolute;
                top: 0;
                right: 0;
            }
        }
        .visible {
            visibility: visible!important;
        }
        .specification {
            transition: all 0.1s ease-in-out;
            visibility: hidden;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%; //background-color: rgba(0, 0, 0, .3);
            z-index: 12;
            .bottom {
                transform: translateY(0%)!important;
            }
            .goods-spec {
                transition: transform .20s linear 0.1s;
                transform: translateY(100%);
                bottom: 0;
                left: 0;
                width: 100%;
                .header {
                    padding: 30rpx 30rpx 50rpx 30rpx;
                    image {
                        width: 170rpx;
                        height: 170rpx;
                        background-color: #f2f2f2;
                    }
                }
                .spec-area {
                    // height: 500rpx;
                    .spec-item {
                        padding: 0 30rpx;
                        .spec-value {
                            .value-item {
                                padding: 6rpx 22rpx;
                                margin-right: 30rpx;
                                margin-bottom: 30rpx;
                                border-radius: 50rpx;
                            }
                            .default {
                                color: #333;
                                background-color: #eee;
                            }
                            .active {
                                color: #fff;
                                background-color: #FF6F30;
                            }
                        }
                        .com-counter {
                            width: 250rpx;
                            .btn-count {
                                width: 70rpx;
                                height: 50rpx;
                                border: 1px solid #aaa;
                                line-height: 50rpx;
                            }
                            .left-border-none {
                                border-left: none !important;
                            }
                            .right-border-none {
                                border-right: none !important;
                            }
                            .left-radius {
                                border-top-left-radius: 5rpx;
                                border-bottom-left-radius: 5rpx;
                            }
                            .right-radius {
                                border-top-right-radius: 5rpx;
                                border-bottom-right-radius: 5rpx;
                            }
                            .view {
                                width: 108rpx;
                                height: 50rpx;
                                border: 1px solid #aaa;
                                line-height: 50rpx;
                            }
                            .disabled {
                                border: 1px solid #d9d8d9;
                                color: #d9d8d9;
                            }
                        }
                    }
                    .spec-item:first-child {
                        margin-top: 0;
                    }
                }
            }
        }
    }
    .bg-f6 {
        background-color: #f6f6f6;
    }
    .noscroll {
        height: 100vh;
        overflow: hidden;
    }
</style>
<template leng="wxml">
    <view class="goods-details-wrap {{showSpec?'noscroll':''}} {{currentSkin}}">
        <swiper class="goods-swiper" indicator-dots="{{isDots}}" indicator-color="rgba(255,255,255,.8)" indicator-active-color="rgba(255,255,255,1)">
            <repeat for="{{goodsDetail.Slideimgs}}" key="index">
                <swiper-item>
                    <image src="{{item}}" class="img" mode="aspectFill" @tap="openSwiperImg({{index}})"></image>
                </swiper-item>
            </repeat>
        </swiper>
        <view class="goods-description bg-w">
            <view class="f">
                <view class="price f50 skin_txt t-b">￥{{goodsDetail.Price}}<text class="f26" wx:if="{{goodsDetail.Unit!=''}}">/{{goodsDetail.Unit}}</text></view>
                <!-- <view class='f22  c666 ml20' style="text-decoration:line-through;vertical-align:vertical-align">￥{{goodsDetail.OriginalPrice}}</view> -->
            </view>
            <view class="text line line2 mt40 f26">{{goodsDetail.Name}}</view>
            <view class="label f fc fw mt30"> 
                <repeat for="{{goodsDetail.PlabelStr_Arry}}" key="index">
                    <view class="item f20">{{item}}</view>
                </repeat>
            </view>
        </view>
        <!-- <view class="evaluate-wrap bg-w">
                                                                                <view class="content">
                                                                                    <view class="header f fc fj ml30 pr20 f26 ">
                                                                                        <view>商品评价(100)</view>
                                                                                        <view class="f fc c666" @tap="jumpAllEvaluate">
                                                                                            <text>查看全部</text>
                                                                                            <text class="dzicon icon-zhuanyebaniconkuozhan_Distribu2 f40 ml10"></text>
                                                                                        </view>
                                                                                    </view>
                                                                                    <comGoodsEvaluate />
                                                                                </view>
                                                                            </view> -->
        <view class="detail-wrap bg-w">
            <view class="header ">商品详情</view>
            <comRichIn :currentCom.sync="richText" pd="0" fontSize="26rpx"></comRichIn>
            <view class="h100"></view>
        </view>
        <view class="bottom-bar f fc bg-w">
            <view class="f1 f fc">
                <button class="bottom-bar-btn c666 bg-f6 f fv fc-h" open-type="contact" hover-class="none"><view class="dzicon icon-huodong f40"></view><view class="f26">客服</view></button>
                <button class="bottom-bar-btn c666 bg-f6 f fv fc-h" open-type="share" hover-class="none"><view class="dzicon icon-Forward_fenxiang f40"></view><view class="f26">转发</view></button>
            </view>
            <view class="f1 tc c666 bg-f6" data-type="0" @tap="openSpec">加入购物车</view>
            <view class="f1 buy tc skin_bg" data-type="1" @tap="openSpec">立即购买</view>
        </view>
        <!-- 购物车浮标 -->
        <view class="float-cart f fc fc-h" @tap.stop="jumpShoppingCarts">
            <view class="cart-count skin_bg cfff tc f20" wx:if="{{shopCartSum>0}}">{{shopCartSum}}</view>
            <view class="dzicon icon-Shopping5 f44 cfff"></view>
        </view>
        <!-- 选择规格弹窗 -->
        <view class="specification {{showSpec ? 'visible' : ''}}" style="transition-delay: {{showSpec ? '' : '.30s'}};">
            <view style="background-color: rgba(0, 0, 0, .3);width:100%;height:100%;" @tap.stop="closeSpec"></view>
            <view class="goods-spec abs bg-w {{showSpec ? 'bottom' : ''}}">
                <view class="header f ">
                    <view>
                        <image src="{{goodsItemPrice.ImgUrl}}" mode="aspectFill"></image>
                    </view>
                    <view class="price f fv f-end ml30">
                        <!-- <view class='f30 t-b colorFF6F30'>￥{{goodsItemPrice.DiscountPricestr}}<text wx:if="{{goodsDetail.MaxPrice>0}}">-{{goodsDetail.MaxPrice}}</text></view> -->
                        <view class="f fc">
                            <view class='f30 t-b skin_txt'>￥{{goodsItemPrice.Price}}</view>
                            <!-- <text class='f22  c666 ml20' style="text-decoration:line-through">￥{{goodsItemPrice.OriginalPrice}}</text> -->
                        </view>
                        <view class="mt40 f24" wx:if="{{goodsDetail.StockLimit}}">库存{{goodsItemPrice.Stock}}件</view>
                        <view class="mt40 f24" wx:if="{{!goodsDetail.StockLimit}}">库存充足</view>
                    </view>
                </view>
                <scroll-view class="spec-area" scroll-y style="height:{{goodsDetail.PickSpec.length==0?'120':'500'}}rpx;">
                    <repeat for="{{goodsDetail.PickSpec}}" item="SpecItem" index="SpecIndex" key="SpecIndex">
                        <view class="spec-item mt40 ">
                            <view class="f24">{{SpecItem.Name}}</view>
                            <view class="spec-value f fc fw mt30">
                                <repeat for="{{SpecItem.items}}" item="valueItem" index="valueIndex" key="valueIndex">
                                    <view class="value-item f24 {{valueItem.switch?'skin_bg':'default'}}" @tap.stop="selectSpecValue({{SpecIndex}},{{valueIndex}})">{{valueItem.Name}}</view>
                                </repeat>
                            </view>
                        </view>
                    </repeat>
                    <view class="spec-item mt40 f fj">
                        <view class="f24">数量</view>
                        <view class="com-counter bg-w cl">
                            <button class="btn-count f30 right-border-none fl f fc jc {{goodsCount.count== goodsCount.min ? 'disabled' : ''}}" disabled="{{goodsCount.count ==min}}" @tap.stop="count('sub')">-</button>
                            <view class="f26 ib view fl tc">{{goodsCount.count}}</view>
                            <button class="f fc jc fl btn-count f30  left-border-none {{goodsCount.count == goodsCount.max||goodsCount.count==0 ? 'disabled' : ''}}" disabled="{{goodsCount.count == max||goodsCount.count==0}}" @tap.stop="count('add')">+</button>
                        </view>
                    </view>
                    <view style="height:60rpx;"></view>
                </scroll-view>
                <view class="bottom-btn skin_bg hl100 tc" @tap.stop="addCarts">确定</view>
                <!-- <view class="bottom-btn hl100 tc" >暂无库存</view> -->
            </view>
        </view>
        <comWait :isShow.sync="showWait" />
    </view>
</template>
<script>
    import wepy from "wepy";
    import {
        core,
        tools,
        http
    } from "@/lib/core";
    import {
        wxParse
    } from "@/lib/wxParse/wxParse";
    import com_goodsEvaluate from "@/components/com_goodsEvaluate";
    import com_richIn from "@/components/com_richIn";
    import com_wait from "@/components/com_wait";
    export default class goodsDetails extends wepy.page {
        config = {
            navigationBarTitleText: "商品详情",
            //enablePullDownRefresh: true
        };
        components = {
            comGoodsEvaluate: com_goodsEvaluate,
            comRichIn: com_richIn,
            comWait: com_wait,
        };
        data = {
            currentSkin: '',
            isDots: true,
            pid: 0, //商品id
            goodsDetail: {},
            isSpec: false, //是否多规格
            richText: "",
            goodsCount: {
                count: 1,
                max: 10,
                min: 1,
            },
            resetCount: {
                count: 0,
                max: 0,
                min: 0,
            },
            goodsSpecDefault: {},
            goodsItemPrice: {},
            SpecValueArr: [],
            specinfo: [],
            defaultSetting: {
                attrspacstr: '', //规格ID
                specinfo: '', //商品规格 
                specimg: '', //规格图片
                goodid: 0, //商品ID
                qty: 0, //数量
                gotobuy: 0, //1：立即购买，0：添加到购物车
            },
            showSpec: false,
            shopCartSum: 0,
            showWait: true,
        };
        methods = {
            count(mode) {
                switch (mode) {
                    case "add":
                        if (this.goodsCount.count >= this.goodsCount.max) {
                            return;
                        }
                        this.goodsCount.count++;
                        break;
                    case "sub":
                        if (this.goodsCount.count <= this.goodsCount.min) {
                            return;
                        }
                        this.goodsCount.count--;
                        break;
                }
            },
            openSpec(e) {
                //console.log(e);
                let type = e.currentTarget.dataset.type;
                console.log(typeof type);
                this.defaultSetting.gotobuy = type;
                this.showSpec = true;
                if (this.isSpec == false) { //代表无规格
                    if (this.goodsDetail.StockLimit) {
                        if (this.goodsDetail.Stock == 0) {
                            this.goodsCount = this.resetCount;
                        } else if (this.goodsDetail.Stock > 0) {
                            this.goodsCount.max = this.goodsDetail.Stock;
                        }
                    } else {
                        this.goodsCount.max = 99999;
                    }
                }
            },
            closeSpec() {
                this.showSpec = false;
            },
            selectSpecValue(specIndex, valueIndex) {
                let PickSpec = this.goodsDetail.PickSpec;
                // let valueId = PickSpec[specIndex].items[valueIndex].Id;
                let currentSwitch = PickSpec[specIndex].items[valueIndex].switch;
                if (currentSwitch) {
                    PickSpec[specIndex].items[valueIndex].switch = false;
                    this.SpecValueArr[specIndex] = undefined;
                    this.specinfo[specIndex] = undefined;
                } else {
                    for (let j = 0, valueL = PickSpec[specIndex].items.length; j < valueL; j++) {
                        PickSpec[specIndex].items[j].switch = false;
                    }
                    PickSpec[specIndex].items[valueIndex].switch = true;
                    this.SpecValueArr[specIndex] = PickSpec[specIndex].items[valueIndex].Id;
                    this.specinfo[specIndex] = PickSpec[specIndex].Name + ":" + PickSpec[specIndex].items[valueIndex].Name;
                }
                let SpecValueArr = this.SpecValueArr;
                let SpecValueStr = this.SpecValueArr.join("_");
                //console.log(SpecValueStr);
                for (let i = 0; i < this.goodsDetail.GASDetailList.length; i++) {
                    if (this.goodsDetail.GASDetailList[i].Id === SpecValueStr) {
                        this.goodsItemPrice = this.goodsDetail.GASDetailList[i];
                        break;
                    }
                }
                if (this.goodsDetail.StockLimit) {
                    if (this.goodsItemPrice.Stock == 0) {
                        this.goodsCount = this.resetCount;
                    } else {
                        this.goodsCount.count = 1;
                        this.goodsCount.min = 1;
                        this.goodsCount.max = this.goodsItemPrice.Stock;
                    }
                } else {
                    console.log("不限库存")
                    this.goodsCount.count = 1;
                    this.goodsCount.min = 1;
                    this.goodsCount.max = 99999;
                }
                // if (this.goodsItemPrice.Stock == 0) {
                //     this.goodsCount = this.resetCount;
                // } else {
                //     this.goodsCount.count = 1;
                //     this.goodsCount.min = 1;
                //     this.goodsCount.max = this.goodsItemPrice.Stock;
                // }
                //取消选中的规格时显示默认图及价格
                for (let k = 0; k < this.SpecValueArr.length; k++) {
                    if (this.SpecValueArr[k] != undefined) return;
                }
                this.goodsItemPrice = this.goodsSpecDefault;
            },
            addCarts() {
                let specObj = {
                    attrspacstr: '', //规格ID
                    specinfo: '', //商品规格 
                    specimg: '', //规格图片
                    goodid: 0, //商品ID
                    qty: 0, //数量
                    //gotobuy: 0, //1：立即购买，0：添加到购物车
                };
                for (let i = 0; i < this.SpecValueArr.length; i++) {
                    if (this.SpecValueArr[i] === undefined) {
                        tools.freeToast("请选择完整规格", "none", 1200);
                        return;
                    }
                }
                specObj.attrspacstr = this.SpecValueArr.join("_")
                specObj.specinfo = this.specinfo.join(" ");
                specObj.specimg = this.goodsItemPrice.ImgUrl;
                specObj.goodid = this.pid;
                specObj.qty = this.goodsCount.count;
                for (var key in specObj) {
                    this.defaultSetting[key] = specObj[key];
                }
                if (this.isSpec == false) {
                    if (this.goodsDetail.StockLimit && this.goodsDetail.Stock == 0) {
                        tools.freeToast("抱歉，该商品暂无库存", "none", 1200);
                    } else {
                        this.addGoodsCarData();
                    }
                } else {
                    if (this.goodsDetail.GASDetailList.length == 0 && this.goodsDetail.Stock == 0) {
                        tools.freeToast("抱歉，该商品暂无库存", "none", 1200);
                    } else {
                        this.addGoodsCarData();
                    }
                }
            },
            clickLocation() {
                let sotreInfo = this.goodsDetail.storeModel;
                let location = {
                    lat: parseFloat(sotreInfo.Lat),
                    lng: parseFloat(sotreInfo.Lng),
                    name: sotreInfo.Loction
                };
                tools.openMap(location);
            },
            openSwiperImg(i) {
                let current = this.goodsDetail.Slideimgs[i];
                let list = this.goodsDetail.Slideimgs;
                console.log(current, list)
                tools.preViewShow(current, list);
            },
            jumpShoppingCarts() {
                tools.goNewPage("../../shoppingCarts/shoppingCarts-index/index");
            },
            // jumpShopDetail() {
            //     // tools.goRedirecto("../../home/shop-detail/index");
            //     tools.goTabBar("../../home/shop-detail/index");
            // },
            jumpAllEvaluate() {
                tools.goNewPage("../goods-details/allEvaluate");
            }
        }
        //封装筛选id
        chooseGoods(items, specIndex) {}
        async onLoad(option) {
            // let app = wepy.$instance.globalData;
            // console.log(app);
            tools.setThemeColor(this)
            this.pid = option.pid;
            this.getGoodsCarList();
            await this.GetGoodInfo();
            this.isSpec = this.goodsDetail.GASDetailList.length == 0 ? false : true;
            this.$apply();
        };
        //富文本预览图片
        wxParseImgTap(e) {
            let src = e.currentTarget.dataset.src;
            tools.preViewShow(src);
        };
        //获取商品详情
        async GetGoodInfo() {
            let data = await core.GetGoodInfo(this.pid);
            tools.handleResult(data, (res) => {
                this.goodsDetail = res;
                this.goodsDetail.PickSpec = JSON.parse(this.goodsDetail.PickSpec);
                this.goodsDetail.Slideimgs = this.goodsDetail.Slideimgs.split(",");
                this.richText = wxParse("content_fmt", "html", this.goodsDetail.Description || "", this, 5);
                this.goodsSpecDefault.ImgUrl = this.goodsDetail.Img;
                this.goodsSpecDefault.Stock = this.goodsDetail.Stock;
                this.goodsSpecDefault.MaxPrice = this.goodsDetail.MaxPrice;
                this.goodsSpecDefault.Price = this.goodsDetail.Price;
                this.goodsSpecDefault.OriginalPrice = this.goodsDetail.OriginalPrice;
                this.goodsSpecDefault.DiscountPricestr = this.goodsDetail.OriginalPriceStr;
                this.goodsItemPrice = this.goodsSpecDefault;
                let PickSpec = this.goodsDetail.PickSpec;
                for (let i = 0, specL = PickSpec.length; i < specL; i++) {
                    for (let j = 0, valueL = PickSpec[i].items.length; j < valueL; j++) {
                        PickSpec[i].items[j].switch = false;
                    }
                }
                this.SpecValueArr = new Array(PickSpec.length);
                this.specinfo = new Array(PickSpec.length);
                this.showWait = false;
                this.$apply();
            })
        }
        //筛选默认的商品显示数据
        // filterDefaultData(){
        //     let 
        // }
        //添加购物车
        async addGoodsCarData() {
            if (this.defaultSetting.qty > 0) {
                let data = await core.addGoodsCarData(this.defaultSetting);
                tools.handleResult(data, (res) => {
                    let isBuy = this.defaultSetting.gotobuy;
                    if (isBuy == 0) {
                        tools.freeToast('添加购物车成功', 'none', 1800);
                        this.showSpec = false;
                        this.shopCartSum = res.count;
                        this.$apply();
                    } else if (isBuy == 1) {
                        //跳转订单页
                        let discount = this.goodsDetail.Discount;
                        let orderGoodsInfo = [];
                        var goodsItemPriceFen = Number(this.goodsItemPrice.PriceFen)
                        var goodsDetailPriceFen = Number(this.goodsDetail.PriceFen)
                        var goodsItemPrice = Number(this.goodsItemPrice.Price)
                        var goodsDetailPrice = Number(this.goodsDetail.Price)
                        orderGoodsInfo[0] = {};
                        orderGoodsInfo[0].Id = res.id;
                        orderGoodsInfo[0].GoodsId = this.goodsDetail.Id;
                        orderGoodsInfo[0].GoodsName = this.goodsDetail.Name;
                        orderGoodsInfo[0].SpecImg = this.defaultSetting.specimg;
                        orderGoodsInfo[0].SpecInfo = this.defaultSetting.specinfo;
                        orderGoodsInfo[0].PriceStr = (goodsItemPrice.mul(discount.div(100))).toFixed(2)||(goodsDetailPrice.mul(discount.div(100))).toFixed(2);//折扣价
                        var PriceYuan = Number(orderGoodsInfo[0].PriceStr)
                        orderGoodsInfo[0].Price = PriceYuan.mul(100)
                        orderGoodsInfo[0].Discount =discount
                        orderGoodsInfo[0].OriginalPrice = this.goodsItemPrice.OriginalPrice*100 || this.goodsDetail.OriginalPrice*100; //原价分
                        orderGoodsInfo[0].OriginalPriceStr = this.goodsItemPrice.Price || this.goodsDetail.Price; //单买价
                        orderGoodsInfo[0].Count = this.defaultSetting.qty;
                        wx.setStorageSync("goodsList", orderGoodsInfo);
                        tools.goNewPage("../../shoppingCarts/shoppingCarts-confirmOrder/index");
                    }
                })
            } else {
                tools.freeToast('抱歉，该商品暂无库存', 'none', 2000);
            }
        }
        //获取购物车数据
        async getGoodsCarList() {
            let data = await core.getGoodsCarList();
            tools.handleResult(data, (res) => {
                this.shopCartSum = res.count;
                this.$apply();
            })
        }
        onShareAppMessage() {
            const title = this.goodsDetail.Name;
            const pid = this.pid;
            return {
                title: title,
                path: "/pages/selected/goods-details/index?pid=" + pid,
                success: function(res) {
                    console.log(res)
                    //core.wxToast("分享成功");
                },
            };
        }
    }
</script>
