<style lang="less">
.private-letter {
  .her,
  .mine {
    padding-top: 60rpx;
    &:last-child {
      padding-bottom: 60rpx
    }
  }
  .avator {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    background-color: rgba(217, 216, 217, 1);
  }

  .chat {
    width: 430rpx;
    min-height: 100rpx;
    border-radius: 30rpx;
    padding: 30rpx;
    line-height: 1.3;
    word-break: break-word;
    white-space: wrap;
  }

  .arrow_box {
    position: relative;
  }

  .left_arrow:before {
    right: 100%;
    top: 50rpx;
    border: solid transparent;
    content: " ";
    height: 0; 
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  .right_arrow:before {
    left: 100%;
    top: 54rpx;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  .right_arrow:before {
    border-color: rgba(194, 225, 245, 0);
    border-left-color: rgba(238, 238, 238, 1);
    border-width: 14rpx;
    margin-top: -14rpx;
  }

  .left_arrow:before {
    border-color: rgba(194, 225, 245, 0);
    border-right-color: #fff;
    border-width: 14rpx;
    margin-top: -14rpx;
  }
  .bg-gray {
    background: rgba(238, 238, 238, 1);
  }
  .bottom-input {
    width: 100%;
    height: 100rpx;
    position: fixed;
    bottom: 0;
    input {
      width: 710rpx;
      height: 60rpx;
      line-height: 60rpx;
      padding: 0 30rpx;
      background: rgba(238, 238, 238, 1);
      border-radius: 30rpx;
    }
  }
  .bg {
    width: 100%;
    height: 91.5vh;
  }
}
</style>
<template>
    <view class="private-letter">
        <scroll-view class="bg"  scroll-y="true" scroll-into-view="msg{{vm.lastids}}" enable-back-to-top="true" scroll-with-animation="true" bindscrolltoupper="loadMore">
          <view class="pw30">
            <repeat wx:for="{{vm.list}}" wx:key="{{index}}">
              <view class="mine f fe" wx:if="{{item.fuserId == fuserInfo.userid}}" id="msg{{item.ids}}">
                  <view class="mr30 chat bg-gray arrow_box  right_arrow">
                      <text class="ib tr">{{item.msg}}</text>
                  </view>
                  <image class="avator" src="{{fuserInfo.avator}}"></image>
              </view>
              <view class="her f flex-start" wx:else>
                  <image class="avator mr30" src="{{tuserInfo.avator}}"></image>
                  <view class="chat bg-w arrow_box  left_arrow">
                      <text class="ib tl">{{item.msg}}</text>
                  </view>
              </view>
            </repeat>
          </view>
        </scroll-view>
        <view class="bottom-input bg-w f jc fc">
          <input  cursor-spacing="50" type="text" confirm-type="send" @confirm="sendMsg"  value="{{msg}}" placeholder="请输入..." />
        </view>
        <comWait wx:if="{{isWait}}" />
    </view>
</template>
<script>
import wepy from "wepy";
import { core, tools } from "@/lib/core";
import com_wait from '@/components/com_wait'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: ""
  };


  components = {
    comWait: com_wait
  }

  data = {
    isWait: false,
    vm: {
      list: [],
      lastids: ''
    },
    fuserInfo: {
      // Id: '',
      // ImgUrl: '',
      // UserId: '',
      userid: '',
      avator: '',
      name: ''
    },
    tuserInfo: {
      userid: '',
      avator: "",
      name: ''
    },
    msg: "",
    isLoadAll: false,
    preid: 0
  }

  methods = {
    async sendMsg (e) {
      var aid = await core.getAid()
      this.msg = e.detail.value
      var sendObj = {
        appid: wepy.$instance.globalData.appid,
        aid: aid,
        fuserId: this.fuserInfo.userid,
        tuserId: this.tuserInfo.userid,
        msgType: 0,
        msg: this.msg,
        tuserType: 0
      }
      core.sendMessage(sendObj)
      this.setData({
        msg: ''
      })
    }
  }

  async loadMore() {
    if (this.isLoadAll) {
      wx.showToast({
        icon: 'none',
        title: '加载完啦'
      })
      return
    }
    this.isWait  = true
    await this.getHistoryC(this.preid)
    this.isWait  = false
    this.$apply()
  }

  async onLoad(query) {
    console.log(query)
    this.injectToUserInfo(query).injectFromUserInfo()
    tools.setPageTitle(this.tuserInfo.name)
    await core.addContact(this.tuserInfo.userid)
    this.isWait = true
    await this.getHistoryC(0)
    this.isWait = false
    this.$apply()
  }

  //方法名最后一个字母有C代表它是控制器（controller）
  async getHistoryC(lastId) {
    var model = this
    var result = await core.getHistory(this.tuserInfo.userid, lastId)
    if (result.isok) {
      var data = result.data
      if (data.length == 0) {
        return;
      }
      if (data.length < 20) {
        model.isLoadAll = true
      }
      model.preid = data[data.length - 1].Id
      model.vm.lastids = data[data.length -1].ids
      model.vm.list = data.concat(model.vm.list) 
    } else {
      tools.showModalCancle(result.msg)
    } 
  }

  async injectFromUserInfo() {
    var vm = this
    var result = await core.getMyCard()
    tools.handleResult(result, (res) => {
      vm.fuserInfo.userid = res.UserId
      vm.fuserInfo.avator = res.ImgUrl
      vm.fuserInfo.name = res.Name
      console.log(res)
    })
  }

  injectToUserInfo(data) {
    if ('userid' in data) {
      for (var key in this.tuserInfo) {
        this.tuserInfo[key] = data[key]
      }
    }
    return this;
  }



}
</script>
