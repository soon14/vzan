<style lang="less">
.my-card {
  /*头部卡片*/
  .header {
    background: #3fd983 no-repeat;
    height: 200rpx;
    position: relative;
    .card {
      padding: 30rpx;
      width: 690rpx;
      height: 380rpx;
      background: rgba(255, 255, 255, 1);
      border-radius: 12rpx;
      box-shadow: 1rpx 9rpx 35rpx rgba(58, 58, 58, 0.16);
      position: absolute;
      top: 0rpx;
      left: 50%;
      margin-left: -345rpx;
      .top {
        border-bottom: 1px solid #eee;
        padding-bottom: 30rpx;
      }
      .bottom {
        margin-top: 30rpx;
        .btn-goShop {
          width: 180rpx;
          height: 90rpx;
          background: rgba(63, 217, 131, 1);
          border-radius: 45rpx;
          text-align: center;
          line-height: 90rpx;
          .text {
            margin-right: 17rpx;
          }
          .icon {
            width: 32rpx;
            height: 32rpx;
            background-color: #fff;
            border-radius: 50%;
            color: #3fd983;
            display: inline-block;
            line-height: 32rpx;
            font-size: 32rpx;
          }
        }
      }
      .avator {
        width: 169rpx;
        height: 169rpx;
        background: rgba(217, 216, 217, 1);
        border-radius: 50%;
      }
    }
  }

  /*有关社交*/
  .social {
    background-color: #f6f6f6;
    padding-top: 179rpx;
    .popularity {
      margin: 65rpx 0;
    }
    .btn-list {
      margin-bottom: 70rpx;
      .btn {
        width: 180rpx;
        height: 90rpx;
        border-radius: 45rpx;
        line-height: 85rpx;
        text-align: center;
      }
      .gb {
        border: 1px solid #d9d8d9;
      }
      .ob {
        border: 1px solid #ff6f30;
      }
    }
  }
  .cD9D8D9 {
    color: #d9d8d9;
  }
  .cFF6F30 {
    color: #ff6f30;
  }
  .activity {
    width: 100%;
    .tab {
      height: 100rpx;
      flex-wrap: nowrap;
      .tab-item {
        height: 100rpx;
        line-height: 100rpx;
        text-align: center;
        width: 50%;
      }
      .tab-active-color {
        color: #000;
      }
    }
    .list {
      min-height: 500rpx;
      padding-bottom: 144rpx;
      .null_ {
        margin-top: 167rpx;
      }
      .item {
        width: 100%;
        margin-bottom: 30rpx;
        padding-right: 30rpx;
        border-bottom: 1px solid #eee;
        .ptos {
          .pto {
            width: 224rpx;
            height: 232rpx;
            background: rgba(217, 216, 217, 1);
            margin-right: 9rpx;
            margin-bottom: 9rpx;
            &:nth-child(3n) {
              margin-right: 0rpx;
            }
          }
        }
      }
    }
  }

  .btn-bottom {
    border-top: 1px solid #eee;
    height: 100rpx;
    position: fixed;
    width: 100%;
    bottom: 0;
    .btn-base {
      width: 224rpx;
      height: 78rpx;
      border-radius: 39rpx;
      line-height: 78rpx;
      text-align: center;
      font-size: 30rpx;
    }
    .btn-base-big {
      width: 457rpx;
      height: 78rpx;
      background: #fff;
      border-radius: 39rpx;
      line-height: 78rpx;
      text-align: center;
      font-size: 30rpx;
      color: #3fd983;
      border: 1px solid #3fd983;
    }
    .btn-send {
      background-color: #3fd983;
      color: #fff;
      &:after {
        border: none;
      }
    }
    .btn-sync {
      border: 1px solid #d9d8d9;
      color: #666;
      margin-right: 22rpx;
    }
  }
  .mt18 {
    margin-top: 0rpx;
  }
  .height129 {
    height: 129rpx;
  }
  .mb0imp {
    margin-bottom: 0 !important;
  }
  .comment {
    line-height: 1.2;
    margin: 5rpx 0;
  }
}
</style>
<template>
  <view class="my-card">
    <view class="header">
      <view class="card">
        <view class="wrap">
          <!-- 上部分 -->
          <view class="top f fj">
            <view class="left f fv fj wp65">
              <view class="f fv">
                <text class="f40 c000 t-b ib ellipsis">{{cardInfo.Name}}</text>
                <text class="f26 c666 mt10 ib ellipsis">
                  <text class="mr10">{{cardInfo.Department}}</text>
                  <text>{{cardInfo.Job}}</text>
                </text>
              </view>
              <view class="f30 c333 ellipsis">{{showPhone}}</view>
            </view>
            <view class="right">
              <image class="avator" src="{{cardInfo.ImgUrl}}"></image>
            </view>
          </view>
          <!-- 下部分 -->
          <view class="bottom f fc fj">
            <view class="f fv f26 wp65">
              <text class="c333 ib ellipsis">{{cardInfo.CompanyName}}</text>
              <text class="c666 mt8 ib ellipsis">{{cardInfo.Address}}</text>
            </view>
            <view class="btn-goShop f26">
              <text class="cfff text">进店</text>
              <text class="icon dzicon icon-zhuanyebaniconkuozhan_Distribu2"></text>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="social">
      <view class="popularity lh18 tc f26 c666">
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.ViewCount}}</text>
          <text>人气</text>
        </text>
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.DzCount}}</text>
          <text>点赞</text>
        </text>
        <text class="mw15 ib">
          <text class="cFF6F30 mr10">{{cardInfo.FollowCount}}</text>
          <text>关注</text>
        </text>
      </view>
      <view class="btn-list lh18 tc">
        <button wx:if="{{!isLike}}" class="btn gb ib mw25 c666 f30" @tap="switchLike">
          <text class="dzicon f36 mr25 cD9D8D9  icon-zhuanyebaniconkuozhan_Recommen"></text>
          <text class="ib">点赞</text>
        </button>
        <button wx:if="{{isLike}}" class="btn ib ob mw25 cFF6F30 f30" @tap="switchLike">
          <text class="dzicon f36 mr25 cFF6F30  icon-zhuanyebaniconkuozhan_Recommen1"></text>
          <text class="ib">已赞</text>
        </button>
        <button wx:if="{{!isAttention}}" class="btn ib mw25 gb c666 f30" @tap="switchAttention">
          <text class="dzicon f40 mr20 cD9D8D9  icon-icon-test"></text>
          <text class="ib">关注</text>
        </button>
        <button wx:if="{{isAttention}}" class="btn ib mw25 ob cFF6F30 f30" @tap="switchAttention">
          <text class="dzicon  f40 mr10 cFF6F30  icon-five-star"></text>
          <text class="ib">已关注</text>
        </button>
        <button class="btn ib mw25 gb c666 f30" open-type="share">
          <text class="dzicon f32 mr25 cD9D8D9  icon-zhuanyebaniconkuozhan_share"></text>
          <text class="ib">分享</text>
        </button>
      </view>
      <view class="bg-w activity">
        <view class="f30 c666 tab f j">
          <view class="tab-item t-b {{activeTabIndex == 0 ? 'tab-active-color' : ''}}" @tap="switchTab(0)">TA的动态</view>
          <view class="tab-item t-b {{activeTabIndex == 1 ? 'tab-active-color' : ''}}" @tap="switchTab(1)">TA的活动轨迹</view>
        </view>
        <view wx:if="{{activeTabIndex == 0}}" class="list pl30 bg-w">
          <view class="item" wx:for="{{hisActivity.list}}" wx:key="{{index}}" @tap="goMsgDetail({{item.Id}}, {{item.MyCardId}})">
            <view class="lh13 c000 mb15 wb">
              <text class="c666 mr10">##{{item.MsgTypeName}}##</text>
              <text>{{item.MsgDetail}}</text>
            </view>
            <view class="ptos cl">
              <image class="pto fl" src="{{this}}" wx:for-item="this" wx:for-index="key" data-index="{{index}}" data-src="{{this}}"
                wx:for="{{item.ImgList}}" wx:key="{{key}}"></image>
            </view>
            <view class="location lh18 f20 c666 ellipsis mb10">
              {{item.Location}}
            </view>
            <view class="f fj f26 c666">
              <view class="heg80 fg1 tc f fc jc" @tap="goMegDetail">
                <text class="dzicon f30 mr20 icon-liulanliang cD9D8D9"></text>
                <text>{{item.ViewCount}}</text>
              </view>
              <view class="heg80 fg1 tc f fc jc" @tap="goMegDetail">
                <text class="dzicon f30 mr20  cD9D8D9 icon-zhuanyebaniconkuozhan_Consulta1"></text>
                <text>{{item.CommentCount}}</text>
              </view>
              <view class="heg80 fg1 tc f fc jc" @tap="addLike({{item.Id}}, {{index}})">
                <text class="dzicon f30 mr20 icon-aixin {{item.IsDzed ? 'cFF6F30' : 'cD9D8D9'}}"></text>
                <text>{{item.DzCount == 0 ? '赞' : item.DzCount}}</text>
              </view>
            </view>
          </view>
          <view wx:if="{{hisActivity.totalCount == 0}}" class="tc lh15 c333 f30 null_ pr30">暂无数据</view>
        </view>
        <view wx:if="{{activeTabIndex == 1}}" class="list pl30 bg-w">
          <!-- 活动轨迹 -->
          <view class="item mb0imp" wx:for="{{hisActivityLog.list}}" wx:key="{{index}}" @tap="goLogDetail({{item.Datatype}}, {{item.OtherUserId}}, {{item.OtherCardId}}, {{item.MsgId}})">
            <view class="f fj fc height129">
              <view class="my-track fc wp70 f">
                <image class="wh100r mr15 fs" src="{{item.MyImgUrl}}"></image>
                <view class="f fv jc c666 wp85">
                  <text class="f26 ib ellipsis">
                    <text class="mr10">{{item.MyName}}</text>
                    <text class="mr10">{{item.ActionTypeStr}}</text>
                    <text class="c333">{{item.OtherName}}</text>
                  </text>
                  <!-- data type 3: 名片  0: 帖子 -->
                  <text wx:if="{{item.Datatype == 3 || item.Datatype == 0 && item.DataComment == ''}}" class="f20 mt10">{{item.AddTimeStr}}</text>
                  <!-- 评论才有 -->
                  <block wx:if="{{item.Datatype == 0 && item.DataComment != ''}}">
                    <view class="f20 ellipsisLine2 comment c333">{{item.DataComment}}</view>
                    <text class="f20">{{item.AddTimeStr}}</text>
                  </block>
                </view>
              </view>
              <image wx:if="{{item.Datatype == 3}}" class="wh100r" src="{{item.OtherImgUrl}}"></image>
              <block wx:if="{{item.Datatype == 0}}">
                <!-- 假如有图片的话 -->
                <image wx:if="{{item.DataImgUrl}}" src="{{item.DataImgUrl}}" class="wh100g"></image>
                <view wx:else class="wh100 c333 f20 p10 ellipsisLine3 lh15">{{item.DataContent}}</view>
              </block>
            </view>
          </view>
          <view wx:if="{{hisActivityLog.count == 0}}" class="tc lh15 c333 f30 null_ pr30">暂无数据</view>
        </view>
      </view>
    </view>
    <comWait :isShow.sync="isWait" />
    <view class="btn-bottom bg-w f fc pl30" wx:if="{{!isMe}}">
      <button class="btn-send btn-base mr10" @tap="sendMsg">
        发私信
      </button> 
      <button class="btn-sync btn-base" @tap="addPhoneContact">
        同步到手机
      </button> 
      <view class="f fv jc fc f26 mr40 c666">
        <text class="dzicon icon-businesscard_mingpianma lh088 f60"></text>
        <text class="mt18">名片码</text>
      </view>
      <view class="f fv jc fc f26 c666" @tap="goConnect">
        <text class="dzicon icon-fenxiaozhongxin f47"></text>
        <text class="mt18">人脉圈</text>
      </view>
    </view>
    <view class="btn-bottom bg-w f fc pl30" wx:if="{{isMe}}">
      <button class="btn-base-big mr20" @tap="updateCard">
        编辑名片
      </button>
      <view class="f fv jc fc f26 mr40 c666">
        <text class="dzicon icon-businesscard_mingpianma lh088 f60"></text>
        <text class="mt18">名片码</text>
      </view>
      <view class="f fv jc fc f26 c666" @tap="goConnect">
        <text class="dzicon icon-fenxiaozhongxin f47"></text>
        <text class="mt18">人脉圈</text>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from "wepy";
import com_wait from "@/components/com_wait";
import { tools, http, core } from "@/lib/core";
import addr from "@/lib/addr";
const app = wepy.$instance;

export default class index extends wepy.page {
  config = {
    navigationBarBackgroundColor: "#3FD983",
    navigationBarTitleText: "名片",
    enablePullDownRefresh: false,
    navigationBarTextStyle: "#fff",
    enablePullDownRefresh: true
  };
  components = {
    comWait: com_wait
  };
  data = {
    isWait: false,
    isLike: false,
    isAttention: false,
    activeTabIndex: 0,
    //接口怼过来的
    cardInfo: {
      Name: "",
      Job: "",
      ImgUrl: "",
      Address: "",
      Department: "",
      Phone: "",
      CompanyName: "",
      DzCount: 0, //点赞
      ViewCount: 0, //看过
      FavoriteCount: 0, //收藏
      FollowCount: 0, //关注
      Id: 0, //名片ID
      HiddenPhone: -1
    },
    //Ta的活动
    hisActivity: {
      totalCount: 0,
      list: []
    },
    hisActivityLog: {
      count: 0,
      list: []
    },
    otherId: 0,
    isMe: false
  };

  methods = {
    goLogDetail(type, userId, cardId ,msgId) {
      var url = ''
      if (type == 3) {
        url = './index?someoneId=' + userId
      }
      if (type == 0) {
        url = '../../classify/classify-details/index' + "?msgid=" + msgId + '&cardid=' + cardId
      }
      console.log(url)
      tools.goNewPage(url)
    },
    updateCard() {
      tools.goNewPage("../../join/my/updateCard");
    },
    switchAttention() {
      var vm = this;
      vm.isWait = true;
      core.addDynamic(
        2,
        vm.cardInfo.Id,
        function() {
          vm.isAttention = !vm.isAttention;
          vm.isAttention
            ? vm.cardInfo.FollowCount++
            : vm.cardInfo.FollowCount--;
          vm.isWait = false;
        },
        vm
      );
    },
    switchLike() {
      var vm = this;
      vm.isWait = true;
      core.addDynamic(
        1,
        vm.cardInfo.Id,
        function() {
          vm.isLike = !vm.isLike;
          vm.isLike ? vm.cardInfo.DzCount++ : vm.cardInfo.DzCount--;
          vm.isWait = false;
        },
        vm
      );
    },
    goMsgDetail(msgId, cardId) {
      tools.goNewPage(
        "../../classify/classify-details/index?msgid=" +
          msgId +
          "&cardid=" +
          cardId
      );
    },
    addLike(Id, index) {
      var item = this.hisActivity.list[index];
      this.isWait = true;
      console.log(Id);
      core.addDynamic(
        1,
        Id,
        function(res) {
          var state = res.dataObj.curState;
          if (state == -1) {
            item.IsDzed = false;
            item.DzCount--;
          } else {
            item.IsDzed = true;
            item.DzCount++;
          }
          this.isWait = false;
        },
        this,
        0
      );
    },
    switchTab(index) {
      this.activeTabIndex = index;
    },
    sendMsg() {
      tools.goNewPage(
        "../private-letter/index?userid=" +
          this.otherId +
          "&name=" +
          this.cardInfo.Name +
          "&avator=" +
          this.cardInfo.ImgUrl
      );
    },
    addPhoneContact() {
      if (this.cardInfo.HiddenPhone == -1) {
        wx.showToast({
          icon: 'none',
          title: '该用户没公布手机号'
        })
        return;
      }
      wx.addPhoneContact({
        nickName: this.cardInfo.Name,
        mobilePhoneNumber: this.cardInfo.Phone,
        success: () => {
          wx.showToast({
            icon: 'success',
            title: '添加成功'
          })
        }
      });
    },
    goConnect() {
      wx.reLaunch({
        url: '../../connected/connected-index/index'
      })
    }
  };

  //需要改动
  onShareAppMessage(options) {
    return {
      title: this.cardInfo.Name,
      path: "pages/connected/connected-detail/index?someoneId=" + this.otherId,
      success: () => {
        console.log("转发成功");
      }
    };
  }

  onLoad(query) {
    console.log(query);
    this.otherId = query.someoneId;
    this.getCard(query.someoneId);
  }

  async getCard(someoneId) {
    var vm = this;
    var globalData = app.globalData;

    var userInfo = await core.getUserInfo();
    var aid = await core.getAid();
    var myUserId = userInfo.Id;

    //起点
    vm.isWait = true;

    http
      .post(addr.GetMyCard, {
        appid: globalData.appid,
        myuserid: userInfo.Id, //我的userid
        userid: someoneId, //名片的userid
        aid: aid,
        sessionKey: userInfo.loginSessionKey
      })
      .then(res => {
        if (!res.isok) {
          tools.showModalCancle(res.Msg);
          vm.isWait = false;
          return;
        }

        var json = res.dataObj;

        if (myUserId == json.UserId) {
          vm.isMe = true;
        }

        for (var key in vm.cardInfo) {
          vm.cardInfo[key] = json[key];
        }

        vm.isLike = json.IsDz;
        vm.isAttention = json.IsFollow;

        //添加看过量
        core.addDynamic(
          3,
          vm.cardInfo.Id,
          function(res) {
            if (res.dataObj) {
              vm.cardInfo["ViewCount"]++;
            }
            vm.isWait = false;
          },
          vm
        );

        //获取TA的动态
        vm.getMyAct(vm.cardInfo.Id, globalData.appid);
        vm.getActivityLogC(json.UserId);
      });
  }

  getMyAct(cardId, appId) {
    var vm = this;
    http
      .get(addr.GetMsgByUserId, {
        appid: appId,
        mycardId: cardId
      })
      .then(res => {
        if (res.isok) {
          vm.hisActivity = res.dataObj;
          vm.addCommentCount(vm.hisActivity.list);
        } else {
          tools.showModalCancel(res.Msg);
        }
        vm.$apply();
      });
  }

  async getActivityLogC(userid) {
    var vm = this;
    var result = await core.getActivityLog(userid);
    tools.handleResult(result, res => {
      console.log(res, "我的活动轨迹");
      vm.hisActivityLog = res;
    });
  }

  //增加评论条数
  addCommentCount(arr) {
    arr.forEach((val, index) => {
      val.Comments != null && Array.isArray(val.Comments)
        ? (val.CommentCount = val.Comments.length)
        : (val.CommentCount = 0);
    });
  }

  onShow() {
    var isRefresh = wx.getStorageSync("editSuccess");
    if (isRefresh) {
      wx.removeStorageSync("editSuccess");
      //回顶部
      tools.onPageScroll();
      this.getCard(this.otherId);
    }
  }

  async onPullDownRefresh() {
    wx.showNavigationBarLoading();
    await this.getCard(this.otherId);
    wx.hideNavigationBarLoading();
    wx.stopPullDownRefresh();
  }

  computed = {
    showPhone() {
      return this.cardInfo.HiddenPhone == -1 ? this.encrypt(this.cardInfo.Phone) : this.cardInfo.Phone
    }
  };

  encrypt(val) {
    var valList = String(val).split(""),
      cryptIndexs = [3, 4, 5, 6],
      i = 0,
      index;
    while ((index = cryptIndexs[i++])) {
      valList[index] = "*";
    }
    return valList.join("");
  }
}
</script>
